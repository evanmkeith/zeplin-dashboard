import {
  require_a_callable,
  require_array_method_is_strict,
  require_array_sort,
  require_axios,
  require_base,
  require_classof_raw,
  require_common,
  require_create_non_enumerable_property,
  require_define_built_in,
  require_descriptors,
  require_engine_user_agent,
  require_engine_v8_version,
  require_es_array_concat,
  require_es_array_filter,
  require_es_array_for_each,
  require_es_array_from,
  require_es_array_iterator,
  require_es_array_map,
  require_es_function_name,
  require_es_object_create,
  require_es_object_define_properties,
  require_es_object_define_property,
  require_es_object_get_own_property_descriptor,
  require_es_object_get_own_property_descriptors,
  require_es_object_get_prototype_of,
  require_es_object_keys,
  require_es_object_set_prototype_of,
  require_es_object_to_string,
  require_es_promise,
  require_es_reflect_construct,
  require_es_regexp_exec,
  require_es_regexp_to_string,
  require_es_string_iterator,
  require_es_string_replace,
  require_es_symbol,
  require_es_symbol_description,
  require_es_symbol_iterator,
  require_export,
  require_fails,
  require_function_uncurry_this,
  require_global,
  require_has_own_property,
  require_indexed_object,
  require_inherit_if_required,
  require_internal_state,
  require_is_forced,
  require_is_object,
  require_length_of_array_like,
  require_models,
  require_notifications_api,
  require_object_assign,
  require_object_define_property,
  require_object_get_own_property_names,
  require_object_is_prototype_of,
  require_regexp_get_flags,
  require_regexp_sticky_helpers,
  require_regexp_unsupported_dot_all,
  require_regexp_unsupported_ncg,
  require_runtime,
  require_set_species,
  require_to_indexed_object,
  require_to_object,
  require_to_string,
  require_try_to_string,
  require_web_dom_collections_for_each,
  require_web_dom_collections_iterator,
  require_web_url,
  require_well_known_symbol
} from "./chunk-U5H2K4BK.js";
import {
  __commonJS
} from "./chunk-NKHIPFFU.js";

// node_modules/@zeplin/sdk/dist/apis/authorization-api.js
var require_authorization_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/authorization-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_promise();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.AuthorizationApiFp = exports.AuthorizationApiAxiosParamCreator = exports.AuthorizationApi = void 0;
    require_runtime();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var AuthorizationApiAxiosParamCreator = function AuthorizationApiAxiosParamCreator2(configuration) {
      return {
        oAuthAuthorize: function oAuthAuthorize(responseType, clientId, redirectUri, state, codeChallenge, codeChallengeMethod) {
          var options = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : {};
          (0, _common.assertParamExists)("oAuthAuthorize", "responseType", responseType);
          (0, _common.assertParamExists)("oAuthAuthorize", "clientId", clientId);
          (0, _common.assertParamExists)("oAuthAuthorize", "redirectUri", redirectUri);
          var localVarPath = "/v1/oauth/authorize";
          var localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
          var baseOptions;
          if (configuration) {
            baseOptions = configuration.baseOptions;
          }
          var localVarRequestOptions = _objectSpread(_objectSpread({
            method: "GET"
          }, baseOptions), options);
          var localVarHeaderParameter = {};
          var localVarQueryParameter = {};
          if (responseType !== void 0) {
            localVarQueryParameter["response_type"] = responseType;
          }
          if (clientId !== void 0) {
            localVarQueryParameter["client_id"] = clientId;
          }
          if (redirectUri !== void 0) {
            localVarQueryParameter["redirect_uri"] = redirectUri;
          }
          if (state !== void 0) {
            localVarQueryParameter["state"] = state;
          }
          if (codeChallenge !== void 0) {
            localVarQueryParameter["code_challenge"] = codeChallenge;
            localVarQueryParameter["code_challenge_method"] = "S256";
          }
          if (codeChallengeMethod !== void 0) {
            localVarQueryParameter["code_challenge_method"] = codeChallengeMethod;
          }
          (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
          var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
          localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
          return {
            url: (0, _common.toPathString)(localVarUrlObj),
            options: localVarRequestOptions
          };
        },
        oAuthPostToken: function oAuthPostToken(tokenCreateBody) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          (0, _common.assertParamExists)("oAuthPostToken", "tokenCreateBody", tokenCreateBody);
          var localVarPath = "/v1/oauth/token";
          var localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
          var baseOptions;
          if (configuration) {
            baseOptions = configuration.baseOptions;
          }
          var localVarRequestOptions = _objectSpread(_objectSpread({
            method: "POST"
          }, baseOptions), options);
          var localVarHeaderParameter = {};
          var localVarQueryParameter = {};
          localVarHeaderParameter["Content-Type"] = "application/json";
          (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
          var headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
          localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
          localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformTokenCreateBodyToJSON)(tokenCreateBody), localVarRequestOptions, configuration);
          return {
            url: (0, _common.toPathString)(localVarUrlObj),
            options: localVarRequestOptions
          };
        }
      };
    };
    exports.AuthorizationApiAxiosParamCreator = AuthorizationApiAxiosParamCreator;
    var AuthorizationApiFp = function AuthorizationApiFp2(configuration) {
      var localVarAxiosParamCreator = AuthorizationApiAxiosParamCreator(configuration);
      return {
        oAuthPostToken: function oAuthPostToken(tokenCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return localVarAxiosParamCreator.oAuthPostToken(tokenCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context.sent;
                    return _context.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        }
      };
    };
    exports.AuthorizationApiFp = AuthorizationApiFp;
    var AuthorizationApi = function(_BaseAPI) {
      _inherits(AuthorizationApi2, _BaseAPI);
      var _super = _createSuper(AuthorizationApi2);
      function AuthorizationApi2() {
        _classCallCheck(this, AuthorizationApi2);
        return _super.apply(this, arguments);
      }
      _createClass(AuthorizationApi2, [{
        key: "getAuthorizationUrl",
        value: function getAuthorizationUrl(searchParams, options) {
          var paramCreator = AuthorizationApiAxiosParamCreator(this.configuration);
          var params = paramCreator.oAuthAuthorize("code", searchParams.clientId, searchParams.redirectUri, searchParams.state, searchParams.codeChallenge, searchParams.codeChallengeMethod, options);
          return this.axios.getUri(_objectSpread(_objectSpread({}, params.options), {}, {
            url: this.basePath + params.url
          }));
        }
      }, {
        key: "createToken",
        value: function() {
          var _createToken = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(params, options) {
            var authorizationApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    authorizationApiFp = AuthorizationApiFp(this.configuration);
                    _context2.next = 3;
                    return authorizationApiFp.oAuthPostToken(_objectSpread(_objectSpread({}, params), {}, {
                      grantType: "authorization_code"
                    }), options);
                  case 3:
                    request = _context2.sent;
                    _context2.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context2.sent;
                    return _context2.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToTokenResponse)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2, this);
          }));
          function createToken(_x, _x2) {
            return _createToken.apply(this, arguments);
          }
          return createToken;
        }()
      }, {
        key: "refreshToken",
        value: function() {
          var _refreshToken = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(params, options) {
            var authorizationApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    authorizationApiFp = AuthorizationApiFp(this.configuration);
                    _context3.next = 3;
                    return authorizationApiFp.oAuthPostToken(_objectSpread(_objectSpread({}, params), {}, {
                      grantType: "refresh_token"
                    }), options);
                  case 3:
                    request = _context3.sent;
                    _context3.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context3.sent;
                    return _context3.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToTokenResponse)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3, this);
          }));
          function refreshToken(_x3, _x4) {
            return _refreshToken.apply(this, arguments);
          }
          return refreshToken;
        }()
      }]);
      return AuthorizationApi2;
    }(_base.BaseAPI);
    exports.AuthorizationApi = AuthorizationApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/colors-api.js
var require_colors_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/colors-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ColorsApiFp = exports.ColorsApiAxiosParamCreator = exports.ColorsApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var ColorsApiAxiosParamCreator = function ColorsApiAxiosParamCreator2(configuration) {
      return {
        createProjectColor: function() {
          var _createProjectColor = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId, colorCreateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 2 && _args[2] !== void 0 ? _args[2] : {};
                    (0, _common.assertParamExists)("createProjectColor", "projectId", projectId);
                    (0, _common.assertParamExists)("createProjectColor", "colorCreateBody", colorCreateBody);
                    localVarPath = "/v1/projects/{project_id}/colors".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformColorCreateBodyToJSON)(colorCreateBody), localVarRequestOptions, configuration);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function createProjectColor(_x, _x2) {
            return _createProjectColor.apply(this, arguments);
          }
          return createProjectColor;
        }(),
        createStyleguideColor: function() {
          var _createStyleguideColor = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(styleguideId, colorCreateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 2 && _args2[2] !== void 0 ? _args2[2] : {};
                    (0, _common.assertParamExists)("createStyleguideColor", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("createStyleguideColor", "colorCreateBody", colorCreateBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}/colors".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context2.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformColorCreateBodyToJSON)(colorCreateBody), localVarRequestOptions, configuration);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function createStyleguideColor(_x3, _x4) {
            return _createStyleguideColor.apply(this, arguments);
          }
          return createStyleguideColor;
        }(),
        getProjectColors: function() {
          var _getProjectColors = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(projectId, limit, offset, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 4 && _args3[4] !== void 0 ? _args3[4] : {};
                    (0, _common.assertParamExists)("getProjectColors", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/colors".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context3.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function getProjectColors(_x5, _x6, _x7, _x8) {
            return _getProjectColors.apply(this, arguments);
          }
          return getProjectColors;
        }(),
        getStyleguideColors: function() {
          var _getStyleguideColors = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 6 && _args4[6] !== void 0 ? _args4[6] : {};
                    (0, _common.assertParamExists)("getStyleguideColors", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/colors".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context4.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function getStyleguideColors(_x9, _x10, _x11, _x12, _x13, _x14) {
            return _getStyleguideColors.apply(this, arguments);
          }
          return getStyleguideColors;
        }(),
        updateProjectColor: function() {
          var _updateProjectColor = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(projectId, colorId, colorUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 3 && _args5[3] !== void 0 ? _args5[3] : {};
                    (0, _common.assertParamExists)("updateProjectColor", "projectId", projectId);
                    (0, _common.assertParamExists)("updateProjectColor", "colorId", colorId);
                    (0, _common.assertParamExists)("updateProjectColor", "colorUpdateBody", colorUpdateBody);
                    localVarPath = "/v1/projects/{project_id}/colors{color_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("color_id", "}"), encodeURIComponent(String(colorId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context5.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformColorUpdateBodyToJSON)(colorUpdateBody), localVarRequestOptions, configuration);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function updateProjectColor(_x15, _x16, _x17) {
            return _updateProjectColor.apply(this, arguments);
          }
          return updateProjectColor;
        }(),
        updateStyleguideColor: function() {
          var _updateStyleguideColor = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(styleguideId, colorId, colorUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 3 && _args6[3] !== void 0 ? _args6[3] : {};
                    (0, _common.assertParamExists)("updateStyleguideColor", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("updateStyleguideColor", "colorId", colorId);
                    (0, _common.assertParamExists)("updateStyleguideColor", "colorUpdateBody", colorUpdateBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}/colors/{color_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("color_id", "}"), encodeURIComponent(String(colorId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context6.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformColorUpdateBodyToJSON)(colorUpdateBody), localVarRequestOptions, configuration);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function updateStyleguideColor(_x18, _x19, _x20) {
            return _updateStyleguideColor.apply(this, arguments);
          }
          return updateStyleguideColor;
        }()
      };
    };
    exports.ColorsApiAxiosParamCreator = ColorsApiAxiosParamCreator;
    var ColorsApiFp = function ColorsApiFp2(configuration) {
      var localVarAxiosParamCreator = ColorsApiAxiosParamCreator(configuration);
      return {
        createProjectColor: function createProjectColor(projectId, colorCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    _context7.next = 2;
                    return localVarAxiosParamCreator.createProjectColor(projectId, colorCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context7.sent;
                    return _context7.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }))();
        },
        createStyleguideColor: function createStyleguideColor(styleguideId, colorCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    _context8.next = 2;
                    return localVarAxiosParamCreator.createStyleguideColor(styleguideId, colorCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context8.sent;
                    return _context8.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }))();
        },
        getProjectColors: function getProjectColors(projectId, limit, offset, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    _context9.next = 2;
                    return localVarAxiosParamCreator.getProjectColors(projectId, limit, offset, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context9.sent;
                    return _context9.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }))();
        },
        getStyleguideColors: function getStyleguideColors(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    _context10.next = 2;
                    return localVarAxiosParamCreator.getStyleguideColors(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context10.sent;
                    return _context10.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }))();
        },
        updateProjectColor: function updateProjectColor(projectId, colorId, colorUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    _context11.next = 2;
                    return localVarAxiosParamCreator.updateProjectColor(projectId, colorId, colorUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context11.sent;
                    return _context11.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }))();
        },
        updateStyleguideColor: function updateStyleguideColor(styleguideId, colorId, colorUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    _context12.next = 2;
                    return localVarAxiosParamCreator.updateStyleguideColor(styleguideId, colorId, colorUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context12.sent;
                    return _context12.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }))();
        }
      };
    };
    exports.ColorsApiFp = ColorsApiFp;
    var ColorsApi = function(_BaseAPI) {
      _inherits(ColorsApi2, _BaseAPI);
      var _super = _createSuper(ColorsApi2);
      function ColorsApi2() {
        _classCallCheck(this, ColorsApi2);
        return _super.apply(this, arguments);
      }
      _createClass(ColorsApi2, [{
        key: "createProjectColor",
        value: function() {
          var _createProjectColor2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(projectId, colorCreateBody, options) {
            var colorsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    colorsApiFp = ColorsApiFp(this.configuration);
                    _context13.next = 3;
                    return colorsApiFp.createProjectColor(projectId, colorCreateBody, options);
                  case 3:
                    request = _context13.sent;
                    _context13.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context13.sent;
                    return _context13.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13, this);
          }));
          function createProjectColor(_x21, _x22, _x23) {
            return _createProjectColor2.apply(this, arguments);
          }
          return createProjectColor;
        }()
      }, {
        key: "createStyleguideColor",
        value: function() {
          var _createStyleguideColor2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14(styleguideId, colorCreateBody, options) {
            var colorsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    colorsApiFp = ColorsApiFp(this.configuration);
                    _context14.next = 3;
                    return colorsApiFp.createStyleguideColor(styleguideId, colorCreateBody, options);
                  case 3:
                    request = _context14.sent;
                    _context14.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context14.sent;
                    return _context14.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14, this);
          }));
          function createStyleguideColor(_x24, _x25, _x26) {
            return _createStyleguideColor2.apply(this, arguments);
          }
          return createStyleguideColor;
        }()
      }, {
        key: "getProjectColors",
        value: function() {
          var _getProjectColors2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(projectId) {
            var searchParams, options, colorsApiFp, request, response, _args15 = arguments;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    searchParams = _args15.length > 1 && _args15[1] !== void 0 ? _args15[1] : {};
                    options = _args15.length > 2 ? _args15[2] : void 0;
                    colorsApiFp = ColorsApiFp(this.configuration);
                    _context15.next = 5;
                    return colorsApiFp.getProjectColors(projectId, searchParams.limit, searchParams.offset, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context15.sent;
                    _context15.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context15.sent;
                    return _context15.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToColor)
                    }));
                  case 10:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15, this);
          }));
          function getProjectColors(_x27) {
            return _getProjectColors2.apply(this, arguments);
          }
          return getProjectColors;
        }()
      }, {
        key: "getStyleguideColors",
        value: function() {
          var _getStyleguideColors2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(styleguideId) {
            var searchParams, options, colorsApiFp, request, response, _args16 = arguments;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    searchParams = _args16.length > 1 && _args16[1] !== void 0 ? _args16[1] : {};
                    options = _args16.length > 2 ? _args16[2] : void 0;
                    colorsApiFp = ColorsApiFp(this.configuration);
                    _context16.next = 5;
                    return colorsApiFp.getStyleguideColors(styleguideId, searchParams.limit, searchParams.offset, searchParams.linkedProject, searchParams.linkedStyleguide, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context16.sent;
                    _context16.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context16.sent;
                    return _context16.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToColor)
                    }));
                  case 10:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16, this);
          }));
          function getStyleguideColors(_x28) {
            return _getStyleguideColors2.apply(this, arguments);
          }
          return getStyleguideColors;
        }()
      }, {
        key: "updateProjectColor",
        value: function() {
          var _updateProjectColor2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(projectId, colorId, colorUpdateBody, options) {
            var colorsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    colorsApiFp = ColorsApiFp(this.configuration);
                    _context17.next = 3;
                    return colorsApiFp.updateProjectColor(projectId, colorId, colorUpdateBody, options);
                  case 3:
                    request = _context17.sent;
                    _context17.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context17.sent;
                    return _context17.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17, this);
          }));
          function updateProjectColor(_x29, _x30, _x31, _x32) {
            return _updateProjectColor2.apply(this, arguments);
          }
          return updateProjectColor;
        }()
      }, {
        key: "updateStyleguideColor",
        value: function() {
          var _updateStyleguideColor2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee18(styleguideId, colorId, colorUpdateBody, options) {
            var colorsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    colorsApiFp = ColorsApiFp(this.configuration);
                    _context18.next = 3;
                    return colorsApiFp.updateStyleguideColor(styleguideId, colorId, colorUpdateBody, options);
                  case 3:
                    request = _context18.sent;
                    _context18.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context18.sent;
                    return _context18.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18, this);
          }));
          function updateStyleguideColor(_x33, _x34, _x35, _x36) {
            return _updateStyleguideColor2.apply(this, arguments);
          }
          return updateStyleguideColor;
        }()
      }]);
      return ColorsApi2;
    }(_base.BaseAPI);
    exports.ColorsApi = ColorsApi;
  }
});

// node_modules/core-js/internals/delete-property-or-throw.js
var require_delete_property_or_throw = __commonJS({
  "node_modules/core-js/internals/delete-property-or-throw.js"(exports, module) {
    "use strict";
    var tryToString = require_try_to_string();
    var $TypeError = TypeError;
    module.exports = function(O, P) {
      if (!delete O[P])
        throw $TypeError("Cannot delete property " + tryToString(P) + " of " + tryToString(O));
    };
  }
});

// node_modules/core-js/internals/engine-ff-version.js
var require_engine_ff_version = __commonJS({
  "node_modules/core-js/internals/engine-ff-version.js"(exports, module) {
    var userAgent = require_engine_user_agent();
    var firefox = userAgent.match(/firefox\/(\d+)/i);
    module.exports = !!firefox && +firefox[1];
  }
});

// node_modules/core-js/internals/engine-is-ie-or-edge.js
var require_engine_is_ie_or_edge = __commonJS({
  "node_modules/core-js/internals/engine-is-ie-or-edge.js"(exports, module) {
    var UA = require_engine_user_agent();
    module.exports = /MSIE|Trident/.test(UA);
  }
});

// node_modules/core-js/internals/engine-webkit-version.js
var require_engine_webkit_version = __commonJS({
  "node_modules/core-js/internals/engine-webkit-version.js"(exports, module) {
    var userAgent = require_engine_user_agent();
    var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
    module.exports = !!webkit && +webkit[1];
  }
});

// node_modules/core-js/modules/es.array.sort.js
var require_es_array_sort = __commonJS({
  "node_modules/core-js/modules/es.array.sort.js"() {
    "use strict";
    var $ = require_export();
    var uncurryThis = require_function_uncurry_this();
    var aCallable = require_a_callable();
    var toObject = require_to_object();
    var lengthOfArrayLike = require_length_of_array_like();
    var deletePropertyOrThrow = require_delete_property_or_throw();
    var toString = require_to_string();
    var fails = require_fails();
    var internalSort = require_array_sort();
    var arrayMethodIsStrict = require_array_method_is_strict();
    var FF = require_engine_ff_version();
    var IE_OR_EDGE = require_engine_is_ie_or_edge();
    var V8 = require_engine_v8_version();
    var WEBKIT = require_engine_webkit_version();
    var test = [];
    var nativeSort = uncurryThis(test.sort);
    var push = uncurryThis(test.push);
    var FAILS_ON_UNDEFINED = fails(function() {
      test.sort(void 0);
    });
    var FAILS_ON_NULL = fails(function() {
      test.sort(null);
    });
    var STRICT_METHOD = arrayMethodIsStrict("sort");
    var STABLE_SORT = !fails(function() {
      if (V8)
        return V8 < 70;
      if (FF && FF > 3)
        return;
      if (IE_OR_EDGE)
        return true;
      if (WEBKIT)
        return WEBKIT < 603;
      var result = "";
      var code, chr, value, index;
      for (code = 65; code < 76; code++) {
        chr = String.fromCharCode(code);
        switch (code) {
          case 66:
          case 69:
          case 70:
          case 72:
            value = 3;
            break;
          case 68:
          case 71:
            value = 4;
            break;
          default:
            value = 2;
        }
        for (index = 0; index < 47; index++) {
          test.push({ k: chr + index, v: value });
        }
      }
      test.sort(function(a, b) {
        return b.v - a.v;
      });
      for (index = 0; index < test.length; index++) {
        chr = test[index].k.charAt(0);
        if (result.charAt(result.length - 1) !== chr)
          result += chr;
      }
      return result !== "DGBEFHACIJK";
    });
    var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;
    var getSortCompare = function(comparefn) {
      return function(x, y) {
        if (y === void 0)
          return -1;
        if (x === void 0)
          return 1;
        if (comparefn !== void 0)
          return +comparefn(x, y) || 0;
        return toString(x) > toString(y) ? 1 : -1;
      };
    };
    $({ target: "Array", proto: true, forced: FORCED }, {
      sort: function sort(comparefn) {
        if (comparefn !== void 0)
          aCallable(comparefn);
        var array = toObject(this);
        if (STABLE_SORT)
          return comparefn === void 0 ? nativeSort(array) : nativeSort(array, comparefn);
        var items = [];
        var arrayLength = lengthOfArrayLike(array);
        var itemsLength, index;
        for (index = 0; index < arrayLength; index++) {
          if (index in array)
            push(items, array[index]);
        }
        internalSort(items, getSortCompare(comparefn));
        itemsLength = lengthOfArrayLike(items);
        index = 0;
        while (index < itemsLength)
          array[index] = items[index++];
        while (index < arrayLength)
          deletePropertyOrThrow(array, index++);
        return array;
      }
    });
  }
});

// node_modules/@zeplin/sdk/dist/apis/components-api.js
var require_components_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/components-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ComponentsApiFp = exports.ComponentsApiAxiosParamCreator = exports.ComponentsApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_sort();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var ComponentsApiAxiosParamCreator = function ComponentsApiAxiosParamCreator2(configuration) {
      return {
        getProjectComponent: function() {
          var _getProjectComponent = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId, componentId, includeLatestVersion, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 4 && _args[4] !== void 0 ? _args[4] : {};
                    (0, _common.assertParamExists)("getProjectComponent", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectComponent", "componentId", componentId);
                    localVarPath = "/v1/projects/{project_id}/components/{component_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("component_id", "}"), encodeURIComponent(String(componentId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (includeLatestVersion !== void 0) {
                      localVarQueryParameter["include_latest_version"] = includeLatestVersion;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getProjectComponent(_x, _x2, _x3, _x4) {
            return _getProjectComponent.apply(this, arguments);
          }
          return getProjectComponent;
        }(),
        getProjectComponentLatestVersion: function() {
          var _getProjectComponentLatestVersion = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(projectId, componentId, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 3 && _args2[3] !== void 0 ? _args2[3] : {};
                    (0, _common.assertParamExists)("getProjectComponentLatestVersion", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectComponentLatestVersion", "componentId", componentId);
                    localVarPath = "/v1/projects/{project_id}/components/{component_id}/versions/latest".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("component_id", "}"), encodeURIComponent(String(componentId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context2.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getProjectComponentLatestVersion(_x5, _x6, _x7) {
            return _getProjectComponentLatestVersion.apply(this, arguments);
          }
          return getProjectComponentLatestVersion;
        }(),
        getProjectComponentSections: function() {
          var _getProjectComponentSections = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(projectId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 3 && _args3[3] !== void 0 ? _args3[3] : {};
                    (0, _common.assertParamExists)("getProjectComponentSections", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/component_sections".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context3.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function getProjectComponentSections(_x8, _x9, _x10) {
            return _getProjectComponentSections.apply(this, arguments);
          }
          return getProjectComponentSections;
        }(),
        getProjectComponents: function() {
          var _getProjectComponents = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(projectId, sectionId, sort, includeLatestVersion, includeLinkedStyleguides, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 7 && _args4[7] !== void 0 ? _args4[7] : {};
                    (0, _common.assertParamExists)("getProjectComponents", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/components".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context4.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (sectionId !== void 0) {
                      localVarQueryParameter["section_id"] = sectionId;
                    }
                    if (sort !== void 0) {
                      localVarQueryParameter["sort"] = sort;
                    }
                    if (includeLatestVersion !== void 0) {
                      localVarQueryParameter["include_latest_version"] = includeLatestVersion;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 22:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function getProjectComponents(_x11, _x12, _x13, _x14, _x15, _x16, _x17) {
            return _getProjectComponents.apply(this, arguments);
          }
          return getProjectComponents;
        }(),
        getStyleguideComponent: function() {
          var _getStyleguideComponent = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(styleguideId, componentId, linkedProject, linkedStyleguide, includeLatestVersion, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 6 && _args5[6] !== void 0 ? _args5[6] : {};
                    (0, _common.assertParamExists)("getStyleguideComponent", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("getStyleguideComponent", "componentId", componentId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/components/{component_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("component_id", "}"), encodeURIComponent(String(componentId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context5.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    if (includeLatestVersion !== void 0) {
                      localVarQueryParameter["include_latest_version"] = includeLatestVersion;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function getStyleguideComponent(_x18, _x19, _x20, _x21, _x22, _x23) {
            return _getStyleguideComponent.apply(this, arguments);
          }
          return getStyleguideComponent;
        }(),
        getStyleguideComponentLatestVersion: function() {
          var _getStyleguideComponentLatestVersion = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(styleguideId, componentId, linkedProject, linkedStyleguide, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 5 && _args6[5] !== void 0 ? _args6[5] : {};
                    (0, _common.assertParamExists)("getStyleguideComponentLatestVersion", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("getStyleguideComponentLatestVersion", "componentId", componentId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/components/{component_id}/versions/latest".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("component_id", "}"), encodeURIComponent(String(componentId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context6.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function getStyleguideComponentLatestVersion(_x24, _x25, _x26, _x27, _x28) {
            return _getStyleguideComponentLatestVersion.apply(this, arguments);
          }
          return getStyleguideComponentLatestVersion;
        }(),
        getStyleguideComponentSections: function() {
          var _getStyleguideComponentSections = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(styleguideId, limit, offset, linkedProject, linkedStyleguide) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args7 = arguments;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    options = _args7.length > 5 && _args7[5] !== void 0 ? _args7[5] : {};
                    (0, _common.assertParamExists)("getStyleguideComponentSections", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/component_sections".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context7.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context7.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context7.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }));
          function getStyleguideComponentSections(_x29, _x30, _x31, _x32, _x33) {
            return _getStyleguideComponentSections.apply(this, arguments);
          }
          return getStyleguideComponentSections;
        }(),
        getStyleguideComponents: function() {
          var _getStyleguideComponents = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(styleguideId, sectionId, sort, linkedProject, linkedStyleguide, includeLinkedStyleguides, includeLatestVersion, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args8 = arguments;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    options = _args8.length > 9 && _args8[9] !== void 0 ? _args8[9] : {};
                    (0, _common.assertParamExists)("getStyleguideComponents", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/components".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context8.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context8.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (sectionId !== void 0) {
                      localVarQueryParameter["section_id"] = sectionId;
                    }
                    if (sort !== void 0) {
                      localVarQueryParameter["sort"] = sort;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    if (includeLatestVersion !== void 0) {
                      localVarQueryParameter["include_latest_version"] = includeLatestVersion;
                    }
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context8.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 24:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }));
          function getStyleguideComponents(_x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42) {
            return _getStyleguideComponents.apply(this, arguments);
          }
          return getStyleguideComponents;
        }(),
        updateProjectComponent: function() {
          var _updateProjectComponent = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(projectId, componentId, componentUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args9 = arguments;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    options = _args9.length > 3 && _args9[3] !== void 0 ? _args9[3] : {};
                    (0, _common.assertParamExists)("updateProjectComponent", "projectId", projectId);
                    (0, _common.assertParamExists)("updateProjectComponent", "componentId", componentId);
                    (0, _common.assertParamExists)("updateProjectComponent", "componentUpdateBody", componentUpdateBody);
                    localVarPath = "/v1/projects/{project_id}/components/{component_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("component_id", "}"), encodeURIComponent(String(componentId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context9.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context9.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformComponentUpdateBodyToJSON)(componentUpdateBody), localVarRequestOptions, configuration);
                    return _context9.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }));
          function updateProjectComponent(_x43, _x44, _x45) {
            return _updateProjectComponent.apply(this, arguments);
          }
          return updateProjectComponent;
        }(),
        updateStyleguideComponent: function() {
          var _updateStyleguideComponent = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(styleguideId, componentId, componentUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args10 = arguments;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    options = _args10.length > 3 && _args10[3] !== void 0 ? _args10[3] : {};
                    (0, _common.assertParamExists)("updateStyleguideComponent", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("updateStyleguideComponent", "componentId", componentId);
                    (0, _common.assertParamExists)("updateStyleguideComponent", "componentUpdateBody", componentUpdateBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}/components/{component_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("component_id", "}"), encodeURIComponent(String(componentId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context10.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context10.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformComponentUpdateBodyToJSON)(componentUpdateBody), localVarRequestOptions, configuration);
                    return _context10.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }));
          function updateStyleguideComponent(_x46, _x47, _x48) {
            return _updateStyleguideComponent.apply(this, arguments);
          }
          return updateStyleguideComponent;
        }()
      };
    };
    exports.ComponentsApiAxiosParamCreator = ComponentsApiAxiosParamCreator;
    var ComponentsApiFp = function ComponentsApiFp2(configuration) {
      var localVarAxiosParamCreator = ComponentsApiAxiosParamCreator(configuration);
      return {
        getProjectComponent: function getProjectComponent(projectId, componentId, includeLatestVersion, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    _context11.next = 2;
                    return localVarAxiosParamCreator.getProjectComponent(projectId, componentId, includeLatestVersion, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context11.sent;
                    return _context11.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }))();
        },
        getProjectComponentLatestVersion: function getProjectComponentLatestVersion(projectId, componentId, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    _context12.next = 2;
                    return localVarAxiosParamCreator.getProjectComponentLatestVersion(projectId, componentId, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context12.sent;
                    return _context12.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }))();
        },
        getProjectComponentSections: function getProjectComponentSections(projectId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee13() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    _context13.next = 2;
                    return localVarAxiosParamCreator.getProjectComponentSections(projectId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context13.sent;
                    return _context13.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }))();
        },
        getProjectComponents: function getProjectComponents(projectId, sectionId, sort, includeLatestVersion, includeLinkedStyleguides, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee14() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    _context14.next = 2;
                    return localVarAxiosParamCreator.getProjectComponents(projectId, sectionId, sort, includeLatestVersion, includeLinkedStyleguides, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context14.sent;
                    return _context14.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }))();
        },
        getStyleguideComponent: function getStyleguideComponent(styleguideId, componentId, linkedProject, linkedStyleguide, includeLatestVersion, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee15() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    _context15.next = 2;
                    return localVarAxiosParamCreator.getStyleguideComponent(styleguideId, componentId, linkedProject, linkedStyleguide, includeLatestVersion, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context15.sent;
                    return _context15.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15);
          }))();
        },
        getStyleguideComponentLatestVersion: function getStyleguideComponentLatestVersion(styleguideId, componentId, linkedProject, linkedStyleguide, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee16() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    _context16.next = 2;
                    return localVarAxiosParamCreator.getStyleguideComponentLatestVersion(styleguideId, componentId, linkedProject, linkedStyleguide, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context16.sent;
                    return _context16.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16);
          }))();
        },
        getStyleguideComponentSections: function getStyleguideComponentSections(styleguideId, limit, offset, linkedProject, linkedStyleguide, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee17() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    _context17.next = 2;
                    return localVarAxiosParamCreator.getStyleguideComponentSections(styleguideId, limit, offset, linkedProject, linkedStyleguide, options);
                  case 2:
                    localVarAxiosArgs = _context17.sent;
                    return _context17.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17);
          }))();
        },
        getStyleguideComponents: function getStyleguideComponents(styleguideId, sectionId, sort, linkedProject, linkedStyleguide, includeLinkedStyleguides, includeLatestVersion, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee18() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    _context18.next = 2;
                    return localVarAxiosParamCreator.getStyleguideComponents(styleguideId, sectionId, sort, linkedProject, linkedStyleguide, includeLinkedStyleguides, includeLatestVersion, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context18.sent;
                    return _context18.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18);
          }))();
        },
        updateProjectComponent: function updateProjectComponent(projectId, componentId, componentUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee19() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee19$(_context19) {
              while (1) {
                switch (_context19.prev = _context19.next) {
                  case 0:
                    _context19.next = 2;
                    return localVarAxiosParamCreator.updateProjectComponent(projectId, componentId, componentUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context19.sent;
                    return _context19.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context19.stop();
                }
              }
            }, _callee19);
          }))();
        },
        updateStyleguideComponent: function updateStyleguideComponent(styleguideId, componentId, componentUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee20() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    _context20.next = 2;
                    return localVarAxiosParamCreator.updateStyleguideComponent(styleguideId, componentId, componentUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context20.sent;
                    return _context20.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20);
          }))();
        }
      };
    };
    exports.ComponentsApiFp = ComponentsApiFp;
    var ComponentsApi = function(_BaseAPI) {
      _inherits(ComponentsApi2, _BaseAPI);
      var _super = _createSuper(ComponentsApi2);
      function ComponentsApi2() {
        _classCallCheck(this, ComponentsApi2);
        return _super.apply(this, arguments);
      }
      _createClass(ComponentsApi2, [{
        key: "getProjectComponent",
        value: function() {
          var _getProjectComponent2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee21(projectId, componentId) {
            var searchParams, options, componentsApiFp, request, response, _args21 = arguments;
            return regeneratorRuntime.wrap(function _callee21$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    searchParams = _args21.length > 2 && _args21[2] !== void 0 ? _args21[2] : {};
                    options = _args21.length > 3 ? _args21[3] : void 0;
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context21.next = 5;
                    return componentsApiFp.getProjectComponent(projectId, componentId, searchParams.includeLatestVersion, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context21.sent;
                    _context21.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context21.sent;
                    return _context21.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToComponent)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee21, this);
          }));
          function getProjectComponent(_x49, _x50) {
            return _getProjectComponent2.apply(this, arguments);
          }
          return getProjectComponent;
        }()
      }, {
        key: "getProjectComponentLatestVersion",
        value: function() {
          var _getProjectComponentLatestVersion2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee22(projectId, componentId) {
            var searchParams, options, componentsApiFp, request, response, _args22 = arguments;
            return regeneratorRuntime.wrap(function _callee22$(_context22) {
              while (1) {
                switch (_context22.prev = _context22.next) {
                  case 0:
                    searchParams = _args22.length > 2 && _args22[2] !== void 0 ? _args22[2] : {};
                    options = _args22.length > 3 ? _args22[3] : void 0;
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context22.next = 5;
                    return componentsApiFp.getProjectComponentLatestVersion(projectId, componentId, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context22.sent;
                    _context22.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context22.sent;
                    return _context22.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToComponentVersion)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context22.stop();
                }
              }
            }, _callee22, this);
          }));
          function getProjectComponentLatestVersion(_x51, _x52) {
            return _getProjectComponentLatestVersion2.apply(this, arguments);
          }
          return getProjectComponentLatestVersion;
        }()
      }, {
        key: "getProjectComponentSections",
        value: function() {
          var _getProjectComponentSections2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee23(projectId) {
            var searchParams, options, componentsApiFp, request, response, _args23 = arguments;
            return regeneratorRuntime.wrap(function _callee23$(_context23) {
              while (1) {
                switch (_context23.prev = _context23.next) {
                  case 0:
                    searchParams = _args23.length > 1 && _args23[1] !== void 0 ? _args23[1] : {};
                    options = _args23.length > 2 ? _args23[2] : void 0;
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context23.next = 5;
                    return componentsApiFp.getProjectComponentSections(projectId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context23.sent;
                    _context23.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context23.sent;
                    return _context23.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToComponentSection)
                    }));
                  case 10:
                  case "end":
                    return _context23.stop();
                }
              }
            }, _callee23, this);
          }));
          function getProjectComponentSections(_x53) {
            return _getProjectComponentSections2.apply(this, arguments);
          }
          return getProjectComponentSections;
        }()
      }, {
        key: "getProjectComponents",
        value: function() {
          var _getProjectComponents2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee24(projectId) {
            var searchParams, options, componentsApiFp, request, response, _args24 = arguments;
            return regeneratorRuntime.wrap(function _callee24$(_context24) {
              while (1) {
                switch (_context24.prev = _context24.next) {
                  case 0:
                    searchParams = _args24.length > 1 && _args24[1] !== void 0 ? _args24[1] : {};
                    options = _args24.length > 2 ? _args24[2] : void 0;
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context24.next = 5;
                    return componentsApiFp.getProjectComponents(projectId, searchParams.sectionId, searchParams.sort, searchParams.includeLatestVersion, searchParams.includeLinkedStyleguides, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context24.sent;
                    _context24.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context24.sent;
                    return _context24.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToComponent)
                    }));
                  case 10:
                  case "end":
                    return _context24.stop();
                }
              }
            }, _callee24, this);
          }));
          function getProjectComponents(_x54) {
            return _getProjectComponents2.apply(this, arguments);
          }
          return getProjectComponents;
        }()
      }, {
        key: "getStyleguideComponent",
        value: function() {
          var _getStyleguideComponent2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee25(styleguideId, componentId) {
            var searchParams, options, componentsApiFp, request, response, _args25 = arguments;
            return regeneratorRuntime.wrap(function _callee25$(_context25) {
              while (1) {
                switch (_context25.prev = _context25.next) {
                  case 0:
                    searchParams = _args25.length > 2 && _args25[2] !== void 0 ? _args25[2] : {};
                    options = _args25.length > 3 ? _args25[3] : void 0;
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context25.next = 5;
                    return componentsApiFp.getStyleguideComponent(styleguideId, componentId, searchParams.linkedProject, searchParams.linkedStyleguide, searchParams.includeLatestVersion, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context25.sent;
                    _context25.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context25.sent;
                    return _context25.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToComponent)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context25.stop();
                }
              }
            }, _callee25, this);
          }));
          function getStyleguideComponent(_x55, _x56) {
            return _getStyleguideComponent2.apply(this, arguments);
          }
          return getStyleguideComponent;
        }()
      }, {
        key: "getStyleguideComponentLatestVersion",
        value: function() {
          var _getStyleguideComponentLatestVersion2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee26(styleguideId, componentId) {
            var searchParams, options, componentsApiFp, request, response, _args26 = arguments;
            return regeneratorRuntime.wrap(function _callee26$(_context26) {
              while (1) {
                switch (_context26.prev = _context26.next) {
                  case 0:
                    searchParams = _args26.length > 2 && _args26[2] !== void 0 ? _args26[2] : {};
                    options = _args26.length > 3 ? _args26[3] : void 0;
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context26.next = 5;
                    return componentsApiFp.getStyleguideComponentLatestVersion(styleguideId, componentId, searchParams.linkedProject, searchParams.linkedStyleguide, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context26.sent;
                    _context26.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context26.sent;
                    return _context26.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToComponentVersion)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context26.stop();
                }
              }
            }, _callee26, this);
          }));
          function getStyleguideComponentLatestVersion(_x57, _x58) {
            return _getStyleguideComponentLatestVersion2.apply(this, arguments);
          }
          return getStyleguideComponentLatestVersion;
        }()
      }, {
        key: "getStyleguideComponentSections",
        value: function() {
          var _getStyleguideComponentSections2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee27(styleguideId) {
            var searchParams, options, componentsApiFp, request, response, _args27 = arguments;
            return regeneratorRuntime.wrap(function _callee27$(_context27) {
              while (1) {
                switch (_context27.prev = _context27.next) {
                  case 0:
                    searchParams = _args27.length > 1 && _args27[1] !== void 0 ? _args27[1] : {};
                    options = _args27.length > 2 ? _args27[2] : void 0;
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context27.next = 5;
                    return componentsApiFp.getStyleguideComponentSections(styleguideId, searchParams.limit, searchParams.offset, searchParams.linkedProject, searchParams.linkedStyleguide, options);
                  case 5:
                    request = _context27.sent;
                    _context27.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context27.sent;
                    return _context27.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToComponentSection)
                    }));
                  case 10:
                  case "end":
                    return _context27.stop();
                }
              }
            }, _callee27, this);
          }));
          function getStyleguideComponentSections(_x59) {
            return _getStyleguideComponentSections2.apply(this, arguments);
          }
          return getStyleguideComponentSections;
        }()
      }, {
        key: "getStyleguideComponents",
        value: function() {
          var _getStyleguideComponents2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee28(styleguideId) {
            var searchParams, options, componentsApiFp, request, response, _args28 = arguments;
            return regeneratorRuntime.wrap(function _callee28$(_context28) {
              while (1) {
                switch (_context28.prev = _context28.next) {
                  case 0:
                    searchParams = _args28.length > 1 && _args28[1] !== void 0 ? _args28[1] : {};
                    options = _args28.length > 2 ? _args28[2] : void 0;
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context28.next = 5;
                    return componentsApiFp.getStyleguideComponents(styleguideId, searchParams.sectionId, searchParams.sort, searchParams.linkedProject, searchParams.linkedStyleguide, searchParams.includeLinkedStyleguides, searchParams.includeLatestVersion, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context28.sent;
                    _context28.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context28.sent;
                    return _context28.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToComponent)
                    }));
                  case 10:
                  case "end":
                    return _context28.stop();
                }
              }
            }, _callee28, this);
          }));
          function getStyleguideComponents(_x60) {
            return _getStyleguideComponents2.apply(this, arguments);
          }
          return getStyleguideComponents;
        }()
      }, {
        key: "updateProjectComponent",
        value: function() {
          var _updateProjectComponent2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee29(projectId, componentId, componentUpdateBody, options) {
            var componentsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee29$(_context29) {
              while (1) {
                switch (_context29.prev = _context29.next) {
                  case 0:
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context29.next = 3;
                    return componentsApiFp.updateProjectComponent(projectId, componentId, componentUpdateBody, options);
                  case 3:
                    request = _context29.sent;
                    _context29.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context29.sent;
                    return _context29.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context29.stop();
                }
              }
            }, _callee29, this);
          }));
          function updateProjectComponent(_x61, _x62, _x63, _x64) {
            return _updateProjectComponent2.apply(this, arguments);
          }
          return updateProjectComponent;
        }()
      }, {
        key: "updateStyleguideComponent",
        value: function() {
          var _updateStyleguideComponent2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee30(styleguideId, componentId, componentUpdateBody, options) {
            var componentsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee30$(_context30) {
              while (1) {
                switch (_context30.prev = _context30.next) {
                  case 0:
                    componentsApiFp = ComponentsApiFp(this.configuration);
                    _context30.next = 3;
                    return componentsApiFp.updateStyleguideComponent(styleguideId, componentId, componentUpdateBody, options);
                  case 3:
                    request = _context30.sent;
                    _context30.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context30.sent;
                    return _context30.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context30.stop();
                }
              }
            }, _callee30, this);
          }));
          function updateStyleguideComponent(_x65, _x66, _x67, _x68) {
            return _updateStyleguideComponent2.apply(this, arguments);
          }
          return updateStyleguideComponent;
        }()
      }]);
      return ComponentsApi2;
    }(_base.BaseAPI);
    exports.ComponentsApi = ComponentsApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/connected-components-api.js
var require_connected_components_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/connected-components-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ConnectedComponentsApiFp = exports.ConnectedComponentsApiAxiosParamCreator = exports.ConnectedComponentsApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var ConnectedComponentsApiAxiosParamCreator = function ConnectedComponentsApiAxiosParamCreator2(configuration) {
      return {
        getProjectConnectedComponents: function() {
          var _getProjectConnectedComponents = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId, limit, offset, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 4 && _args[4] !== void 0 ? _args[4] : {};
                    (0, _common.assertParamExists)("getProjectConnectedComponents", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/connected_components".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getProjectConnectedComponents(_x, _x2, _x3, _x4) {
            return _getProjectConnectedComponents.apply(this, arguments);
          }
          return getProjectConnectedComponents;
        }(),
        getStyleguideConnectedComponents: function() {
          var _getStyleguideConnectedComponents = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 6 && _args2[6] !== void 0 ? _args2[6] : {};
                    (0, _common.assertParamExists)("getStyleguideConnectedComponents", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/connected_components".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context2.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getStyleguideConnectedComponents(_x5, _x6, _x7, _x8, _x9, _x10) {
            return _getStyleguideConnectedComponents.apply(this, arguments);
          }
          return getStyleguideConnectedComponents;
        }()
      };
    };
    exports.ConnectedComponentsApiAxiosParamCreator = ConnectedComponentsApiAxiosParamCreator;
    var ConnectedComponentsApiFp = function ConnectedComponentsApiFp2(configuration) {
      var localVarAxiosParamCreator = ConnectedComponentsApiAxiosParamCreator(configuration);
      return {
        getProjectConnectedComponents: function getProjectConnectedComponents(projectId, limit, offset, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    _context3.next = 2;
                    return localVarAxiosParamCreator.getProjectConnectedComponents(projectId, limit, offset, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context3.sent;
                    return _context3.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }))();
        },
        getStyleguideConnectedComponents: function getStyleguideConnectedComponents(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    _context4.next = 2;
                    return localVarAxiosParamCreator.getStyleguideConnectedComponents(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context4.sent;
                    return _context4.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }))();
        }
      };
    };
    exports.ConnectedComponentsApiFp = ConnectedComponentsApiFp;
    var ConnectedComponentsApi = function(_BaseAPI) {
      _inherits(ConnectedComponentsApi2, _BaseAPI);
      var _super = _createSuper(ConnectedComponentsApi2);
      function ConnectedComponentsApi2() {
        _classCallCheck(this, ConnectedComponentsApi2);
        return _super.apply(this, arguments);
      }
      _createClass(ConnectedComponentsApi2, [{
        key: "getProjectConnectedComponents",
        value: function() {
          var _getProjectConnectedComponents2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(projectId) {
            var searchParams, options, connectedComponentsApiFp, request, response, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    searchParams = _args5.length > 1 && _args5[1] !== void 0 ? _args5[1] : {};
                    options = _args5.length > 2 ? _args5[2] : void 0;
                    connectedComponentsApiFp = ConnectedComponentsApiFp(this.configuration);
                    _context5.next = 5;
                    return connectedComponentsApiFp.getProjectConnectedComponents(projectId, searchParams.limit, searchParams.offset, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context5.sent;
                    _context5.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context5.sent;
                    return _context5.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToConnectedComponent)
                    }));
                  case 10:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5, this);
          }));
          function getProjectConnectedComponents(_x11) {
            return _getProjectConnectedComponents2.apply(this, arguments);
          }
          return getProjectConnectedComponents;
        }()
      }, {
        key: "getStyleguideConnectedComponents",
        value: function() {
          var _getStyleguideConnectedComponents2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(styleguideId) {
            var searchParams, options, connectedComponentsApiFp, request, response, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    searchParams = _args6.length > 1 && _args6[1] !== void 0 ? _args6[1] : {};
                    options = _args6.length > 2 ? _args6[2] : void 0;
                    connectedComponentsApiFp = ConnectedComponentsApiFp(this.configuration);
                    _context6.next = 5;
                    return connectedComponentsApiFp.getStyleguideConnectedComponents(styleguideId, searchParams.limit, searchParams.offset, searchParams.linkedProject, searchParams.linkedStyleguide, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context6.sent;
                    _context6.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context6.sent;
                    return _context6.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToConnectedComponent)
                    }));
                  case 10:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6, this);
          }));
          function getStyleguideConnectedComponents(_x12) {
            return _getStyleguideConnectedComponents2.apply(this, arguments);
          }
          return getStyleguideConnectedComponents;
        }()
      }]);
      return ConnectedComponentsApi2;
    }(_base.BaseAPI);
    exports.ConnectedComponentsApi = ConnectedComponentsApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/design-tokens-api.js
var require_design_tokens_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/design-tokens-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DesignTokensApiFp = exports.DesignTokensApiAxiosParamCreator = exports.DesignTokensApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var DesignTokensApiAxiosParamCreator = function DesignTokensApiAxiosParamCreator2(configuration) {
      return {
        getProjectDesignTokens: function() {
          var _getProjectDesignTokens = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId, includeLinkedStyleguides, tokenNameCase) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 3 && _args[3] !== void 0 ? _args[3] : {};
                    (0, _common.assertParamExists)("getProjectDesignTokens", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/design_tokens".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    if (tokenNameCase !== void 0) {
                      localVarQueryParameter["token_name_case"] = tokenNameCase;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getProjectDesignTokens(_x, _x2, _x3) {
            return _getProjectDesignTokens.apply(this, arguments);
          }
          return getProjectDesignTokens;
        }(),
        getStyleguideDesignTokens: function() {
          var _getStyleguideDesignTokens = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(styleguideId, includeLinkedStyleguides, tokenNameCase) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 3 && _args2[3] !== void 0 ? _args2[3] : {};
                    (0, _common.assertParamExists)("getStyleguideDesignTokens", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/design_tokens".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context2.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    if (tokenNameCase !== void 0) {
                      localVarQueryParameter["token_name_case"] = tokenNameCase;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getStyleguideDesignTokens(_x4, _x5, _x6) {
            return _getStyleguideDesignTokens.apply(this, arguments);
          }
          return getStyleguideDesignTokens;
        }()
      };
    };
    exports.DesignTokensApiAxiosParamCreator = DesignTokensApiAxiosParamCreator;
    var DesignTokensApiFp = function DesignTokensApiFp2(configuration) {
      var localVarAxiosParamCreator = DesignTokensApiAxiosParamCreator(configuration);
      return {
        getProjectDesignTokens: function getProjectDesignTokens(projectId, includeLinkedStyleguides, tokenNameCase, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    _context3.next = 2;
                    return localVarAxiosParamCreator.getProjectDesignTokens(projectId, includeLinkedStyleguides, tokenNameCase, options);
                  case 2:
                    localVarAxiosArgs = _context3.sent;
                    return _context3.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }))();
        },
        getStyleguideDesignTokens: function getStyleguideDesignTokens(styleguideId, includeLinkedStyleguides, tokenNameCase, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    _context4.next = 2;
                    return localVarAxiosParamCreator.getStyleguideDesignTokens(styleguideId, includeLinkedStyleguides, tokenNameCase, options);
                  case 2:
                    localVarAxiosArgs = _context4.sent;
                    return _context4.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }))();
        }
      };
    };
    exports.DesignTokensApiFp = DesignTokensApiFp;
    var DesignTokensApi = function(_BaseAPI) {
      _inherits(DesignTokensApi2, _BaseAPI);
      var _super = _createSuper(DesignTokensApi2);
      function DesignTokensApi2() {
        _classCallCheck(this, DesignTokensApi2);
        return _super.apply(this, arguments);
      }
      _createClass(DesignTokensApi2, [{
        key: "getProjectDesignTokens",
        value: function() {
          var _getProjectDesignTokens2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(projectId) {
            var searchParams, options, designTokensApiFp, request, response, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    searchParams = _args5.length > 1 && _args5[1] !== void 0 ? _args5[1] : {};
                    options = _args5.length > 2 ? _args5[2] : void 0;
                    designTokensApiFp = DesignTokensApiFp(this.configuration);
                    _context5.next = 5;
                    return designTokensApiFp.getProjectDesignTokens(projectId, searchParams.includeLinkedStyleguides, searchParams.tokenNameCase, options);
                  case 5:
                    request = _context5.sent;
                    _context5.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context5.sent;
                    return _context5.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToDesignTokens)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5, this);
          }));
          function getProjectDesignTokens(_x7) {
            return _getProjectDesignTokens2.apply(this, arguments);
          }
          return getProjectDesignTokens;
        }()
      }, {
        key: "getStyleguideDesignTokens",
        value: function() {
          var _getStyleguideDesignTokens2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(styleguideId) {
            var searchParams, options, designTokensApiFp, request, response, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    searchParams = _args6.length > 1 && _args6[1] !== void 0 ? _args6[1] : {};
                    options = _args6.length > 2 ? _args6[2] : void 0;
                    designTokensApiFp = DesignTokensApiFp(this.configuration);
                    _context6.next = 5;
                    return designTokensApiFp.getStyleguideDesignTokens(styleguideId, searchParams.includeLinkedStyleguides, searchParams.tokenNameCase, options);
                  case 5:
                    request = _context6.sent;
                    _context6.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context6.sent;
                    return _context6.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToDesignTokens)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6, this);
          }));
          function getStyleguideDesignTokens(_x8) {
            return _getStyleguideDesignTokens2.apply(this, arguments);
          }
          return getStyleguideDesignTokens;
        }()
      }]);
      return DesignTokensApi2;
    }(_base.BaseAPI);
    exports.DesignTokensApi = DesignTokensApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/flows-api.js
var require_flows_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/flows-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.FlowsApiFp = exports.FlowsApiAxiosParamCreator = exports.FlowsApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var FlowsApiAxiosParamCreator = function FlowsApiAxiosParamCreator2(configuration) {
      return {
        getProjectFlowBoard: function() {
          var _getProjectFlowBoard = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId, flowBoardId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 2 && _args[2] !== void 0 ? _args[2] : {};
                    (0, _common.assertParamExists)("getProjectFlowBoard", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectFlowBoard", "flowBoardId", flowBoardId);
                    localVarPath = "/v1/projects/{project_id}/flow_boards/{flow_board_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("flow_board_id", "}"), encodeURIComponent(String(flowBoardId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getProjectFlowBoard(_x, _x2) {
            return _getProjectFlowBoard.apply(this, arguments);
          }
          return getProjectFlowBoard;
        }(),
        getProjectFlowBoardConnector: function() {
          var _getProjectFlowBoardConnector = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(projectId, flowBoardId, connectorId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 3 && _args2[3] !== void 0 ? _args2[3] : {};
                    (0, _common.assertParamExists)("getProjectFlowBoardConnector", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectFlowBoardConnector", "flowBoardId", flowBoardId);
                    (0, _common.assertParamExists)("getProjectFlowBoardConnector", "connectorId", connectorId);
                    localVarPath = "/v1/projects/{project_id}/flow_boards/{flow_board_id}/connectors/{connector_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("flow_board_id", "}"), encodeURIComponent(String(flowBoardId))).replace("{".concat("connector_id", "}"), encodeURIComponent(String(connectorId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context2.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getProjectFlowBoardConnector(_x3, _x4, _x5) {
            return _getProjectFlowBoardConnector.apply(this, arguments);
          }
          return getProjectFlowBoardConnector;
        }(),
        getProjectFlowBoardConnectors: function() {
          var _getProjectFlowBoardConnectors = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(projectId, flowBoardId, startingNodeId, endingNodeId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 6 && _args3[6] !== void 0 ? _args3[6] : {};
                    (0, _common.assertParamExists)("getProjectFlowBoardConnectors", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectFlowBoardConnectors", "flowBoardId", flowBoardId);
                    localVarPath = "/v1/projects/{project_id}/flow_boards/{flow_board_id}/connectors".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("flow_board_id", "}"), encodeURIComponent(String(flowBoardId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context3.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (startingNodeId !== void 0) {
                      localVarQueryParameter["starting_node_id"] = startingNodeId;
                    }
                    if (endingNodeId !== void 0) {
                      localVarQueryParameter["ending_node_id"] = endingNodeId;
                    }
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function getProjectFlowBoardConnectors(_x6, _x7, _x8, _x9, _x10, _x11) {
            return _getProjectFlowBoardConnectors.apply(this, arguments);
          }
          return getProjectFlowBoardConnectors;
        }(),
        getProjectFlowBoardGroups: function() {
          var _getProjectFlowBoardGroups = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(projectId, flowBoardId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 2 && _args4[2] !== void 0 ? _args4[2] : {};
                    (0, _common.assertParamExists)("getProjectFlowBoardGroups", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectFlowBoardGroups", "flowBoardId", flowBoardId);
                    localVarPath = "/v1/projects/{project_id}/flow_boards/{flow_board_id}/groups".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("flow_board_id", "}"), encodeURIComponent(String(flowBoardId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context4.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function getProjectFlowBoardGroups(_x12, _x13) {
            return _getProjectFlowBoardGroups.apply(this, arguments);
          }
          return getProjectFlowBoardGroups;
        }(),
        getProjectFlowBoardNode: function() {
          var _getProjectFlowBoardNode = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(projectId, flowBoardId, nodeId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 3 && _args5[3] !== void 0 ? _args5[3] : {};
                    (0, _common.assertParamExists)("getProjectFlowBoardNode", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectFlowBoardNode", "flowBoardId", flowBoardId);
                    (0, _common.assertParamExists)("getProjectFlowBoardNode", "nodeId", nodeId);
                    localVarPath = "/v1/projects/{project_id}/flow_boards/{flow_board_id}/nodes/{node_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("flow_board_id", "}"), encodeURIComponent(String(flowBoardId))).replace("{".concat("node_id", "}"), encodeURIComponent(String(nodeId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context5.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function getProjectFlowBoardNode(_x14, _x15, _x16) {
            return _getProjectFlowBoardNode.apply(this, arguments);
          }
          return getProjectFlowBoardNode;
        }(),
        getProjectFlowBoardNodes: function() {
          var _getProjectFlowBoardNodes = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(projectId, flowBoardId, groupId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 5 && _args6[5] !== void 0 ? _args6[5] : {};
                    (0, _common.assertParamExists)("getProjectFlowBoardNodes", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectFlowBoardNodes", "flowBoardId", flowBoardId);
                    localVarPath = "/v1/projects/{project_id}/flow_boards/{flow_board_id}/nodes".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("flow_board_id", "}"), encodeURIComponent(String(flowBoardId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context6.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (groupId !== void 0) {
                      localVarQueryParameter["group_id"] = groupId;
                    }
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function getProjectFlowBoardNodes(_x17, _x18, _x19, _x20, _x21) {
            return _getProjectFlowBoardNodes.apply(this, arguments);
          }
          return getProjectFlowBoardNodes;
        }(),
        getProjectFlowBoards: function() {
          var _getProjectFlowBoards = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(projectId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args7 = arguments;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    options = _args7.length > 1 && _args7[1] !== void 0 ? _args7[1] : {};
                    (0, _common.assertParamExists)("getProjectFlowBoards", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/flow_boards".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context7.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context7.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context7.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }));
          function getProjectFlowBoards(_x22) {
            return _getProjectFlowBoards.apply(this, arguments);
          }
          return getProjectFlowBoards;
        }()
      };
    };
    exports.FlowsApiAxiosParamCreator = FlowsApiAxiosParamCreator;
    var FlowsApiFp = function FlowsApiFp2(configuration) {
      var localVarAxiosParamCreator = FlowsApiAxiosParamCreator(configuration);
      return {
        getProjectFlowBoard: function getProjectFlowBoard(projectId, flowBoardId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    _context8.next = 2;
                    return localVarAxiosParamCreator.getProjectFlowBoard(projectId, flowBoardId, options);
                  case 2:
                    localVarAxiosArgs = _context8.sent;
                    return _context8.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }))();
        },
        getProjectFlowBoardConnector: function getProjectFlowBoardConnector(projectId, flowBoardId, connectorId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    _context9.next = 2;
                    return localVarAxiosParamCreator.getProjectFlowBoardConnector(projectId, flowBoardId, connectorId, options);
                  case 2:
                    localVarAxiosArgs = _context9.sent;
                    return _context9.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }))();
        },
        getProjectFlowBoardConnectors: function getProjectFlowBoardConnectors(projectId, flowBoardId, startingNodeId, endingNodeId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    _context10.next = 2;
                    return localVarAxiosParamCreator.getProjectFlowBoardConnectors(projectId, flowBoardId, startingNodeId, endingNodeId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context10.sent;
                    return _context10.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }))();
        },
        getProjectFlowBoardGroups: function getProjectFlowBoardGroups(projectId, flowBoardId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    _context11.next = 2;
                    return localVarAxiosParamCreator.getProjectFlowBoardGroups(projectId, flowBoardId, options);
                  case 2:
                    localVarAxiosArgs = _context11.sent;
                    return _context11.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }))();
        },
        getProjectFlowBoardNode: function getProjectFlowBoardNode(projectId, flowBoardId, nodeId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    _context12.next = 2;
                    return localVarAxiosParamCreator.getProjectFlowBoardNode(projectId, flowBoardId, nodeId, options);
                  case 2:
                    localVarAxiosArgs = _context12.sent;
                    return _context12.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }))();
        },
        getProjectFlowBoardNodes: function getProjectFlowBoardNodes(projectId, flowBoardId, groupId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee13() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    _context13.next = 2;
                    return localVarAxiosParamCreator.getProjectFlowBoardNodes(projectId, flowBoardId, groupId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context13.sent;
                    return _context13.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }))();
        },
        getProjectFlowBoards: function getProjectFlowBoards(projectId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee14() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    _context14.next = 2;
                    return localVarAxiosParamCreator.getProjectFlowBoards(projectId, options);
                  case 2:
                    localVarAxiosArgs = _context14.sent;
                    return _context14.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }))();
        }
      };
    };
    exports.FlowsApiFp = FlowsApiFp;
    var FlowsApi = function(_BaseAPI) {
      _inherits(FlowsApi2, _BaseAPI);
      var _super = _createSuper(FlowsApi2);
      function FlowsApi2() {
        _classCallCheck(this, FlowsApi2);
        return _super.apply(this, arguments);
      }
      _createClass(FlowsApi2, [{
        key: "getProjectFlowBoard",
        value: function() {
          var _getProjectFlowBoard2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(projectId, flowBoardId, options) {
            var flowsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    flowsApiFp = FlowsApiFp(this.configuration);
                    _context15.next = 3;
                    return flowsApiFp.getProjectFlowBoard(projectId, flowBoardId, options);
                  case 3:
                    request = _context15.sent;
                    _context15.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context15.sent;
                    return _context15.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToFlowBoard)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15, this);
          }));
          function getProjectFlowBoard(_x23, _x24, _x25) {
            return _getProjectFlowBoard2.apply(this, arguments);
          }
          return getProjectFlowBoard;
        }()
      }, {
        key: "getProjectFlowBoardConnector",
        value: function() {
          var _getProjectFlowBoardConnector2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(projectId, flowBoardId, connectorId, options) {
            var flowsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    flowsApiFp = FlowsApiFp(this.configuration);
                    _context16.next = 3;
                    return flowsApiFp.getProjectFlowBoardConnector(projectId, flowBoardId, connectorId, options);
                  case 3:
                    request = _context16.sent;
                    _context16.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context16.sent;
                    return _context16.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToFlowBoardConnector)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16, this);
          }));
          function getProjectFlowBoardConnector(_x26, _x27, _x28, _x29) {
            return _getProjectFlowBoardConnector2.apply(this, arguments);
          }
          return getProjectFlowBoardConnector;
        }()
      }, {
        key: "getProjectFlowBoardConnectors",
        value: function() {
          var _getProjectFlowBoardConnectors2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(projectId, flowBoardId) {
            var searchParams, options, flowsApiFp, request, response, _args17 = arguments;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    searchParams = _args17.length > 2 && _args17[2] !== void 0 ? _args17[2] : {};
                    options = _args17.length > 3 ? _args17[3] : void 0;
                    flowsApiFp = FlowsApiFp(this.configuration);
                    _context17.next = 5;
                    return flowsApiFp.getProjectFlowBoardConnectors(projectId, flowBoardId, searchParams.startingNodeId, searchParams.endingNodeId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context17.sent;
                    _context17.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context17.sent;
                    return _context17.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToFlowBoardConnector)
                    }));
                  case 10:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17, this);
          }));
          function getProjectFlowBoardConnectors(_x30, _x31) {
            return _getProjectFlowBoardConnectors2.apply(this, arguments);
          }
          return getProjectFlowBoardConnectors;
        }()
      }, {
        key: "getProjectFlowBoardGroups",
        value: function() {
          var _getProjectFlowBoardGroups2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee18(projectId, flowBoardId, options) {
            var flowsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    flowsApiFp = FlowsApiFp(this.configuration);
                    _context18.next = 3;
                    return flowsApiFp.getProjectFlowBoardGroups(projectId, flowBoardId, options);
                  case 3:
                    request = _context18.sent;
                    _context18.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context18.sent;
                    return _context18.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToFlowBoardGroup)
                    }));
                  case 8:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18, this);
          }));
          function getProjectFlowBoardGroups(_x32, _x33, _x34) {
            return _getProjectFlowBoardGroups2.apply(this, arguments);
          }
          return getProjectFlowBoardGroups;
        }()
      }, {
        key: "getProjectFlowBoardNode",
        value: function() {
          var _getProjectFlowBoardNode2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee19(projectId, flowBoardId, nodeId, options) {
            var flowsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee19$(_context19) {
              while (1) {
                switch (_context19.prev = _context19.next) {
                  case 0:
                    flowsApiFp = FlowsApiFp(this.configuration);
                    _context19.next = 3;
                    return flowsApiFp.getProjectFlowBoardNode(projectId, flowBoardId, nodeId, options);
                  case 3:
                    request = _context19.sent;
                    _context19.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context19.sent;
                    return _context19.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToFlowBoardNode)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context19.stop();
                }
              }
            }, _callee19, this);
          }));
          function getProjectFlowBoardNode(_x35, _x36, _x37, _x38) {
            return _getProjectFlowBoardNode2.apply(this, arguments);
          }
          return getProjectFlowBoardNode;
        }()
      }, {
        key: "getProjectFlowBoardNodes",
        value: function() {
          var _getProjectFlowBoardNodes2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee20(projectId, flowBoardId) {
            var searchParams, options, flowsApiFp, request, response, _args20 = arguments;
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    searchParams = _args20.length > 2 && _args20[2] !== void 0 ? _args20[2] : {};
                    options = _args20.length > 3 ? _args20[3] : void 0;
                    flowsApiFp = FlowsApiFp(this.configuration);
                    _context20.next = 5;
                    return flowsApiFp.getProjectFlowBoardNodes(projectId, flowBoardId, searchParams.groupId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context20.sent;
                    _context20.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context20.sent;
                    return _context20.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToFlowBoardNode)
                    }));
                  case 10:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20, this);
          }));
          function getProjectFlowBoardNodes(_x39, _x40) {
            return _getProjectFlowBoardNodes2.apply(this, arguments);
          }
          return getProjectFlowBoardNodes;
        }()
      }, {
        key: "getProjectFlowBoards",
        value: function() {
          var _getProjectFlowBoards2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee21(projectId, options) {
            var flowsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee21$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    flowsApiFp = FlowsApiFp(this.configuration);
                    _context21.next = 3;
                    return flowsApiFp.getProjectFlowBoards(projectId, options);
                  case 3:
                    request = _context21.sent;
                    _context21.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context21.sent;
                    return _context21.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToFlowBoard)
                    }));
                  case 8:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee21, this);
          }));
          function getProjectFlowBoards(_x41, _x42) {
            return _getProjectFlowBoards2.apply(this, arguments);
          }
          return getProjectFlowBoards;
        }()
      }]);
      return FlowsApi2;
    }(_base.BaseAPI);
    exports.FlowsApi = FlowsApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/organizations-api.js
var require_organizations_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/organizations-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.OrganizationsApiFp = exports.OrganizationsApiAxiosParamCreator = exports.OrganizationsApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_from();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var OrganizationsApiAxiosParamCreator = function OrganizationsApiAxiosParamCreator2(configuration) {
      return {
        getOrganization: function() {
          var _getOrganization = _asyncToGenerator(regeneratorRuntime.mark(function _callee(organizationId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 1 && _args[1] !== void 0 ? _args[1] : {};
                    (0, _common.assertParamExists)("getOrganization", "organizationId", organizationId);
                    localVarPath = "/v1/organizations/{organization_id}".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getOrganization(_x) {
            return _getOrganization.apply(this, arguments);
          }
          return getOrganization;
        }(),
        getOrganizationAliens: function() {
          var _getOrganizationAliens = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(organizationId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 1 && _args2[1] !== void 0 ? _args2[1] : {};
                    (0, _common.assertParamExists)("getOrganizationAliens", "organizationId", organizationId);
                    localVarPath = "/v1/organizations/{organization_id}/aliens".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context2.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getOrganizationAliens(_x2) {
            return _getOrganizationAliens.apply(this, arguments);
          }
          return getOrganizationAliens;
        }(),
        getOrganizationBilling: function() {
          var _getOrganizationBilling = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(organizationId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 1 && _args3[1] !== void 0 ? _args3[1] : {};
                    (0, _common.assertParamExists)("getOrganizationBilling", "organizationId", organizationId);
                    localVarPath = "/v1/organizations/{organization_id}/billing".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context3.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function getOrganizationBilling(_x3) {
            return _getOrganizationBilling.apply(this, arguments);
          }
          return getOrganizationBilling;
        }(),
        getOrganizationMemberProjects: function() {
          var _getOrganizationMemberProjects = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(organizationId, memberId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 4 && _args4[4] !== void 0 ? _args4[4] : {};
                    (0, _common.assertParamExists)("getOrganizationMemberProjects", "organizationId", organizationId);
                    (0, _common.assertParamExists)("getOrganizationMemberProjects", "memberId", memberId);
                    localVarPath = "/v1/organizations/{organization_id}/members/{member_id}/projects".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId))).replace("{".concat("member_id", "}"), encodeURIComponent(String(memberId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context4.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function getOrganizationMemberProjects(_x4, _x5, _x6, _x7) {
            return _getOrganizationMemberProjects.apply(this, arguments);
          }
          return getOrganizationMemberProjects;
        }(),
        getOrganizationMemberStyleguides: function() {
          var _getOrganizationMemberStyleguides = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(organizationId, memberId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 4 && _args5[4] !== void 0 ? _args5[4] : {};
                    (0, _common.assertParamExists)("getOrganizationMemberStyleguides", "organizationId", organizationId);
                    (0, _common.assertParamExists)("getOrganizationMemberStyleguides", "memberId", memberId);
                    localVarPath = "/v1/organizations/{organization_id}/members/{member_id}/styleguides".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId))).replace("{".concat("member_id", "}"), encodeURIComponent(String(memberId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context5.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function getOrganizationMemberStyleguides(_x8, _x9, _x10, _x11) {
            return _getOrganizationMemberStyleguides.apply(this, arguments);
          }
          return getOrganizationMemberStyleguides;
        }(),
        getOrganizationMembers: function() {
          var _getOrganizationMembers = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(organizationId, limit, offset, handle) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 4 && _args6[4] !== void 0 ? _args6[4] : {};
                    (0, _common.assertParamExists)("getOrganizationMembers", "organizationId", organizationId);
                    localVarPath = "/v1/organizations/{organization_id}/members".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context6.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (handle) {
                      localVarQueryParameter["handle"] = Array.from(handle);
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function getOrganizationMembers(_x12, _x13, _x14, _x15) {
            return _getOrganizationMembers.apply(this, arguments);
          }
          return getOrganizationMembers;
        }(),
        getOrganizationProjects: function() {
          var _getOrganizationProjects = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(organizationId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args7 = arguments;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    options = _args7.length > 3 && _args7[3] !== void 0 ? _args7[3] : {};
                    (0, _common.assertParamExists)("getOrganizationProjects", "organizationId", organizationId);
                    localVarPath = "/v1/organizations/{organization_id}/projects".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context7.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context7.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context7.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }));
          function getOrganizationProjects(_x16, _x17, _x18) {
            return _getOrganizationProjects.apply(this, arguments);
          }
          return getOrganizationProjects;
        }(),
        getOrganizationStyleguides: function() {
          var _getOrganizationStyleguides = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(organizationId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args8 = arguments;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    options = _args8.length > 3 && _args8[3] !== void 0 ? _args8[3] : {};
                    (0, _common.assertParamExists)("getOrganizationStyleguides", "organizationId", organizationId);
                    localVarPath = "/v1/organizations/{organization_id}/styleguides".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context8.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context8.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context8.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }));
          function getOrganizationStyleguides(_x19, _x20, _x21) {
            return _getOrganizationStyleguides.apply(this, arguments);
          }
          return getOrganizationStyleguides;
        }(),
        getOrganizationWorkflowStatuses: function() {
          var _getOrganizationWorkflowStatuses = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(organizationId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args9 = arguments;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    options = _args9.length > 1 && _args9[1] !== void 0 ? _args9[1] : {};
                    (0, _common.assertParamExists)("getOrganizationWorkflowStatuses", "organizationId", organizationId);
                    localVarPath = "/v1/organizations/{organization_id}/workflow_statuses".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context9.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context9.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context9.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }));
          function getOrganizationWorkflowStatuses(_x22) {
            return _getOrganizationWorkflowStatuses.apply(this, arguments);
          }
          return getOrganizationWorkflowStatuses;
        }(),
        getOrganizations: function() {
          var _getOrganizations = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(role) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args10 = arguments;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    options = _args10.length > 1 && _args10[1] !== void 0 ? _args10[1] : {};
                    localVarPath = "/v1/organizations";
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context10.next = 9;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 9:
                    _context10.next = 11;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 11:
                    if (role) {
                      localVarQueryParameter["role"] = Array.from(role);
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context10.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }));
          function getOrganizations(_x23) {
            return _getOrganizations.apply(this, arguments);
          }
          return getOrganizations;
        }(),
        inviteOrganizationMember: function() {
          var _inviteOrganizationMember = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(organizationId, organizationMemberInviteBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args11 = arguments;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    options = _args11.length > 2 && _args11[2] !== void 0 ? _args11[2] : {};
                    (0, _common.assertParamExists)("inviteOrganizationMember", "organizationId", organizationId);
                    (0, _common.assertParamExists)("inviteOrganizationMember", "organizationMemberInviteBody", organizationMemberInviteBody);
                    localVarPath = "/v1/organizations/{organization_id}/members".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context11.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context11.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformOrganizationMemberInviteBodyToJSON)(organizationMemberInviteBody), localVarRequestOptions, configuration);
                    return _context11.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }));
          function inviteOrganizationMember(_x24, _x25) {
            return _inviteOrganizationMember.apply(this, arguments);
          }
          return inviteOrganizationMember;
        }(),
        removeOrganizationMember: function() {
          var _removeOrganizationMember = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(organizationId, memberId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args12 = arguments;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    options = _args12.length > 2 && _args12[2] !== void 0 ? _args12[2] : {};
                    (0, _common.assertParamExists)("removeOrganizationMember", "organizationId", organizationId);
                    (0, _common.assertParamExists)("removeOrganizationMember", "memberId", memberId);
                    localVarPath = "/v1/organizations/{organization_id}/members/{member_id}".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId))).replace("{".concat("member_id", "}"), encodeURIComponent(String(memberId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context12.next = 11;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 11:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context12.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 15:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }));
          function removeOrganizationMember(_x26, _x27) {
            return _removeOrganizationMember.apply(this, arguments);
          }
          return removeOrganizationMember;
        }(),
        updateOrganizationMember: function() {
          var _updateOrganizationMember = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(organizationId, memberId, organizationMemberUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args13 = arguments;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    options = _args13.length > 3 && _args13[3] !== void 0 ? _args13[3] : {};
                    (0, _common.assertParamExists)("updateOrganizationMember", "organizationId", organizationId);
                    (0, _common.assertParamExists)("updateOrganizationMember", "memberId", memberId);
                    (0, _common.assertParamExists)("updateOrganizationMember", "organizationMemberUpdateBody", organizationMemberUpdateBody);
                    localVarPath = "/v1/organizations/{organization_id}/members/{member_id}".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId))).replace("{".concat("member_id", "}"), encodeURIComponent(String(memberId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context13.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformOrganizationMemberUpdateBodyToJSON)(organizationMemberUpdateBody), localVarRequestOptions, configuration);
                    return _context13.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }));
          function updateOrganizationMember(_x28, _x29, _x30) {
            return _updateOrganizationMember.apply(this, arguments);
          }
          return updateOrganizationMember;
        }()
      };
    };
    exports.OrganizationsApiAxiosParamCreator = OrganizationsApiAxiosParamCreator;
    var OrganizationsApiFp = function OrganizationsApiFp2(configuration) {
      var localVarAxiosParamCreator = OrganizationsApiAxiosParamCreator(configuration);
      return {
        getOrganization: function getOrganization(organizationId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee14() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    _context14.next = 2;
                    return localVarAxiosParamCreator.getOrganization(organizationId, options);
                  case 2:
                    localVarAxiosArgs = _context14.sent;
                    return _context14.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }))();
        },
        getOrganizationAliens: function getOrganizationAliens(organizationId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee15() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    _context15.next = 2;
                    return localVarAxiosParamCreator.getOrganizationAliens(organizationId, options);
                  case 2:
                    localVarAxiosArgs = _context15.sent;
                    return _context15.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15);
          }))();
        },
        getOrganizationBilling: function getOrganizationBilling(organizationId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee16() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    _context16.next = 2;
                    return localVarAxiosParamCreator.getOrganizationBilling(organizationId, options);
                  case 2:
                    localVarAxiosArgs = _context16.sent;
                    return _context16.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16);
          }))();
        },
        getOrganizationMemberProjects: function getOrganizationMemberProjects(organizationId, memberId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee17() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    _context17.next = 2;
                    return localVarAxiosParamCreator.getOrganizationMemberProjects(organizationId, memberId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context17.sent;
                    return _context17.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17);
          }))();
        },
        getOrganizationMemberStyleguides: function getOrganizationMemberStyleguides(organizationId, memberId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee18() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    _context18.next = 2;
                    return localVarAxiosParamCreator.getOrganizationMemberStyleguides(organizationId, memberId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context18.sent;
                    return _context18.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18);
          }))();
        },
        getOrganizationMembers: function getOrganizationMembers(organizationId, limit, offset, handle, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee19() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee19$(_context19) {
              while (1) {
                switch (_context19.prev = _context19.next) {
                  case 0:
                    _context19.next = 2;
                    return localVarAxiosParamCreator.getOrganizationMembers(organizationId, limit, offset, handle, options);
                  case 2:
                    localVarAxiosArgs = _context19.sent;
                    return _context19.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context19.stop();
                }
              }
            }, _callee19);
          }))();
        },
        getOrganizationProjects: function getOrganizationProjects(organizationId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee20() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    _context20.next = 2;
                    return localVarAxiosParamCreator.getOrganizationProjects(organizationId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context20.sent;
                    return _context20.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20);
          }))();
        },
        getOrganizationStyleguides: function getOrganizationStyleguides(organizationId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee21() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee21$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    _context21.next = 2;
                    return localVarAxiosParamCreator.getOrganizationStyleguides(organizationId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context21.sent;
                    return _context21.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee21);
          }))();
        },
        getOrganizationWorkflowStatuses: function getOrganizationWorkflowStatuses(organizationId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee22() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee22$(_context22) {
              while (1) {
                switch (_context22.prev = _context22.next) {
                  case 0:
                    _context22.next = 2;
                    return localVarAxiosParamCreator.getOrganizationWorkflowStatuses(organizationId, options);
                  case 2:
                    localVarAxiosArgs = _context22.sent;
                    return _context22.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context22.stop();
                }
              }
            }, _callee22);
          }))();
        },
        getOrganizations: function getOrganizations(role, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee23() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee23$(_context23) {
              while (1) {
                switch (_context23.prev = _context23.next) {
                  case 0:
                    _context23.next = 2;
                    return localVarAxiosParamCreator.getOrganizations(role, options);
                  case 2:
                    localVarAxiosArgs = _context23.sent;
                    return _context23.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context23.stop();
                }
              }
            }, _callee23);
          }))();
        },
        inviteOrganizationMember: function inviteOrganizationMember(organizationId, organizationMemberInviteBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee24() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee24$(_context24) {
              while (1) {
                switch (_context24.prev = _context24.next) {
                  case 0:
                    _context24.next = 2;
                    return localVarAxiosParamCreator.inviteOrganizationMember(organizationId, organizationMemberInviteBody, options);
                  case 2:
                    localVarAxiosArgs = _context24.sent;
                    return _context24.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context24.stop();
                }
              }
            }, _callee24);
          }))();
        },
        removeOrganizationMember: function removeOrganizationMember(organizationId, memberId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee25() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee25$(_context25) {
              while (1) {
                switch (_context25.prev = _context25.next) {
                  case 0:
                    _context25.next = 2;
                    return localVarAxiosParamCreator.removeOrganizationMember(organizationId, memberId, options);
                  case 2:
                    localVarAxiosArgs = _context25.sent;
                    return _context25.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context25.stop();
                }
              }
            }, _callee25);
          }))();
        },
        updateOrganizationMember: function updateOrganizationMember(organizationId, memberId, organizationMemberUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee26() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee26$(_context26) {
              while (1) {
                switch (_context26.prev = _context26.next) {
                  case 0:
                    _context26.next = 2;
                    return localVarAxiosParamCreator.updateOrganizationMember(organizationId, memberId, organizationMemberUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context26.sent;
                    return _context26.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context26.stop();
                }
              }
            }, _callee26);
          }))();
        }
      };
    };
    exports.OrganizationsApiFp = OrganizationsApiFp;
    var OrganizationsApi = function(_BaseAPI) {
      _inherits(OrganizationsApi2, _BaseAPI);
      var _super = _createSuper(OrganizationsApi2);
      function OrganizationsApi2() {
        _classCallCheck(this, OrganizationsApi2);
        return _super.apply(this, arguments);
      }
      _createClass(OrganizationsApi2, [{
        key: "getOrganization",
        value: function() {
          var _getOrganization2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee27(organizationId, options) {
            var organizationsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee27$(_context27) {
              while (1) {
                switch (_context27.prev = _context27.next) {
                  case 0:
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context27.next = 3;
                    return organizationsApiFp.getOrganization(organizationId, options);
                  case 3:
                    request = _context27.sent;
                    _context27.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context27.sent;
                    return _context27.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToOrganization)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context27.stop();
                }
              }
            }, _callee27, this);
          }));
          function getOrganization(_x31, _x32) {
            return _getOrganization2.apply(this, arguments);
          }
          return getOrganization;
        }()
      }, {
        key: "getOrganizationAliens",
        value: function() {
          var _getOrganizationAliens2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee28(organizationId, options) {
            var organizationsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee28$(_context28) {
              while (1) {
                switch (_context28.prev = _context28.next) {
                  case 0:
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context28.next = 3;
                    return organizationsApiFp.getOrganizationAliens(organizationId, options);
                  case 3:
                    request = _context28.sent;
                    _context28.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context28.sent;
                    return _context28.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToUser)
                    }));
                  case 8:
                  case "end":
                    return _context28.stop();
                }
              }
            }, _callee28, this);
          }));
          function getOrganizationAliens(_x33, _x34) {
            return _getOrganizationAliens2.apply(this, arguments);
          }
          return getOrganizationAliens;
        }()
      }, {
        key: "getOrganizationBilling",
        value: function() {
          var _getOrganizationBilling2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee29(organizationId, options) {
            var organizationsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee29$(_context29) {
              while (1) {
                switch (_context29.prev = _context29.next) {
                  case 0:
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context29.next = 3;
                    return organizationsApiFp.getOrganizationBilling(organizationId, options);
                  case 3:
                    request = _context29.sent;
                    _context29.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context29.sent;
                    return _context29.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToOrganizationBilling)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context29.stop();
                }
              }
            }, _callee29, this);
          }));
          function getOrganizationBilling(_x35, _x36) {
            return _getOrganizationBilling2.apply(this, arguments);
          }
          return getOrganizationBilling;
        }()
      }, {
        key: "getOrganizationMemberProjects",
        value: function() {
          var _getOrganizationMemberProjects2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee30(organizationId, memberId) {
            var searchParams, options, organizationsApiFp, request, response, _args30 = arguments;
            return regeneratorRuntime.wrap(function _callee30$(_context30) {
              while (1) {
                switch (_context30.prev = _context30.next) {
                  case 0:
                    searchParams = _args30.length > 2 && _args30[2] !== void 0 ? _args30[2] : {};
                    options = _args30.length > 3 ? _args30[3] : void 0;
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context30.next = 5;
                    return organizationsApiFp.getOrganizationMemberProjects(organizationId, memberId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context30.sent;
                    _context30.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context30.sent;
                    return _context30.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToProject)
                    }));
                  case 10:
                  case "end":
                    return _context30.stop();
                }
              }
            }, _callee30, this);
          }));
          function getOrganizationMemberProjects(_x37, _x38) {
            return _getOrganizationMemberProjects2.apply(this, arguments);
          }
          return getOrganizationMemberProjects;
        }()
      }, {
        key: "getOrganizationMemberStyleguides",
        value: function() {
          var _getOrganizationMemberStyleguides2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee31(organizationId, memberId) {
            var searchParams, options, organizationsApiFp, request, response, _args31 = arguments;
            return regeneratorRuntime.wrap(function _callee31$(_context31) {
              while (1) {
                switch (_context31.prev = _context31.next) {
                  case 0:
                    searchParams = _args31.length > 2 && _args31[2] !== void 0 ? _args31[2] : {};
                    options = _args31.length > 3 ? _args31[3] : void 0;
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context31.next = 5;
                    return organizationsApiFp.getOrganizationMemberStyleguides(organizationId, memberId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context31.sent;
                    _context31.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context31.sent;
                    return _context31.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToStyleguide)
                    }));
                  case 10:
                  case "end":
                    return _context31.stop();
                }
              }
            }, _callee31, this);
          }));
          function getOrganizationMemberStyleguides(_x39, _x40) {
            return _getOrganizationMemberStyleguides2.apply(this, arguments);
          }
          return getOrganizationMemberStyleguides;
        }()
      }, {
        key: "getOrganizationMembers",
        value: function() {
          var _getOrganizationMembers2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee32(organizationId) {
            var searchParams, options, organizationsApiFp, request, response, _args32 = arguments;
            return regeneratorRuntime.wrap(function _callee32$(_context32) {
              while (1) {
                switch (_context32.prev = _context32.next) {
                  case 0:
                    searchParams = _args32.length > 1 && _args32[1] !== void 0 ? _args32[1] : {};
                    options = _args32.length > 2 ? _args32[2] : void 0;
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context32.next = 5;
                    return organizationsApiFp.getOrganizationMembers(organizationId, searchParams.limit, searchParams.offset, searchParams.handle, options);
                  case 5:
                    request = _context32.sent;
                    _context32.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context32.sent;
                    return _context32.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToOrganizationMember)
                    }));
                  case 10:
                  case "end":
                    return _context32.stop();
                }
              }
            }, _callee32, this);
          }));
          function getOrganizationMembers(_x41) {
            return _getOrganizationMembers2.apply(this, arguments);
          }
          return getOrganizationMembers;
        }()
      }, {
        key: "getOrganizationProjects",
        value: function() {
          var _getOrganizationProjects2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee33(organizationId) {
            var searchParams, options, organizationsApiFp, request, response, _args33 = arguments;
            return regeneratorRuntime.wrap(function _callee33$(_context33) {
              while (1) {
                switch (_context33.prev = _context33.next) {
                  case 0:
                    searchParams = _args33.length > 1 && _args33[1] !== void 0 ? _args33[1] : {};
                    options = _args33.length > 2 ? _args33[2] : void 0;
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context33.next = 5;
                    return organizationsApiFp.getOrganizationProjects(organizationId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context33.sent;
                    _context33.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context33.sent;
                    return _context33.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToProject)
                    }));
                  case 10:
                  case "end":
                    return _context33.stop();
                }
              }
            }, _callee33, this);
          }));
          function getOrganizationProjects(_x42) {
            return _getOrganizationProjects2.apply(this, arguments);
          }
          return getOrganizationProjects;
        }()
      }, {
        key: "getOrganizationStyleguides",
        value: function() {
          var _getOrganizationStyleguides2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee34(organizationId) {
            var searchParams, options, organizationsApiFp, request, response, _args34 = arguments;
            return regeneratorRuntime.wrap(function _callee34$(_context34) {
              while (1) {
                switch (_context34.prev = _context34.next) {
                  case 0:
                    searchParams = _args34.length > 1 && _args34[1] !== void 0 ? _args34[1] : {};
                    options = _args34.length > 2 ? _args34[2] : void 0;
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context34.next = 5;
                    return organizationsApiFp.getOrganizationStyleguides(organizationId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context34.sent;
                    _context34.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context34.sent;
                    return _context34.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToStyleguide)
                    }));
                  case 10:
                  case "end":
                    return _context34.stop();
                }
              }
            }, _callee34, this);
          }));
          function getOrganizationStyleguides(_x43) {
            return _getOrganizationStyleguides2.apply(this, arguments);
          }
          return getOrganizationStyleguides;
        }()
      }, {
        key: "getOrganizationWorkflowStatuses",
        value: function() {
          var _getOrganizationWorkflowStatuses2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee35(organizationId, options) {
            var organizationsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee35$(_context35) {
              while (1) {
                switch (_context35.prev = _context35.next) {
                  case 0:
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context35.next = 3;
                    return organizationsApiFp.getOrganizationWorkflowStatuses(organizationId, options);
                  case 3:
                    request = _context35.sent;
                    _context35.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context35.sent;
                    return _context35.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToWorkflowStatus)
                    }));
                  case 8:
                  case "end":
                    return _context35.stop();
                }
              }
            }, _callee35, this);
          }));
          function getOrganizationWorkflowStatuses(_x44, _x45) {
            return _getOrganizationWorkflowStatuses2.apply(this, arguments);
          }
          return getOrganizationWorkflowStatuses;
        }()
      }, {
        key: "getOrganizations",
        value: function() {
          var _getOrganizations2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee36() {
            var searchParams, options, organizationsApiFp, request, response, _args36 = arguments;
            return regeneratorRuntime.wrap(function _callee36$(_context36) {
              while (1) {
                switch (_context36.prev = _context36.next) {
                  case 0:
                    searchParams = _args36.length > 0 && _args36[0] !== void 0 ? _args36[0] : {};
                    options = _args36.length > 1 ? _args36[1] : void 0;
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context36.next = 5;
                    return organizationsApiFp.getOrganizations(searchParams.role, options);
                  case 5:
                    request = _context36.sent;
                    _context36.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context36.sent;
                    return _context36.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToOrganizationSummary)
                    }));
                  case 10:
                  case "end":
                    return _context36.stop();
                }
              }
            }, _callee36, this);
          }));
          function getOrganizations() {
            return _getOrganizations2.apply(this, arguments);
          }
          return getOrganizations;
        }()
      }, {
        key: "inviteOrganizationMember",
        value: function() {
          var _inviteOrganizationMember2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee37(organizationId, organizationMemberInviteBody, options) {
            var organizationsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee37$(_context37) {
              while (1) {
                switch (_context37.prev = _context37.next) {
                  case 0:
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context37.next = 3;
                    return organizationsApiFp.inviteOrganizationMember(organizationId, organizationMemberInviteBody, options);
                  case 3:
                    request = _context37.sent;
                    _context37.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context37.sent;
                    return _context37.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToOrganizationMember)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context37.stop();
                }
              }
            }, _callee37, this);
          }));
          function inviteOrganizationMember(_x46, _x47, _x48) {
            return _inviteOrganizationMember2.apply(this, arguments);
          }
          return inviteOrganizationMember;
        }()
      }, {
        key: "removeOrganizationMember",
        value: function() {
          var _removeOrganizationMember2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee38(organizationId, memberId, options) {
            var organizationsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee38$(_context38) {
              while (1) {
                switch (_context38.prev = _context38.next) {
                  case 0:
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context38.next = 3;
                    return organizationsApiFp.removeOrganizationMember(organizationId, memberId, options);
                  case 3:
                    request = _context38.sent;
                    _context38.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context38.sent;
                    return _context38.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context38.stop();
                }
              }
            }, _callee38, this);
          }));
          function removeOrganizationMember(_x49, _x50, _x51) {
            return _removeOrganizationMember2.apply(this, arguments);
          }
          return removeOrganizationMember;
        }()
      }, {
        key: "updateOrganizationMember",
        value: function() {
          var _updateOrganizationMember2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee39(organizationId, memberId, organizationMemberUpdateBody, options) {
            var organizationsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee39$(_context39) {
              while (1) {
                switch (_context39.prev = _context39.next) {
                  case 0:
                    organizationsApiFp = OrganizationsApiFp(this.configuration);
                    _context39.next = 3;
                    return organizationsApiFp.updateOrganizationMember(organizationId, memberId, organizationMemberUpdateBody, options);
                  case 3:
                    request = _context39.sent;
                    _context39.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context39.sent;
                    return _context39.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context39.stop();
                }
              }
            }, _callee39, this);
          }));
          function updateOrganizationMember(_x52, _x53, _x54, _x55) {
            return _updateOrganizationMember2.apply(this, arguments);
          }
          return updateOrganizationMember;
        }()
      }]);
      return OrganizationsApi2;
    }(_base.BaseAPI);
    exports.OrganizationsApi = OrganizationsApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/projects-api.js
var require_projects_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/projects-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ProjectsApiFp = exports.ProjectsApiAxiosParamCreator = exports.ProjectsApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var ProjectsApiAxiosParamCreator = function ProjectsApiAxiosParamCreator2(configuration) {
      return {
        getProject: function() {
          var _getProject = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 1 && _args[1] !== void 0 ? _args[1] : {};
                    (0, _common.assertParamExists)("getProject", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getProject(_x) {
            return _getProject.apply(this, arguments);
          }
          return getProject;
        }(),
        getProjectDesignTokens: function() {
          var _getProjectDesignTokens = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(projectId, includeLinkedStyleguides, tokenNameCase) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 3 && _args2[3] !== void 0 ? _args2[3] : {};
                    (0, _common.assertParamExists)("getProjectDesignTokens", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/design_tokens".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context2.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    if (tokenNameCase !== void 0) {
                      localVarQueryParameter["token_name_case"] = tokenNameCase;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getProjectDesignTokens(_x2, _x3, _x4) {
            return _getProjectDesignTokens.apply(this, arguments);
          }
          return getProjectDesignTokens;
        }(),
        getProjectMembers: function() {
          var _getProjectMembers = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(projectId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 3 && _args3[3] !== void 0 ? _args3[3] : {};
                    (0, _common.assertParamExists)("getProjectMembers", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/members".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context3.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function getProjectMembers(_x5, _x6, _x7) {
            return _getProjectMembers.apply(this, arguments);
          }
          return getProjectMembers;
        }(),
        getProjects: function() {
          var _getProjects = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(limit, workspace, status, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 4 && _args4[4] !== void 0 ? _args4[4] : {};
                    localVarPath = "/v1/projects";
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 9;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 9:
                    _context4.next = 11;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 11:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (workspace !== void 0) {
                      localVarQueryParameter["workspace"] = workspace;
                    }
                    if (status !== void 0) {
                      localVarQueryParameter["status"] = status;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function getProjects(_x8, _x9, _x10, _x11) {
            return _getProjects.apply(this, arguments);
          }
          return getProjects;
        }(),
        inviteProjectMember: function() {
          var _inviteProjectMember = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(projectId, projectMemberInviteBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 2 && _args5[2] !== void 0 ? _args5[2] : {};
                    (0, _common.assertParamExists)("inviteProjectMember", "projectId", projectId);
                    (0, _common.assertParamExists)("inviteProjectMember", "projectMemberInviteBody", projectMemberInviteBody);
                    localVarPath = "/v1/projects/{project_id}/members".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context5.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformProjectMemberInviteBodyToJSON)(projectMemberInviteBody), localVarRequestOptions, configuration);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function inviteProjectMember(_x12, _x13) {
            return _inviteProjectMember.apply(this, arguments);
          }
          return inviteProjectMember;
        }(),
        removeProjectMember: function() {
          var _removeProjectMember = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(projectId, memberId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 2 && _args6[2] !== void 0 ? _args6[2] : {};
                    (0, _common.assertParamExists)("removeProjectMember", "projectId", projectId);
                    (0, _common.assertParamExists)("removeProjectMember", "memberId", memberId);
                    localVarPath = "/v1/projects/{project_id}/members/{member_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("member_id", "}"), encodeURIComponent(String(memberId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context6.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function removeProjectMember(_x14, _x15) {
            return _removeProjectMember.apply(this, arguments);
          }
          return removeProjectMember;
        }(),
        updateProject: function() {
          var _updateProject = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(projectId, projectUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args7 = arguments;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    options = _args7.length > 2 && _args7[2] !== void 0 ? _args7[2] : {};
                    (0, _common.assertParamExists)("updateProject", "projectId", projectId);
                    (0, _common.assertParamExists)("updateProject", "projectUpdateBody", projectUpdateBody);
                    localVarPath = "/v1/projects/{project_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context7.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context7.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformProjectUpdateBodyToJSON)(projectUpdateBody), localVarRequestOptions, configuration);
                    return _context7.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }));
          function updateProject(_x16, _x17) {
            return _updateProject.apply(this, arguments);
          }
          return updateProject;
        }()
      };
    };
    exports.ProjectsApiAxiosParamCreator = ProjectsApiAxiosParamCreator;
    var ProjectsApiFp = function ProjectsApiFp2(configuration) {
      var localVarAxiosParamCreator = ProjectsApiAxiosParamCreator(configuration);
      return {
        getProject: function getProject(projectId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    _context8.next = 2;
                    return localVarAxiosParamCreator.getProject(projectId, options);
                  case 2:
                    localVarAxiosArgs = _context8.sent;
                    return _context8.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }))();
        },
        getProjectDesignTokens: function getProjectDesignTokens(projectId, includeLinkedStyleguides, tokenNameCase, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    _context9.next = 2;
                    return localVarAxiosParamCreator.getProjectDesignTokens(projectId, includeLinkedStyleguides, tokenNameCase, options);
                  case 2:
                    localVarAxiosArgs = _context9.sent;
                    return _context9.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }))();
        },
        getProjectMembers: function getProjectMembers(projectId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    _context10.next = 2;
                    return localVarAxiosParamCreator.getProjectMembers(projectId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context10.sent;
                    return _context10.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }))();
        },
        getProjects: function getProjects(limit, workspace, status, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    _context11.next = 2;
                    return localVarAxiosParamCreator.getProjects(limit, workspace, status, offset, options);
                  case 2:
                    localVarAxiosArgs = _context11.sent;
                    return _context11.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }))();
        },
        inviteProjectMember: function inviteProjectMember(projectId, projectMemberInviteBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    _context12.next = 2;
                    return localVarAxiosParamCreator.inviteProjectMember(projectId, projectMemberInviteBody, options);
                  case 2:
                    localVarAxiosArgs = _context12.sent;
                    return _context12.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }))();
        },
        removeProjectMember: function removeProjectMember(projectId, memberId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee13() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    _context13.next = 2;
                    return localVarAxiosParamCreator.removeProjectMember(projectId, memberId, options);
                  case 2:
                    localVarAxiosArgs = _context13.sent;
                    return _context13.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }))();
        },
        updateProject: function updateProject(projectId, projectUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee14() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    _context14.next = 2;
                    return localVarAxiosParamCreator.updateProject(projectId, projectUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context14.sent;
                    return _context14.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }))();
        }
      };
    };
    exports.ProjectsApiFp = ProjectsApiFp;
    var ProjectsApi = function(_BaseAPI) {
      _inherits(ProjectsApi2, _BaseAPI);
      var _super = _createSuper(ProjectsApi2);
      function ProjectsApi2() {
        _classCallCheck(this, ProjectsApi2);
        return _super.apply(this, arguments);
      }
      _createClass(ProjectsApi2, [{
        key: "getProject",
        value: function() {
          var _getProject2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(projectId, options) {
            var projectsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    projectsApiFp = ProjectsApiFp(this.configuration);
                    _context15.next = 3;
                    return projectsApiFp.getProject(projectId, options);
                  case 3:
                    request = _context15.sent;
                    _context15.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context15.sent;
                    return _context15.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToProject)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15, this);
          }));
          function getProject(_x18, _x19) {
            return _getProject2.apply(this, arguments);
          }
          return getProject;
        }()
      }, {
        key: "getProjectDesignTokens",
        value: function() {
          var _getProjectDesignTokens2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(projectId) {
            var searchParams, options, projectsApiFp, request, response, _args16 = arguments;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    searchParams = _args16.length > 1 && _args16[1] !== void 0 ? _args16[1] : {};
                    options = _args16.length > 2 ? _args16[2] : void 0;
                    projectsApiFp = ProjectsApiFp(this.configuration);
                    _context16.next = 5;
                    return projectsApiFp.getProjectDesignTokens(projectId, searchParams.includeLinkedStyleguides, searchParams.tokenNameCase, options);
                  case 5:
                    request = _context16.sent;
                    _context16.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context16.sent;
                    return _context16.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToDesignTokens)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16, this);
          }));
          function getProjectDesignTokens(_x20) {
            return _getProjectDesignTokens2.apply(this, arguments);
          }
          return getProjectDesignTokens;
        }()
      }, {
        key: "getProjectMembers",
        value: function() {
          var _getProjectMembers2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(projectId) {
            var searchParams, options, projectsApiFp, request, response, _args17 = arguments;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    searchParams = _args17.length > 1 && _args17[1] !== void 0 ? _args17[1] : {};
                    options = _args17.length > 2 ? _args17[2] : void 0;
                    projectsApiFp = ProjectsApiFp(this.configuration);
                    _context17.next = 5;
                    return projectsApiFp.getProjectMembers(projectId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context17.sent;
                    _context17.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context17.sent;
                    return _context17.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToProjectMember)
                    }));
                  case 10:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17, this);
          }));
          function getProjectMembers(_x21) {
            return _getProjectMembers2.apply(this, arguments);
          }
          return getProjectMembers;
        }()
      }, {
        key: "getProjects",
        value: function() {
          var _getProjects2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee18() {
            var searchParams, options, projectsApiFp, request, response, _args18 = arguments;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    searchParams = _args18.length > 0 && _args18[0] !== void 0 ? _args18[0] : {};
                    options = _args18.length > 1 ? _args18[1] : void 0;
                    projectsApiFp = ProjectsApiFp(this.configuration);
                    _context18.next = 5;
                    return projectsApiFp.getProjects(searchParams.limit, searchParams.workspace, searchParams.status, searchParams.offset, options);
                  case 5:
                    request = _context18.sent;
                    _context18.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context18.sent;
                    return _context18.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToProject)
                    }));
                  case 10:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18, this);
          }));
          function getProjects() {
            return _getProjects2.apply(this, arguments);
          }
          return getProjects;
        }()
      }, {
        key: "inviteProjectMember",
        value: function() {
          var _inviteProjectMember2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee19(projectId, projectMemberInviteBody, options) {
            var projectsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee19$(_context19) {
              while (1) {
                switch (_context19.prev = _context19.next) {
                  case 0:
                    projectsApiFp = ProjectsApiFp(this.configuration);
                    _context19.next = 3;
                    return projectsApiFp.inviteProjectMember(projectId, projectMemberInviteBody, options);
                  case 3:
                    request = _context19.sent;
                    _context19.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context19.sent;
                    return _context19.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context19.stop();
                }
              }
            }, _callee19, this);
          }));
          function inviteProjectMember(_x22, _x23, _x24) {
            return _inviteProjectMember2.apply(this, arguments);
          }
          return inviteProjectMember;
        }()
      }, {
        key: "removeProjectMember",
        value: function() {
          var _removeProjectMember2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee20(projectId, memberId, options) {
            var projectsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    projectsApiFp = ProjectsApiFp(this.configuration);
                    _context20.next = 3;
                    return projectsApiFp.removeProjectMember(projectId, memberId, options);
                  case 3:
                    request = _context20.sent;
                    _context20.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context20.sent;
                    return _context20.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20, this);
          }));
          function removeProjectMember(_x25, _x26, _x27) {
            return _removeProjectMember2.apply(this, arguments);
          }
          return removeProjectMember;
        }()
      }, {
        key: "updateProject",
        value: function() {
          var _updateProject2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee21(projectId, projectUpdateBody, options) {
            var projectsApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee21$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    projectsApiFp = ProjectsApiFp(this.configuration);
                    _context21.next = 3;
                    return projectsApiFp.updateProject(projectId, projectUpdateBody, options);
                  case 3:
                    request = _context21.sent;
                    _context21.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context21.sent;
                    return _context21.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee21, this);
          }));
          function updateProject(_x28, _x29, _x30) {
            return _updateProject2.apply(this, arguments);
          }
          return updateProject;
        }()
      }]);
      return ProjectsApi2;
    }(_base.BaseAPI);
    exports.ProjectsApi = ProjectsApi;
  }
});

// node_modules/core-js/modules/es.array.join.js
var require_es_array_join = __commonJS({
  "node_modules/core-js/modules/es.array.join.js"() {
    "use strict";
    var $ = require_export();
    var uncurryThis = require_function_uncurry_this();
    var IndexedObject = require_indexed_object();
    var toIndexedObject = require_to_indexed_object();
    var arrayMethodIsStrict = require_array_method_is_strict();
    var nativeJoin = uncurryThis([].join);
    var ES3_STRINGS = IndexedObject != Object;
    var STRICT_METHOD = arrayMethodIsStrict("join", ",");
    $({ target: "Array", proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {
      join: function join(separator) {
        return nativeJoin(toIndexedObject(this), separator === void 0 ? "," : separator);
      }
    });
  }
});

// node_modules/core-js/modules/es.object.assign.js
var require_es_object_assign = __commonJS({
  "node_modules/core-js/modules/es.object.assign.js"() {
    var $ = require_export();
    var assign = require_object_assign();
    $({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign }, {
      assign
    });
  }
});

// node_modules/form-data/lib/browser.js
var require_browser = __commonJS({
  "node_modules/form-data/lib/browser.js"(exports, module) {
    module.exports = typeof self == "object" ? self.FormData : window.FormData;
  }
});

// node_modules/@zeplin/sdk/dist/apis/screens-api.js
var require_screens_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/screens-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ScreensApiFp = exports.ScreensApiAxiosParamCreator = exports.ScreensApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_join();
    require_es_object_assign();
    require_es_array_sort();
    require_es_function_name();
    require_es_symbol();
    require_es_symbol_description();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _formData = _interopRequireDefault(require_browser());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var ScreensApiAxiosParamCreator = function ScreensApiAxiosParamCreator2(configuration) {
      return {
        createScreen: function() {
          var _createScreen = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId, name, image, description, commitMessage, commitColor, tags, sectionId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarFormParams, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 8 && _args[8] !== void 0 ? _args[8] : {};
                    (0, _common.assertParamExists)("createScreen", "projectId", projectId);
                    (0, _common.assertParamExists)("createScreen", "name", name);
                    (0, _common.assertParamExists)("createScreen", "image", image);
                    localVarPath = "/v1/projects/{project_id}/screens".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    localVarFormParams = new _formData["default"]();
                    _context.next = 13;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 13:
                    _context.next = 15;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 15:
                    if (name !== void 0) {
                      localVarFormParams.append("name", name);
                    }
                    if (image !== void 0) {
                      localVarFormParams.append("image", image.file, "image.".concat(image.type));
                    }
                    if (description !== void 0) {
                      localVarFormParams.append("description", description);
                    }
                    if (commitMessage !== void 0) {
                      localVarFormParams.append("commit_message", commitMessage);
                    }
                    if (commitColor !== void 0) {
                      localVarFormParams.append("commit_color", commitColor);
                    }
                    if (tags) {
                      localVarFormParams.append("tags", tags.join(_base.COLLECTION_FORMATS.csv));
                    }
                    if (sectionId !== void 0) {
                      localVarFormParams.append("section_id", sectionId);
                    }
                    if (localVarFormParams.getHeaders) {
                      Object.assign(localVarHeaderParameter, localVarFormParams.getHeaders());
                    } else {
                      localVarHeaderParameter["Content-Type"] = "multipart/form-data";
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = localVarFormParams;
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 28:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function createScreen(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {
            return _createScreen.apply(this, arguments);
          }
          return createScreen;
        }(),
        createScreenComment: function() {
          var _createScreenComment = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(projectId, screenId, noteId, commentCreateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 4 && _args2[4] !== void 0 ? _args2[4] : {};
                    (0, _common.assertParamExists)("createScreenComment", "projectId", projectId);
                    (0, _common.assertParamExists)("createScreenComment", "screenId", screenId);
                    (0, _common.assertParamExists)("createScreenComment", "noteId", noteId);
                    (0, _common.assertParamExists)("createScreenComment", "commentCreateBody", commentCreateBody);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/notes/{note_id}/comments".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId))).replace("{".concat("note_id", "}"), encodeURIComponent(String(noteId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 13;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 13:
                    _context2.next = 15;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 15:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformCommentCreateBodyToJSON)(commentCreateBody), localVarRequestOptions, configuration);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function createScreenComment(_x9, _x10, _x11, _x12) {
            return _createScreenComment.apply(this, arguments);
          }
          return createScreenComment;
        }(),
        createScreenNote: function() {
          var _createScreenNote = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(projectId, screenId, screenNoteCreateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 3 && _args3[3] !== void 0 ? _args3[3] : {};
                    (0, _common.assertParamExists)("createScreenNote", "projectId", projectId);
                    (0, _common.assertParamExists)("createScreenNote", "screenId", screenId);
                    (0, _common.assertParamExists)("createScreenNote", "screenNoteCreateBody", screenNoteCreateBody);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/notes".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context3.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformScreenNoteCreateBodyToJSON)(screenNoteCreateBody), localVarRequestOptions, configuration);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function createScreenNote(_x13, _x14, _x15) {
            return _createScreenNote.apply(this, arguments);
          }
          return createScreenNote;
        }(),
        createScreenVersion: function() {
          var _createScreenVersion = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(projectId, screenId, image, commitMessage, commitColor) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarFormParams, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 5 && _args4[5] !== void 0 ? _args4[5] : {};
                    (0, _common.assertParamExists)("createScreenVersion", "projectId", projectId);
                    (0, _common.assertParamExists)("createScreenVersion", "screenId", screenId);
                    (0, _common.assertParamExists)("createScreenVersion", "image", image);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/versions".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    localVarFormParams = new _formData["default"]();
                    _context4.next = 13;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 13:
                    _context4.next = 15;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 15:
                    if (image !== void 0) {
                      localVarFormParams.append("image", image.file, "image.".concat(image.type));
                    }
                    if (commitMessage !== void 0) {
                      localVarFormParams.append("commit_message", commitMessage);
                    }
                    if (commitColor !== void 0) {
                      localVarFormParams.append("commit_color", commitColor);
                    }
                    if (localVarFormParams.getHeaders) {
                      Object.assign(localVarHeaderParameter, localVarFormParams.getHeaders());
                    } else {
                      localVarHeaderParameter["Content-Type"] = "multipart/form-data";
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = localVarFormParams;
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 24:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function createScreenVersion(_x16, _x17, _x18, _x19, _x20) {
            return _createScreenVersion.apply(this, arguments);
          }
          return createScreenVersion;
        }(),
        deleteScreenComment: function() {
          var _deleteScreenComment = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(projectId, screenId, noteId, commentId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 4 && _args5[4] !== void 0 ? _args5[4] : {};
                    (0, _common.assertParamExists)("deleteScreenComment", "projectId", projectId);
                    (0, _common.assertParamExists)("deleteScreenComment", "screenId", screenId);
                    (0, _common.assertParamExists)("deleteScreenComment", "noteId", noteId);
                    (0, _common.assertParamExists)("deleteScreenComment", "commentId", commentId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/notes/{note_id}/comments/{comment_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId))).replace("{".concat("note_id", "}"), encodeURIComponent(String(noteId))).replace("{".concat("comment_id", "}"), encodeURIComponent(String(commentId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 13;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 13:
                    _context5.next = 15;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 15:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function deleteScreenComment(_x21, _x22, _x23, _x24) {
            return _deleteScreenComment.apply(this, arguments);
          }
          return deleteScreenComment;
        }(),
        deleteScreenNote: function() {
          var _deleteScreenNote = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(projectId, screenId, noteId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 3 && _args6[3] !== void 0 ? _args6[3] : {};
                    (0, _common.assertParamExists)("deleteScreenNote", "projectId", projectId);
                    (0, _common.assertParamExists)("deleteScreenNote", "screenId", screenId);
                    (0, _common.assertParamExists)("deleteScreenNote", "noteId", noteId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/notes/{note_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId))).replace("{".concat("note_id", "}"), encodeURIComponent(String(noteId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context6.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function deleteScreenNote(_x25, _x26, _x27) {
            return _deleteScreenNote.apply(this, arguments);
          }
          return deleteScreenNote;
        }(),
        getLatestScreenVersion: function() {
          var _getLatestScreenVersion = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(projectId, screenId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args7 = arguments;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    options = _args7.length > 2 && _args7[2] !== void 0 ? _args7[2] : {};
                    (0, _common.assertParamExists)("getLatestScreenVersion", "projectId", projectId);
                    (0, _common.assertParamExists)("getLatestScreenVersion", "screenId", screenId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/versions/latest".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context7.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context7.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context7.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }));
          function getLatestScreenVersion(_x28, _x29) {
            return _getLatestScreenVersion.apply(this, arguments);
          }
          return getLatestScreenVersion;
        }(),
        getProjectScreens: function() {
          var _getProjectScreens = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(projectId, sectionId, sort, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args8 = arguments;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    options = _args8.length > 5 && _args8[5] !== void 0 ? _args8[5] : {};
                    (0, _common.assertParamExists)("getProjectScreens", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/screens".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context8.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context8.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (sectionId !== void 0) {
                      localVarQueryParameter["section_id"] = sectionId;
                    }
                    if (sort !== void 0) {
                      localVarQueryParameter["sort"] = sort;
                    }
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context8.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }));
          function getProjectScreens(_x30, _x31, _x32, _x33, _x34) {
            return _getProjectScreens.apply(this, arguments);
          }
          return getProjectScreens;
        }(),
        getScreen: function() {
          var _getScreen = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(projectId, screenId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args9 = arguments;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    options = _args9.length > 2 && _args9[2] !== void 0 ? _args9[2] : {};
                    (0, _common.assertParamExists)("getScreen", "projectId", projectId);
                    (0, _common.assertParamExists)("getScreen", "screenId", screenId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context9.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context9.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context9.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }));
          function getScreen(_x35, _x36) {
            return _getScreen.apply(this, arguments);
          }
          return getScreen;
        }(),
        getScreenComponents: function() {
          var _getScreenComponents = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(projectId, screenId, limit, offset, includeLatestVersion, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args10 = arguments;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    options = _args10.length > 6 && _args10[6] !== void 0 ? _args10[6] : {};
                    (0, _common.assertParamExists)("getScreenComponents", "projectId", projectId);
                    (0, _common.assertParamExists)("getScreenComponents", "screenId", screenId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/components".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context10.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context10.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (includeLatestVersion !== void 0) {
                      localVarQueryParameter["include_latest_version"] = includeLatestVersion;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context10.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }));
          function getScreenComponents(_x37, _x38, _x39, _x40, _x41, _x42) {
            return _getScreenComponents.apply(this, arguments);
          }
          return getScreenComponents;
        }(),
        getScreenNote: function() {
          var _getScreenNote = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(projectId, screenId, noteId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args11 = arguments;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    options = _args11.length > 3 && _args11[3] !== void 0 ? _args11[3] : {};
                    (0, _common.assertParamExists)("getScreenNote", "projectId", projectId);
                    (0, _common.assertParamExists)("getScreenNote", "screenId", screenId);
                    (0, _common.assertParamExists)("getScreenNote", "noteId", noteId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/notes/{note_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId))).replace("{".concat("note_id", "}"), encodeURIComponent(String(noteId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context11.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context11.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context11.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }));
          function getScreenNote(_x43, _x44, _x45) {
            return _getScreenNote.apply(this, arguments);
          }
          return getScreenNote;
        }(),
        getScreenNotes: function() {
          var _getScreenNotes = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(projectId, screenId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args12 = arguments;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    options = _args12.length > 4 && _args12[4] !== void 0 ? _args12[4] : {};
                    (0, _common.assertParamExists)("getScreenNotes", "projectId", projectId);
                    (0, _common.assertParamExists)("getScreenNotes", "screenId", screenId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/notes".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context12.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context12.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context12.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }));
          function getScreenNotes(_x46, _x47, _x48, _x49) {
            return _getScreenNotes.apply(this, arguments);
          }
          return getScreenNotes;
        }(),
        getScreenSection: function() {
          var _getScreenSection = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(projectId, sectionId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args13 = arguments;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    options = _args13.length > 2 && _args13[2] !== void 0 ? _args13[2] : {};
                    (0, _common.assertParamExists)("getScreenSection", "projectId", projectId);
                    (0, _common.assertParamExists)("getScreenSection", "sectionId", sectionId);
                    localVarPath = "/v1/projects/{project_id}/screen_sections/{section_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("section_id", "}"), encodeURIComponent(String(sectionId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context13.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context13.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context13.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }));
          function getScreenSection(_x50, _x51) {
            return _getScreenSection.apply(this, arguments);
          }
          return getScreenSection;
        }(),
        getScreenSections: function() {
          var _getScreenSections = _asyncToGenerator(regeneratorRuntime.mark(function _callee14(projectId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args14 = arguments;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    options = _args14.length > 3 && _args14[3] !== void 0 ? _args14[3] : {};
                    (0, _common.assertParamExists)("getScreenSections", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/screen_sections".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context14.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context14.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context14.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }));
          function getScreenSections(_x52, _x53, _x54) {
            return _getScreenSections.apply(this, arguments);
          }
          return getScreenSections;
        }(),
        getScreenVariant: function() {
          var _getScreenVariant = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(projectId, variantId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args15 = arguments;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    options = _args15.length > 2 && _args15[2] !== void 0 ? _args15[2] : {};
                    (0, _common.assertParamExists)("getScreenVariant", "projectId", projectId);
                    (0, _common.assertParamExists)("getScreenVariant", "variantId", variantId);
                    localVarPath = "/v1/projects/{project_id}/screen_variants/{variant_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("variant_id", "}"), encodeURIComponent(String(variantId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context15.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context15.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context15.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15);
          }));
          function getScreenVariant(_x55, _x56) {
            return _getScreenVariant.apply(this, arguments);
          }
          return getScreenVariant;
        }(),
        getScreenVariants: function() {
          var _getScreenVariants = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(projectId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args16 = arguments;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    options = _args16.length > 3 && _args16[3] !== void 0 ? _args16[3] : {};
                    (0, _common.assertParamExists)("getScreenVariants", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/screen_variants".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context16.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context16.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context16.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16);
          }));
          function getScreenVariants(_x57, _x58, _x59) {
            return _getScreenVariants.apply(this, arguments);
          }
          return getScreenVariants;
        }(),
        getScreenVersion: function() {
          var _getScreenVersion = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(projectId, screenId, versionId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args17 = arguments;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    options = _args17.length > 3 && _args17[3] !== void 0 ? _args17[3] : {};
                    (0, _common.assertParamExists)("getScreenVersion", "projectId", projectId);
                    (0, _common.assertParamExists)("getScreenVersion", "screenId", screenId);
                    (0, _common.assertParamExists)("getScreenVersion", "versionId", versionId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/versions/{version_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId))).replace("{".concat("version_id", "}"), encodeURIComponent(String(versionId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context17.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context17.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context17.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17);
          }));
          function getScreenVersion(_x60, _x61, _x62) {
            return _getScreenVersion.apply(this, arguments);
          }
          return getScreenVersion;
        }(),
        getScreenVersions: function() {
          var _getScreenVersions = _asyncToGenerator(regeneratorRuntime.mark(function _callee18(projectId, screenId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args18 = arguments;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    options = _args18.length > 4 && _args18[4] !== void 0 ? _args18[4] : {};
                    (0, _common.assertParamExists)("getScreenVersions", "projectId", projectId);
                    (0, _common.assertParamExists)("getScreenVersions", "screenId", screenId);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/versions".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context18.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context18.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context18.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18);
          }));
          function getScreenVersions(_x63, _x64, _x65, _x66) {
            return _getScreenVersions.apply(this, arguments);
          }
          return getScreenVersions;
        }(),
        updateScreen: function() {
          var _updateScreen = _asyncToGenerator(regeneratorRuntime.mark(function _callee19(projectId, screenId, screenUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args19 = arguments;
            return regeneratorRuntime.wrap(function _callee19$(_context19) {
              while (1) {
                switch (_context19.prev = _context19.next) {
                  case 0:
                    options = _args19.length > 3 && _args19[3] !== void 0 ? _args19[3] : {};
                    (0, _common.assertParamExists)("updateScreen", "projectId", projectId);
                    (0, _common.assertParamExists)("updateScreen", "screenId", screenId);
                    (0, _common.assertParamExists)("updateScreen", "screenUpdateBody", screenUpdateBody);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context19.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context19.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformScreenUpdateBodyToJSON)(screenUpdateBody), localVarRequestOptions, configuration);
                    return _context19.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context19.stop();
                }
              }
            }, _callee19);
          }));
          function updateScreen(_x67, _x68, _x69) {
            return _updateScreen.apply(this, arguments);
          }
          return updateScreen;
        }(),
        updateScreenComment: function() {
          var _updateScreenComment = _asyncToGenerator(regeneratorRuntime.mark(function _callee20(projectId, screenId, noteId, commentId, commentUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args20 = arguments;
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    options = _args20.length > 5 && _args20[5] !== void 0 ? _args20[5] : {};
                    (0, _common.assertParamExists)("updateScreenComment", "projectId", projectId);
                    (0, _common.assertParamExists)("updateScreenComment", "screenId", screenId);
                    (0, _common.assertParamExists)("updateScreenComment", "noteId", noteId);
                    (0, _common.assertParamExists)("updateScreenComment", "commentId", commentId);
                    (0, _common.assertParamExists)("updateScreenComment", "commentUpdateBody", commentUpdateBody);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/notes/{note_id}/comments/{comment_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId))).replace("{".concat("note_id", "}"), encodeURIComponent(String(noteId))).replace("{".concat("comment_id", "}"), encodeURIComponent(String(commentId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context20.next = 14;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 14:
                    _context20.next = 16;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 16:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformCommentUpdateBodyToJSON)(commentUpdateBody), localVarRequestOptions, configuration);
                    return _context20.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 22:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20);
          }));
          function updateScreenComment(_x70, _x71, _x72, _x73, _x74) {
            return _updateScreenComment.apply(this, arguments);
          }
          return updateScreenComment;
        }(),
        updateScreenNote: function() {
          var _updateScreenNote = _asyncToGenerator(regeneratorRuntime.mark(function _callee21(projectId, screenId, noteId, screenNoteUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args21 = arguments;
            return regeneratorRuntime.wrap(function _callee21$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    options = _args21.length > 4 && _args21[4] !== void 0 ? _args21[4] : {};
                    (0, _common.assertParamExists)("updateScreenNote", "projectId", projectId);
                    (0, _common.assertParamExists)("updateScreenNote", "screenId", screenId);
                    (0, _common.assertParamExists)("updateScreenNote", "noteId", noteId);
                    (0, _common.assertParamExists)("updateScreenNote", "screenNoteUpdateBody", screenNoteUpdateBody);
                    localVarPath = "/v1/projects/{project_id}/screens/{screen_id}/notes/{note_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("screen_id", "}"), encodeURIComponent(String(screenId))).replace("{".concat("note_id", "}"), encodeURIComponent(String(noteId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context21.next = 13;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 13:
                    _context21.next = 15;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 15:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformScreenNoteUpdateBodyToJSON)(screenNoteUpdateBody), localVarRequestOptions, configuration);
                    return _context21.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee21);
          }));
          function updateScreenNote(_x75, _x76, _x77, _x78) {
            return _updateScreenNote.apply(this, arguments);
          }
          return updateScreenNote;
        }()
      };
    };
    exports.ScreensApiAxiosParamCreator = ScreensApiAxiosParamCreator;
    var ScreensApiFp = function ScreensApiFp2(configuration) {
      var localVarAxiosParamCreator = ScreensApiAxiosParamCreator(configuration);
      return {
        createScreen: function createScreen(projectId, name, image, description, commitMessage, commitColor, tags, sectionId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee22() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee22$(_context22) {
              while (1) {
                switch (_context22.prev = _context22.next) {
                  case 0:
                    _context22.next = 2;
                    return localVarAxiosParamCreator.createScreen(projectId, name, image, description, commitMessage, commitColor, tags, sectionId, options);
                  case 2:
                    localVarAxiosArgs = _context22.sent;
                    return _context22.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context22.stop();
                }
              }
            }, _callee22);
          }))();
        },
        createScreenComment: function createScreenComment(projectId, screenId, noteId, commentCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee23() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee23$(_context23) {
              while (1) {
                switch (_context23.prev = _context23.next) {
                  case 0:
                    _context23.next = 2;
                    return localVarAxiosParamCreator.createScreenComment(projectId, screenId, noteId, commentCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context23.sent;
                    return _context23.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context23.stop();
                }
              }
            }, _callee23);
          }))();
        },
        createScreenNote: function createScreenNote(projectId, screenId, screenNoteCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee24() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee24$(_context24) {
              while (1) {
                switch (_context24.prev = _context24.next) {
                  case 0:
                    _context24.next = 2;
                    return localVarAxiosParamCreator.createScreenNote(projectId, screenId, screenNoteCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context24.sent;
                    return _context24.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context24.stop();
                }
              }
            }, _callee24);
          }))();
        },
        createScreenVersion: function createScreenVersion(projectId, screenId, image, commitMessage, commitColor, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee25() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee25$(_context25) {
              while (1) {
                switch (_context25.prev = _context25.next) {
                  case 0:
                    _context25.next = 2;
                    return localVarAxiosParamCreator.createScreenVersion(projectId, screenId, image, commitMessage, commitColor, options);
                  case 2:
                    localVarAxiosArgs = _context25.sent;
                    return _context25.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context25.stop();
                }
              }
            }, _callee25);
          }))();
        },
        deleteScreenComment: function deleteScreenComment(projectId, screenId, noteId, commentId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee26() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee26$(_context26) {
              while (1) {
                switch (_context26.prev = _context26.next) {
                  case 0:
                    _context26.next = 2;
                    return localVarAxiosParamCreator.deleteScreenComment(projectId, screenId, noteId, commentId, options);
                  case 2:
                    localVarAxiosArgs = _context26.sent;
                    return _context26.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context26.stop();
                }
              }
            }, _callee26);
          }))();
        },
        deleteScreenNote: function deleteScreenNote(projectId, screenId, noteId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee27() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee27$(_context27) {
              while (1) {
                switch (_context27.prev = _context27.next) {
                  case 0:
                    _context27.next = 2;
                    return localVarAxiosParamCreator.deleteScreenNote(projectId, screenId, noteId, options);
                  case 2:
                    localVarAxiosArgs = _context27.sent;
                    return _context27.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context27.stop();
                }
              }
            }, _callee27);
          }))();
        },
        getLatestScreenVersion: function getLatestScreenVersion(projectId, screenId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee28() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee28$(_context28) {
              while (1) {
                switch (_context28.prev = _context28.next) {
                  case 0:
                    _context28.next = 2;
                    return localVarAxiosParamCreator.getLatestScreenVersion(projectId, screenId, options);
                  case 2:
                    localVarAxiosArgs = _context28.sent;
                    return _context28.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context28.stop();
                }
              }
            }, _callee28);
          }))();
        },
        getProjectScreens: function getProjectScreens(projectId, sectionId, sort, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee29() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee29$(_context29) {
              while (1) {
                switch (_context29.prev = _context29.next) {
                  case 0:
                    _context29.next = 2;
                    return localVarAxiosParamCreator.getProjectScreens(projectId, sectionId, sort, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context29.sent;
                    return _context29.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context29.stop();
                }
              }
            }, _callee29);
          }))();
        },
        getScreen: function getScreen(projectId, screenId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee30() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee30$(_context30) {
              while (1) {
                switch (_context30.prev = _context30.next) {
                  case 0:
                    _context30.next = 2;
                    return localVarAxiosParamCreator.getScreen(projectId, screenId, options);
                  case 2:
                    localVarAxiosArgs = _context30.sent;
                    return _context30.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context30.stop();
                }
              }
            }, _callee30);
          }))();
        },
        getScreenComponents: function getScreenComponents(projectId, screenId, limit, offset, includeLatestVersion, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee31() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee31$(_context31) {
              while (1) {
                switch (_context31.prev = _context31.next) {
                  case 0:
                    _context31.next = 2;
                    return localVarAxiosParamCreator.getScreenComponents(projectId, screenId, limit, offset, includeLatestVersion, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context31.sent;
                    return _context31.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context31.stop();
                }
              }
            }, _callee31);
          }))();
        },
        getScreenNote: function getScreenNote(projectId, screenId, noteId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee32() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee32$(_context32) {
              while (1) {
                switch (_context32.prev = _context32.next) {
                  case 0:
                    _context32.next = 2;
                    return localVarAxiosParamCreator.getScreenNote(projectId, screenId, noteId, options);
                  case 2:
                    localVarAxiosArgs = _context32.sent;
                    return _context32.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context32.stop();
                }
              }
            }, _callee32);
          }))();
        },
        getScreenNotes: function getScreenNotes(projectId, screenId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee33() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee33$(_context33) {
              while (1) {
                switch (_context33.prev = _context33.next) {
                  case 0:
                    _context33.next = 2;
                    return localVarAxiosParamCreator.getScreenNotes(projectId, screenId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context33.sent;
                    return _context33.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context33.stop();
                }
              }
            }, _callee33);
          }))();
        },
        getScreenSection: function getScreenSection(projectId, sectionId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee34() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee34$(_context34) {
              while (1) {
                switch (_context34.prev = _context34.next) {
                  case 0:
                    _context34.next = 2;
                    return localVarAxiosParamCreator.getScreenSection(projectId, sectionId, options);
                  case 2:
                    localVarAxiosArgs = _context34.sent;
                    return _context34.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context34.stop();
                }
              }
            }, _callee34);
          }))();
        },
        getScreenSections: function getScreenSections(projectId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee35() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee35$(_context35) {
              while (1) {
                switch (_context35.prev = _context35.next) {
                  case 0:
                    _context35.next = 2;
                    return localVarAxiosParamCreator.getScreenSections(projectId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context35.sent;
                    return _context35.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context35.stop();
                }
              }
            }, _callee35);
          }))();
        },
        getScreenVariant: function getScreenVariant(projectId, variantId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee36() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee36$(_context36) {
              while (1) {
                switch (_context36.prev = _context36.next) {
                  case 0:
                    _context36.next = 2;
                    return localVarAxiosParamCreator.getScreenVariant(projectId, variantId, options);
                  case 2:
                    localVarAxiosArgs = _context36.sent;
                    return _context36.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context36.stop();
                }
              }
            }, _callee36);
          }))();
        },
        getScreenVariants: function getScreenVariants(projectId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee37() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee37$(_context37) {
              while (1) {
                switch (_context37.prev = _context37.next) {
                  case 0:
                    _context37.next = 2;
                    return localVarAxiosParamCreator.getScreenVariants(projectId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context37.sent;
                    return _context37.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context37.stop();
                }
              }
            }, _callee37);
          }))();
        },
        getScreenVersion: function getScreenVersion(projectId, screenId, versionId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee38() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee38$(_context38) {
              while (1) {
                switch (_context38.prev = _context38.next) {
                  case 0:
                    _context38.next = 2;
                    return localVarAxiosParamCreator.getScreenVersion(projectId, screenId, versionId, options);
                  case 2:
                    localVarAxiosArgs = _context38.sent;
                    return _context38.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context38.stop();
                }
              }
            }, _callee38);
          }))();
        },
        getScreenVersions: function getScreenVersions(projectId, screenId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee39() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee39$(_context39) {
              while (1) {
                switch (_context39.prev = _context39.next) {
                  case 0:
                    _context39.next = 2;
                    return localVarAxiosParamCreator.getScreenVersions(projectId, screenId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context39.sent;
                    return _context39.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context39.stop();
                }
              }
            }, _callee39);
          }))();
        },
        updateScreen: function updateScreen(projectId, screenId, screenUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee40() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee40$(_context40) {
              while (1) {
                switch (_context40.prev = _context40.next) {
                  case 0:
                    _context40.next = 2;
                    return localVarAxiosParamCreator.updateScreen(projectId, screenId, screenUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context40.sent;
                    return _context40.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context40.stop();
                }
              }
            }, _callee40);
          }))();
        },
        updateScreenComment: function updateScreenComment(projectId, screenId, noteId, commentId, commentUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee41() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee41$(_context41) {
              while (1) {
                switch (_context41.prev = _context41.next) {
                  case 0:
                    _context41.next = 2;
                    return localVarAxiosParamCreator.updateScreenComment(projectId, screenId, noteId, commentId, commentUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context41.sent;
                    return _context41.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context41.stop();
                }
              }
            }, _callee41);
          }))();
        },
        updateScreenNote: function updateScreenNote(projectId, screenId, noteId, screenNoteUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee42() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee42$(_context42) {
              while (1) {
                switch (_context42.prev = _context42.next) {
                  case 0:
                    _context42.next = 2;
                    return localVarAxiosParamCreator.updateScreenNote(projectId, screenId, noteId, screenNoteUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context42.sent;
                    return _context42.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context42.stop();
                }
              }
            }, _callee42);
          }))();
        }
      };
    };
    exports.ScreensApiFp = ScreensApiFp;
    var ScreensApi = function(_BaseAPI) {
      _inherits(ScreensApi2, _BaseAPI);
      var _super = _createSuper(ScreensApi2);
      function ScreensApi2() {
        _classCallCheck(this, ScreensApi2);
        return _super.apply(this, arguments);
      }
      _createClass(ScreensApi2, [{
        key: "createScreen",
        value: function() {
          var _createScreen2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee43(projectId, multipartParams, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee43$(_context43) {
              while (1) {
                switch (_context43.prev = _context43.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context43.next = 3;
                    return screensApiFp.createScreen(projectId, multipartParams.name, multipartParams.image, multipartParams.description, multipartParams.commitMessage, multipartParams.commitColor, multipartParams.tags, multipartParams.sectionId, options);
                  case 3:
                    request = _context43.sent;
                    _context43.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context43.sent;
                    return _context43.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context43.stop();
                }
              }
            }, _callee43, this);
          }));
          function createScreen(_x79, _x80, _x81) {
            return _createScreen2.apply(this, arguments);
          }
          return createScreen;
        }()
      }, {
        key: "createScreenComment",
        value: function() {
          var _createScreenComment2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee44(projectId, screenId, noteId, commentCreateBody, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee44$(_context44) {
              while (1) {
                switch (_context44.prev = _context44.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context44.next = 3;
                    return screensApiFp.createScreenComment(projectId, screenId, noteId, commentCreateBody, options);
                  case 3:
                    request = _context44.sent;
                    _context44.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context44.sent;
                    return _context44.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context44.stop();
                }
              }
            }, _callee44, this);
          }));
          function createScreenComment(_x82, _x83, _x84, _x85, _x86) {
            return _createScreenComment2.apply(this, arguments);
          }
          return createScreenComment;
        }()
      }, {
        key: "createScreenNote",
        value: function() {
          var _createScreenNote2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee45(projectId, screenId, screenNoteCreateBody, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee45$(_context45) {
              while (1) {
                switch (_context45.prev = _context45.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context45.next = 3;
                    return screensApiFp.createScreenNote(projectId, screenId, screenNoteCreateBody, options);
                  case 3:
                    request = _context45.sent;
                    _context45.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context45.sent;
                    return _context45.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context45.stop();
                }
              }
            }, _callee45, this);
          }));
          function createScreenNote(_x87, _x88, _x89, _x90) {
            return _createScreenNote2.apply(this, arguments);
          }
          return createScreenNote;
        }()
      }, {
        key: "createScreenVersion",
        value: function() {
          var _createScreenVersion2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee46(projectId, screenId, multipartParams, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee46$(_context46) {
              while (1) {
                switch (_context46.prev = _context46.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context46.next = 3;
                    return screensApiFp.createScreenVersion(projectId, screenId, multipartParams.image, multipartParams.commitMessage, multipartParams.commitColor, options);
                  case 3:
                    request = _context46.sent;
                    _context46.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context46.sent;
                    return _context46.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context46.stop();
                }
              }
            }, _callee46, this);
          }));
          function createScreenVersion(_x91, _x92, _x93, _x94) {
            return _createScreenVersion2.apply(this, arguments);
          }
          return createScreenVersion;
        }()
      }, {
        key: "deleteScreenComment",
        value: function() {
          var _deleteScreenComment2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee47(projectId, screenId, noteId, commentId, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee47$(_context47) {
              while (1) {
                switch (_context47.prev = _context47.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context47.next = 3;
                    return screensApiFp.deleteScreenComment(projectId, screenId, noteId, commentId, options);
                  case 3:
                    request = _context47.sent;
                    _context47.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context47.sent;
                    return _context47.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context47.stop();
                }
              }
            }, _callee47, this);
          }));
          function deleteScreenComment(_x95, _x96, _x97, _x98, _x99) {
            return _deleteScreenComment2.apply(this, arguments);
          }
          return deleteScreenComment;
        }()
      }, {
        key: "deleteScreenNote",
        value: function() {
          var _deleteScreenNote2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee48(projectId, screenId, noteId, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee48$(_context48) {
              while (1) {
                switch (_context48.prev = _context48.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context48.next = 3;
                    return screensApiFp.deleteScreenNote(projectId, screenId, noteId, options);
                  case 3:
                    request = _context48.sent;
                    _context48.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context48.sent;
                    return _context48.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context48.stop();
                }
              }
            }, _callee48, this);
          }));
          function deleteScreenNote(_x100, _x101, _x102, _x103) {
            return _deleteScreenNote2.apply(this, arguments);
          }
          return deleteScreenNote;
        }()
      }, {
        key: "getLatestScreenVersion",
        value: function() {
          var _getLatestScreenVersion2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee49(projectId, screenId, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee49$(_context49) {
              while (1) {
                switch (_context49.prev = _context49.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context49.next = 3;
                    return screensApiFp.getLatestScreenVersion(projectId, screenId, options);
                  case 3:
                    request = _context49.sent;
                    _context49.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context49.sent;
                    return _context49.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToScreenVersion)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context49.stop();
                }
              }
            }, _callee49, this);
          }));
          function getLatestScreenVersion(_x104, _x105, _x106) {
            return _getLatestScreenVersion2.apply(this, arguments);
          }
          return getLatestScreenVersion;
        }()
      }, {
        key: "getProjectScreens",
        value: function() {
          var _getProjectScreens2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee50(projectId) {
            var searchParams, options, screensApiFp, request, response, _args50 = arguments;
            return regeneratorRuntime.wrap(function _callee50$(_context50) {
              while (1) {
                switch (_context50.prev = _context50.next) {
                  case 0:
                    searchParams = _args50.length > 1 && _args50[1] !== void 0 ? _args50[1] : {};
                    options = _args50.length > 2 ? _args50[2] : void 0;
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context50.next = 5;
                    return screensApiFp.getProjectScreens(projectId, searchParams.sectionId, searchParams.sort, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context50.sent;
                    _context50.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context50.sent;
                    return _context50.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToScreen)
                    }));
                  case 10:
                  case "end":
                    return _context50.stop();
                }
              }
            }, _callee50, this);
          }));
          function getProjectScreens(_x107) {
            return _getProjectScreens2.apply(this, arguments);
          }
          return getProjectScreens;
        }()
      }, {
        key: "getScreen",
        value: function() {
          var _getScreen2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee51(projectId, screenId, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee51$(_context51) {
              while (1) {
                switch (_context51.prev = _context51.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context51.next = 3;
                    return screensApiFp.getScreen(projectId, screenId, options);
                  case 3:
                    request = _context51.sent;
                    _context51.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context51.sent;
                    return _context51.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToScreen)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context51.stop();
                }
              }
            }, _callee51, this);
          }));
          function getScreen(_x108, _x109, _x110) {
            return _getScreen2.apply(this, arguments);
          }
          return getScreen;
        }()
      }, {
        key: "getScreenComponents",
        value: function() {
          var _getScreenComponents2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee52(projectId, screenId) {
            var searchParams, options, screensApiFp, request, response, _args52 = arguments;
            return regeneratorRuntime.wrap(function _callee52$(_context52) {
              while (1) {
                switch (_context52.prev = _context52.next) {
                  case 0:
                    searchParams = _args52.length > 2 && _args52[2] !== void 0 ? _args52[2] : {};
                    options = _args52.length > 3 ? _args52[3] : void 0;
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context52.next = 5;
                    return screensApiFp.getScreenComponents(projectId, screenId, searchParams.limit, searchParams.offset, searchParams.includeLatestVersion, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context52.sent;
                    _context52.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context52.sent;
                    return _context52.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToComponent)
                    }));
                  case 10:
                  case "end":
                    return _context52.stop();
                }
              }
            }, _callee52, this);
          }));
          function getScreenComponents(_x111, _x112) {
            return _getScreenComponents2.apply(this, arguments);
          }
          return getScreenComponents;
        }()
      }, {
        key: "getScreenNote",
        value: function() {
          var _getScreenNote2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee53(projectId, screenId, noteId, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee53$(_context53) {
              while (1) {
                switch (_context53.prev = _context53.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context53.next = 3;
                    return screensApiFp.getScreenNote(projectId, screenId, noteId, options);
                  case 3:
                    request = _context53.sent;
                    _context53.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context53.sent;
                    return _context53.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToScreenNote)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context53.stop();
                }
              }
            }, _callee53, this);
          }));
          function getScreenNote(_x113, _x114, _x115, _x116) {
            return _getScreenNote2.apply(this, arguments);
          }
          return getScreenNote;
        }()
      }, {
        key: "getScreenNotes",
        value: function() {
          var _getScreenNotes2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee54(projectId, screenId) {
            var searchParams, options, screensApiFp, request, response, _args54 = arguments;
            return regeneratorRuntime.wrap(function _callee54$(_context54) {
              while (1) {
                switch (_context54.prev = _context54.next) {
                  case 0:
                    searchParams = _args54.length > 2 && _args54[2] !== void 0 ? _args54[2] : {};
                    options = _args54.length > 3 ? _args54[3] : void 0;
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context54.next = 5;
                    return screensApiFp.getScreenNotes(projectId, screenId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context54.sent;
                    _context54.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context54.sent;
                    return _context54.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToScreenNote)
                    }));
                  case 10:
                  case "end":
                    return _context54.stop();
                }
              }
            }, _callee54, this);
          }));
          function getScreenNotes(_x117, _x118) {
            return _getScreenNotes2.apply(this, arguments);
          }
          return getScreenNotes;
        }()
      }, {
        key: "getScreenSection",
        value: function() {
          var _getScreenSection2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee55(projectId, sectionId, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee55$(_context55) {
              while (1) {
                switch (_context55.prev = _context55.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context55.next = 3;
                    return screensApiFp.getScreenSection(projectId, sectionId, options);
                  case 3:
                    request = _context55.sent;
                    _context55.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context55.sent;
                    return _context55.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToScreenSection)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context55.stop();
                }
              }
            }, _callee55, this);
          }));
          function getScreenSection(_x119, _x120, _x121) {
            return _getScreenSection2.apply(this, arguments);
          }
          return getScreenSection;
        }()
      }, {
        key: "getScreenSections",
        value: function() {
          var _getScreenSections2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee56(projectId) {
            var searchParams, options, screensApiFp, request, response, _args56 = arguments;
            return regeneratorRuntime.wrap(function _callee56$(_context56) {
              while (1) {
                switch (_context56.prev = _context56.next) {
                  case 0:
                    searchParams = _args56.length > 1 && _args56[1] !== void 0 ? _args56[1] : {};
                    options = _args56.length > 2 ? _args56[2] : void 0;
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context56.next = 5;
                    return screensApiFp.getScreenSections(projectId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context56.sent;
                    _context56.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context56.sent;
                    return _context56.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToScreenSection)
                    }));
                  case 10:
                  case "end":
                    return _context56.stop();
                }
              }
            }, _callee56, this);
          }));
          function getScreenSections(_x122) {
            return _getScreenSections2.apply(this, arguments);
          }
          return getScreenSections;
        }()
      }, {
        key: "getScreenVariant",
        value: function() {
          var _getScreenVariant2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee57(projectId, variantId, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee57$(_context57) {
              while (1) {
                switch (_context57.prev = _context57.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context57.next = 3;
                    return screensApiFp.getScreenVariant(projectId, variantId, options);
                  case 3:
                    request = _context57.sent;
                    _context57.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context57.sent;
                    return _context57.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToScreenVariantGroup)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context57.stop();
                }
              }
            }, _callee57, this);
          }));
          function getScreenVariant(_x123, _x124, _x125) {
            return _getScreenVariant2.apply(this, arguments);
          }
          return getScreenVariant;
        }()
      }, {
        key: "getScreenVariants",
        value: function() {
          var _getScreenVariants2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee58(projectId) {
            var searchParams, options, screensApiFp, request, response, _args58 = arguments;
            return regeneratorRuntime.wrap(function _callee58$(_context58) {
              while (1) {
                switch (_context58.prev = _context58.next) {
                  case 0:
                    searchParams = _args58.length > 1 && _args58[1] !== void 0 ? _args58[1] : {};
                    options = _args58.length > 2 ? _args58[2] : void 0;
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context58.next = 5;
                    return screensApiFp.getScreenVariants(projectId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context58.sent;
                    _context58.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context58.sent;
                    return _context58.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToScreenVariantGroup)
                    }));
                  case 10:
                  case "end":
                    return _context58.stop();
                }
              }
            }, _callee58, this);
          }));
          function getScreenVariants(_x126) {
            return _getScreenVariants2.apply(this, arguments);
          }
          return getScreenVariants;
        }()
      }, {
        key: "getScreenVersion",
        value: function() {
          var _getScreenVersion2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee59(projectId, screenId, versionId, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee59$(_context59) {
              while (1) {
                switch (_context59.prev = _context59.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context59.next = 3;
                    return screensApiFp.getScreenVersion(projectId, screenId, versionId, options);
                  case 3:
                    request = _context59.sent;
                    _context59.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context59.sent;
                    return _context59.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToScreenVersion)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context59.stop();
                }
              }
            }, _callee59, this);
          }));
          function getScreenVersion(_x127, _x128, _x129, _x130) {
            return _getScreenVersion2.apply(this, arguments);
          }
          return getScreenVersion;
        }()
      }, {
        key: "getScreenVersions",
        value: function() {
          var _getScreenVersions2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee60(projectId, screenId) {
            var searchParams, options, screensApiFp, request, response, _args60 = arguments;
            return regeneratorRuntime.wrap(function _callee60$(_context60) {
              while (1) {
                switch (_context60.prev = _context60.next) {
                  case 0:
                    searchParams = _args60.length > 2 && _args60[2] !== void 0 ? _args60[2] : {};
                    options = _args60.length > 3 ? _args60[3] : void 0;
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context60.next = 5;
                    return screensApiFp.getScreenVersions(projectId, screenId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context60.sent;
                    _context60.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context60.sent;
                    return _context60.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToScreenVersionSummary)
                    }));
                  case 10:
                  case "end":
                    return _context60.stop();
                }
              }
            }, _callee60, this);
          }));
          function getScreenVersions(_x131, _x132) {
            return _getScreenVersions2.apply(this, arguments);
          }
          return getScreenVersions;
        }()
      }, {
        key: "updateScreen",
        value: function() {
          var _updateScreen2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee61(projectId, screenId, screenUpdateBody, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee61$(_context61) {
              while (1) {
                switch (_context61.prev = _context61.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context61.next = 3;
                    return screensApiFp.updateScreen(projectId, screenId, screenUpdateBody, options);
                  case 3:
                    request = _context61.sent;
                    _context61.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context61.sent;
                    return _context61.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context61.stop();
                }
              }
            }, _callee61, this);
          }));
          function updateScreen(_x133, _x134, _x135, _x136) {
            return _updateScreen2.apply(this, arguments);
          }
          return updateScreen;
        }()
      }, {
        key: "updateScreenComment",
        value: function() {
          var _updateScreenComment2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee62(projectId, screenId, noteId, commentId, commentUpdateBody, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee62$(_context62) {
              while (1) {
                switch (_context62.prev = _context62.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context62.next = 3;
                    return screensApiFp.updateScreenComment(projectId, screenId, noteId, commentId, commentUpdateBody, options);
                  case 3:
                    request = _context62.sent;
                    _context62.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context62.sent;
                    return _context62.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context62.stop();
                }
              }
            }, _callee62, this);
          }));
          function updateScreenComment(_x137, _x138, _x139, _x140, _x141, _x142) {
            return _updateScreenComment2.apply(this, arguments);
          }
          return updateScreenComment;
        }()
      }, {
        key: "updateScreenNote",
        value: function() {
          var _updateScreenNote2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee63(projectId, screenId, noteId, screenNoteUpdateBody, options) {
            var screensApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee63$(_context63) {
              while (1) {
                switch (_context63.prev = _context63.next) {
                  case 0:
                    screensApiFp = ScreensApiFp(this.configuration);
                    _context63.next = 3;
                    return screensApiFp.updateScreenNote(projectId, screenId, noteId, screenNoteUpdateBody, options);
                  case 3:
                    request = _context63.sent;
                    _context63.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context63.sent;
                    return _context63.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context63.stop();
                }
              }
            }, _callee63, this);
          }));
          function updateScreenNote(_x143, _x144, _x145, _x146, _x147) {
            return _updateScreenNote2.apply(this, arguments);
          }
          return updateScreenNote;
        }()
      }]);
      return ScreensApi2;
    }(_base.BaseAPI);
    exports.ScreensApi = ScreensApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/spacing-api.js
var require_spacing_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/spacing-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SpacingApiFp = exports.SpacingApiAxiosParamCreator = exports.SpacingApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var SpacingApiAxiosParamCreator = function SpacingApiAxiosParamCreator2(configuration) {
      return {
        getProjectSpacingSections: function() {
          var _getProjectSpacingSections = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 3 && _args[3] !== void 0 ? _args[3] : {};
                    (0, _common.assertParamExists)("getProjectSpacingSections", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/spacing_sections".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getProjectSpacingSections(_x, _x2, _x3) {
            return _getProjectSpacingSections.apply(this, arguments);
          }
          return getProjectSpacingSections;
        }(),
        getProjectSpacingTokens: function() {
          var _getProjectSpacingTokens = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(projectId, limit, offset, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 4 && _args2[4] !== void 0 ? _args2[4] : {};
                    (0, _common.assertParamExists)("getProjectSpacingTokens", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/spacing_tokens".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context2.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getProjectSpacingTokens(_x4, _x5, _x6, _x7) {
            return _getProjectSpacingTokens.apply(this, arguments);
          }
          return getProjectSpacingTokens;
        }(),
        getStyleguideSpacingSections: function() {
          var _getStyleguideSpacingSections = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(styleguideId, limit, offset, linkedProject, linkedStyleguide) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 5 && _args3[5] !== void 0 ? _args3[5] : {};
                    (0, _common.assertParamExists)("getStyleguideSpacingSections", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/spacing_sections".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context3.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function getStyleguideSpacingSections(_x8, _x9, _x10, _x11, _x12) {
            return _getStyleguideSpacingSections.apply(this, arguments);
          }
          return getStyleguideSpacingSections;
        }(),
        getStyleguideSpacingTokens: function() {
          var _getStyleguideSpacingTokens = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 6 && _args4[6] !== void 0 ? _args4[6] : {};
                    (0, _common.assertParamExists)("getStyleguideSpacingTokens", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/spacing_tokens".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context4.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function getStyleguideSpacingTokens(_x13, _x14, _x15, _x16, _x17, _x18) {
            return _getStyleguideSpacingTokens.apply(this, arguments);
          }
          return getStyleguideSpacingTokens;
        }(),
        updateProjectSpacingToken: function() {
          var _updateProjectSpacingToken = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(projectId, spacingTokenId, spacingTokenUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 3 && _args5[3] !== void 0 ? _args5[3] : {};
                    (0, _common.assertParamExists)("updateProjectSpacingToken", "projectId", projectId);
                    (0, _common.assertParamExists)("updateProjectSpacingToken", "spacingTokenId", spacingTokenId);
                    (0, _common.assertParamExists)("updateProjectSpacingToken", "spacingTokenUpdateBody", spacingTokenUpdateBody);
                    localVarPath = "/v1/projects/{project_id}/spacing_tokens/{spacing_token_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("spacing_token_id", "}"), encodeURIComponent(String(spacingTokenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformSpacingTokenUpdateBodyToJSON)(spacingTokenUpdateBody), localVarRequestOptions, configuration);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function updateProjectSpacingToken(_x19, _x20, _x21) {
            return _updateProjectSpacingToken.apply(this, arguments);
          }
          return updateProjectSpacingToken;
        }(),
        updateStyleguideSpacingToken: function() {
          var _updateStyleguideSpacingToken = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(styleguideId, spacingTokenId, spacingTokenUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 3 && _args6[3] !== void 0 ? _args6[3] : {};
                    (0, _common.assertParamExists)("updateStyleguideSpacingToken", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("updateStyleguideSpacingToken", "spacingTokenId", spacingTokenId);
                    (0, _common.assertParamExists)("updateStyleguideSpacingToken", "spacingTokenUpdateBody", spacingTokenUpdateBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}/spacing_tokens/{spacing_token_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("spacing_token_id", "}"), encodeURIComponent(String(spacingTokenId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformSpacingTokenUpdateBodyToJSON)(spacingTokenUpdateBody), localVarRequestOptions, configuration);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function updateStyleguideSpacingToken(_x22, _x23, _x24) {
            return _updateStyleguideSpacingToken.apply(this, arguments);
          }
          return updateStyleguideSpacingToken;
        }()
      };
    };
    exports.SpacingApiAxiosParamCreator = SpacingApiAxiosParamCreator;
    var SpacingApiFp = function SpacingApiFp2(configuration) {
      var localVarAxiosParamCreator = SpacingApiAxiosParamCreator(configuration);
      return {
        getProjectSpacingSections: function getProjectSpacingSections(projectId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    _context7.next = 2;
                    return localVarAxiosParamCreator.getProjectSpacingSections(projectId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context7.sent;
                    return _context7.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }))();
        },
        getProjectSpacingTokens: function getProjectSpacingTokens(projectId, limit, offset, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    _context8.next = 2;
                    return localVarAxiosParamCreator.getProjectSpacingTokens(projectId, limit, offset, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context8.sent;
                    return _context8.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }))();
        },
        getStyleguideSpacingSections: function getStyleguideSpacingSections(styleguideId, limit, offset, linkedProject, linkedStyleguide, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    _context9.next = 2;
                    return localVarAxiosParamCreator.getStyleguideSpacingSections(styleguideId, limit, offset, linkedProject, linkedStyleguide, options);
                  case 2:
                    localVarAxiosArgs = _context9.sent;
                    return _context9.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }))();
        },
        getStyleguideSpacingTokens: function getStyleguideSpacingTokens(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    _context10.next = 2;
                    return localVarAxiosParamCreator.getStyleguideSpacingTokens(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context10.sent;
                    return _context10.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }))();
        },
        updateProjectSpacingToken: function updateProjectSpacingToken(projectId, spacingTokenId, spacingTokenUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    _context11.next = 2;
                    return localVarAxiosParamCreator.updateProjectSpacingToken(projectId, spacingTokenId, spacingTokenUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context11.sent;
                    return _context11.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }))();
        },
        updateStyleguideSpacingToken: function updateStyleguideSpacingToken(styleguideId, spacingTokenId, spacingTokenUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    _context12.next = 2;
                    return localVarAxiosParamCreator.updateStyleguideSpacingToken(styleguideId, spacingTokenId, spacingTokenUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context12.sent;
                    return _context12.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }))();
        }
      };
    };
    exports.SpacingApiFp = SpacingApiFp;
    var SpacingApi = function(_BaseAPI) {
      _inherits(SpacingApi2, _BaseAPI);
      var _super = _createSuper(SpacingApi2);
      function SpacingApi2() {
        _classCallCheck(this, SpacingApi2);
        return _super.apply(this, arguments);
      }
      _createClass(SpacingApi2, [{
        key: "getProjectSpacingSections",
        value: function() {
          var _getProjectSpacingSections2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(projectId) {
            var searchParams, options, spacingApiFp, request, response, _args13 = arguments;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    searchParams = _args13.length > 1 && _args13[1] !== void 0 ? _args13[1] : {};
                    options = _args13.length > 2 ? _args13[2] : void 0;
                    spacingApiFp = SpacingApiFp(this.configuration);
                    _context13.next = 5;
                    return spacingApiFp.getProjectSpacingSections(projectId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context13.sent;
                    _context13.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context13.sent;
                    return _context13.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToSpacingSection)
                    }));
                  case 10:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13, this);
          }));
          function getProjectSpacingSections(_x25) {
            return _getProjectSpacingSections2.apply(this, arguments);
          }
          return getProjectSpacingSections;
        }()
      }, {
        key: "getProjectSpacingTokens",
        value: function() {
          var _getProjectSpacingTokens2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14(projectId) {
            var searchParams, options, spacingApiFp, request, response, _args14 = arguments;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    searchParams = _args14.length > 1 && _args14[1] !== void 0 ? _args14[1] : {};
                    options = _args14.length > 2 ? _args14[2] : void 0;
                    spacingApiFp = SpacingApiFp(this.configuration);
                    _context14.next = 5;
                    return spacingApiFp.getProjectSpacingTokens(projectId, searchParams.limit, searchParams.offset, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context14.sent;
                    _context14.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context14.sent;
                    return _context14.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToSpacingToken)
                    }));
                  case 10:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14, this);
          }));
          function getProjectSpacingTokens(_x26) {
            return _getProjectSpacingTokens2.apply(this, arguments);
          }
          return getProjectSpacingTokens;
        }()
      }, {
        key: "getStyleguideSpacingSections",
        value: function() {
          var _getStyleguideSpacingSections2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(styleguideId) {
            var searchParams, options, spacingApiFp, request, response, _args15 = arguments;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    searchParams = _args15.length > 1 && _args15[1] !== void 0 ? _args15[1] : {};
                    options = _args15.length > 2 ? _args15[2] : void 0;
                    spacingApiFp = SpacingApiFp(this.configuration);
                    _context15.next = 5;
                    return spacingApiFp.getStyleguideSpacingSections(styleguideId, searchParams.limit, searchParams.offset, searchParams.linkedProject, searchParams.linkedStyleguide, options);
                  case 5:
                    request = _context15.sent;
                    _context15.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context15.sent;
                    return _context15.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToSpacingSection)
                    }));
                  case 10:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15, this);
          }));
          function getStyleguideSpacingSections(_x27) {
            return _getStyleguideSpacingSections2.apply(this, arguments);
          }
          return getStyleguideSpacingSections;
        }()
      }, {
        key: "getStyleguideSpacingTokens",
        value: function() {
          var _getStyleguideSpacingTokens2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(styleguideId) {
            var searchParams, options, spacingApiFp, request, response, _args16 = arguments;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    searchParams = _args16.length > 1 && _args16[1] !== void 0 ? _args16[1] : {};
                    options = _args16.length > 2 ? _args16[2] : void 0;
                    spacingApiFp = SpacingApiFp(this.configuration);
                    _context16.next = 5;
                    return spacingApiFp.getStyleguideSpacingTokens(styleguideId, searchParams.limit, searchParams.offset, searchParams.linkedProject, searchParams.linkedStyleguide, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context16.sent;
                    _context16.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context16.sent;
                    return _context16.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToSpacingToken)
                    }));
                  case 10:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16, this);
          }));
          function getStyleguideSpacingTokens(_x28) {
            return _getStyleguideSpacingTokens2.apply(this, arguments);
          }
          return getStyleguideSpacingTokens;
        }()
      }, {
        key: "updateProjectSpacingToken",
        value: function() {
          var _updateProjectSpacingToken2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(projectId, spacingTokenId, spacingTokenUpdateBody, options) {
            var spacingApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    spacingApiFp = SpacingApiFp(this.configuration);
                    _context17.next = 3;
                    return spacingApiFp.updateProjectSpacingToken(projectId, spacingTokenId, spacingTokenUpdateBody, options);
                  case 3:
                    request = _context17.sent;
                    _context17.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context17.sent;
                    return _context17.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17, this);
          }));
          function updateProjectSpacingToken(_x29, _x30, _x31, _x32) {
            return _updateProjectSpacingToken2.apply(this, arguments);
          }
          return updateProjectSpacingToken;
        }()
      }, {
        key: "updateStyleguideSpacingToken",
        value: function() {
          var _updateStyleguideSpacingToken2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee18(styleguideId, spacingTokenId, spacingTokenUpdateBody, options) {
            var spacingApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    spacingApiFp = SpacingApiFp(this.configuration);
                    _context18.next = 3;
                    return spacingApiFp.updateStyleguideSpacingToken(styleguideId, spacingTokenId, spacingTokenUpdateBody, options);
                  case 3:
                    request = _context18.sent;
                    _context18.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context18.sent;
                    return _context18.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18, this);
          }));
          function updateStyleguideSpacingToken(_x33, _x34, _x35, _x36) {
            return _updateStyleguideSpacingToken2.apply(this, arguments);
          }
          return updateStyleguideSpacingToken;
        }()
      }]);
      return SpacingApi2;
    }(_base.BaseAPI);
    exports.SpacingApi = SpacingApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/styleguides-api.js
var require_styleguides_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/styleguides-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StyleguidesApiFp = exports.StyleguidesApiAxiosParamCreator = exports.StyleguidesApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var StyleguidesApiAxiosParamCreator = function StyleguidesApiAxiosParamCreator2(configuration) {
      return {
        getStyleguide: function() {
          var _getStyleguide = _asyncToGenerator(regeneratorRuntime.mark(function _callee(styleguideId, linkedProject, linkedStyleguide) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 3 && _args[3] !== void 0 ? _args[3] : {};
                    (0, _common.assertParamExists)("getStyleguide", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getStyleguide(_x, _x2, _x3) {
            return _getStyleguide.apply(this, arguments);
          }
          return getStyleguide;
        }(),
        getStyleguideDesignTokens: function() {
          var _getStyleguideDesignTokens = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(styleguideId, includeLinkedStyleguides, tokenNameCase) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 3 && _args2[3] !== void 0 ? _args2[3] : {};
                    (0, _common.assertParamExists)("getStyleguideDesignTokens", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/design_tokens".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context2.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    if (tokenNameCase !== void 0) {
                      localVarQueryParameter["token_name_case"] = tokenNameCase;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getStyleguideDesignTokens(_x4, _x5, _x6) {
            return _getStyleguideDesignTokens.apply(this, arguments);
          }
          return getStyleguideDesignTokens;
        }(),
        getStyleguideLinkedProjects: function() {
          var _getStyleguideLinkedProjects = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(styleguideId, limit, offset) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 3 && _args3[3] !== void 0 ? _args3[3] : {};
                    (0, _common.assertParamExists)("getStyleguideLinkedProjects", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/linked_projects".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context3.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function getStyleguideLinkedProjects(_x7, _x8, _x9) {
            return _getStyleguideLinkedProjects.apply(this, arguments);
          }
          return getStyleguideLinkedProjects;
        }(),
        getStyleguideMembers: function() {
          var _getStyleguideMembers = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(styleguideId, limit, offset, linkedProject, linkedStyleguide) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 5 && _args4[5] !== void 0 ? _args4[5] : {};
                    (0, _common.assertParamExists)("getStyleguideMembers", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/members".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context4.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function getStyleguideMembers(_x10, _x11, _x12, _x13, _x14) {
            return _getStyleguideMembers.apply(this, arguments);
          }
          return getStyleguideMembers;
        }(),
        getStyleguides: function() {
          var _getStyleguides = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(limit, offset, workspace, status, linkedProject, linkedStyleguide) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 6 && _args5[6] !== void 0 ? _args5[6] : {};
                    localVarPath = "/v1/styleguides";
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 9;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 9:
                    _context5.next = 11;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 11:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (workspace !== void 0) {
                      localVarQueryParameter["workspace"] = workspace;
                    }
                    if (status !== void 0) {
                      localVarQueryParameter["status"] = status;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function getStyleguides(_x15, _x16, _x17, _x18, _x19, _x20) {
            return _getStyleguides.apply(this, arguments);
          }
          return getStyleguides;
        }(),
        inviteStyleguideMember: function() {
          var _inviteStyleguideMember = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(styleguideId, styleguideMemberInviteBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 2 && _args6[2] !== void 0 ? _args6[2] : {};
                    (0, _common.assertParamExists)("inviteStyleguideMember", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("inviteStyleguideMember", "styleguideMemberInviteBody", styleguideMemberInviteBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}/members".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context6.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformStyleguideMemberInviteBodyToJSON)(styleguideMemberInviteBody), localVarRequestOptions, configuration);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function inviteStyleguideMember(_x21, _x22) {
            return _inviteStyleguideMember.apply(this, arguments);
          }
          return inviteStyleguideMember;
        }(),
        removeStyleguideMember: function() {
          var _removeStyleguideMember = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(styleguideId, memberId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args7 = arguments;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    options = _args7.length > 2 && _args7[2] !== void 0 ? _args7[2] : {};
                    (0, _common.assertParamExists)("removeStyleguideMember", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("removeStyleguideMember", "memberId", memberId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/members/{member_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("member_id", "}"), encodeURIComponent(String(memberId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context7.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context7.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context7.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }));
          function removeStyleguideMember(_x23, _x24) {
            return _removeStyleguideMember.apply(this, arguments);
          }
          return removeStyleguideMember;
        }(),
        updateStyleguide: function() {
          var _updateStyleguide = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(styleguideId, styleguideUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args8 = arguments;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    options = _args8.length > 2 && _args8[2] !== void 0 ? _args8[2] : {};
                    (0, _common.assertParamExists)("updateStyleguide", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("updateStyleguide", "styleguideUpdateBody", styleguideUpdateBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context8.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context8.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformStyleguideUpdateBodyToJSON)(styleguideUpdateBody), localVarRequestOptions, configuration);
                    return _context8.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }));
          function updateStyleguide(_x25, _x26) {
            return _updateStyleguide.apply(this, arguments);
          }
          return updateStyleguide;
        }()
      };
    };
    exports.StyleguidesApiAxiosParamCreator = StyleguidesApiAxiosParamCreator;
    var StyleguidesApiFp = function StyleguidesApiFp2(configuration) {
      var localVarAxiosParamCreator = StyleguidesApiAxiosParamCreator(configuration);
      return {
        getStyleguide: function getStyleguide(styleguideId, linkedProject, linkedStyleguide, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    _context9.next = 2;
                    return localVarAxiosParamCreator.getStyleguide(styleguideId, linkedProject, linkedStyleguide, options);
                  case 2:
                    localVarAxiosArgs = _context9.sent;
                    return _context9.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }))();
        },
        getStyleguideDesignTokens: function getStyleguideDesignTokens(styleguideId, includeLinkedStyleguides, tokenNameCase, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee10() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    _context10.next = 2;
                    return localVarAxiosParamCreator.getStyleguideDesignTokens(styleguideId, includeLinkedStyleguides, tokenNameCase, options);
                  case 2:
                    localVarAxiosArgs = _context10.sent;
                    return _context10.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }))();
        },
        getStyleguideLinkedProjects: function getStyleguideLinkedProjects(styleguideId, limit, offset, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    _context11.next = 2;
                    return localVarAxiosParamCreator.getStyleguideLinkedProjects(styleguideId, limit, offset, options);
                  case 2:
                    localVarAxiosArgs = _context11.sent;
                    return _context11.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }))();
        },
        getStyleguideMembers: function getStyleguideMembers(styleguideId, limit, offset, linkedProject, linkedStyleguide, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    _context12.next = 2;
                    return localVarAxiosParamCreator.getStyleguideMembers(styleguideId, limit, offset, linkedProject, linkedStyleguide, options);
                  case 2:
                    localVarAxiosArgs = _context12.sent;
                    return _context12.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }))();
        },
        getStyleguides: function getStyleguides(limit, offset, workspace, status, linkedProject, linkedStyleguide, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee13() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    _context13.next = 2;
                    return localVarAxiosParamCreator.getStyleguides(limit, offset, workspace, status, linkedProject, linkedStyleguide, options);
                  case 2:
                    localVarAxiosArgs = _context13.sent;
                    return _context13.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }))();
        },
        inviteStyleguideMember: function inviteStyleguideMember(styleguideId, styleguideMemberInviteBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee14() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    _context14.next = 2;
                    return localVarAxiosParamCreator.inviteStyleguideMember(styleguideId, styleguideMemberInviteBody, options);
                  case 2:
                    localVarAxiosArgs = _context14.sent;
                    return _context14.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }))();
        },
        removeStyleguideMember: function removeStyleguideMember(styleguideId, memberId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee15() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    _context15.next = 2;
                    return localVarAxiosParamCreator.removeStyleguideMember(styleguideId, memberId, options);
                  case 2:
                    localVarAxiosArgs = _context15.sent;
                    return _context15.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15);
          }))();
        },
        updateStyleguide: function updateStyleguide(styleguideId, styleguideUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee16() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    _context16.next = 2;
                    return localVarAxiosParamCreator.updateStyleguide(styleguideId, styleguideUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context16.sent;
                    return _context16.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16);
          }))();
        }
      };
    };
    exports.StyleguidesApiFp = StyleguidesApiFp;
    var StyleguidesApi = function(_BaseAPI) {
      _inherits(StyleguidesApi2, _BaseAPI);
      var _super = _createSuper(StyleguidesApi2);
      function StyleguidesApi2() {
        _classCallCheck(this, StyleguidesApi2);
        return _super.apply(this, arguments);
      }
      _createClass(StyleguidesApi2, [{
        key: "getStyleguide",
        value: function() {
          var _getStyleguide2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(styleguideId) {
            var searchParams, options, styleguidesApiFp, request, response, _args17 = arguments;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    searchParams = _args17.length > 1 && _args17[1] !== void 0 ? _args17[1] : {};
                    options = _args17.length > 2 ? _args17[2] : void 0;
                    styleguidesApiFp = StyleguidesApiFp(this.configuration);
                    _context17.next = 5;
                    return styleguidesApiFp.getStyleguide(styleguideId, searchParams.linkedProject, searchParams.linkedStyleguide, options);
                  case 5:
                    request = _context17.sent;
                    _context17.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context17.sent;
                    return _context17.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToStyleguide)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17, this);
          }));
          function getStyleguide(_x27) {
            return _getStyleguide2.apply(this, arguments);
          }
          return getStyleguide;
        }()
      }, {
        key: "getStyleguideDesignTokens",
        value: function() {
          var _getStyleguideDesignTokens2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee18(styleguideId) {
            var searchParams, options, styleguidesApiFp, request, response, _args18 = arguments;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    searchParams = _args18.length > 1 && _args18[1] !== void 0 ? _args18[1] : {};
                    options = _args18.length > 2 ? _args18[2] : void 0;
                    styleguidesApiFp = StyleguidesApiFp(this.configuration);
                    _context18.next = 5;
                    return styleguidesApiFp.getStyleguideDesignTokens(styleguideId, searchParams.includeLinkedStyleguides, searchParams.tokenNameCase, options);
                  case 5:
                    request = _context18.sent;
                    _context18.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context18.sent;
                    return _context18.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToDesignTokens)(response.data)
                    }));
                  case 10:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18, this);
          }));
          function getStyleguideDesignTokens(_x28) {
            return _getStyleguideDesignTokens2.apply(this, arguments);
          }
          return getStyleguideDesignTokens;
        }()
      }, {
        key: "getStyleguideLinkedProjects",
        value: function() {
          var _getStyleguideLinkedProjects2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee19(styleguideId) {
            var searchParams, options, styleguidesApiFp, request, response, _args19 = arguments;
            return regeneratorRuntime.wrap(function _callee19$(_context19) {
              while (1) {
                switch (_context19.prev = _context19.next) {
                  case 0:
                    searchParams = _args19.length > 1 && _args19[1] !== void 0 ? _args19[1] : {};
                    options = _args19.length > 2 ? _args19[2] : void 0;
                    styleguidesApiFp = StyleguidesApiFp(this.configuration);
                    _context19.next = 5;
                    return styleguidesApiFp.getStyleguideLinkedProjects(styleguideId, searchParams.limit, searchParams.offset, options);
                  case 5:
                    request = _context19.sent;
                    _context19.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context19.sent;
                    return _context19.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToProject)
                    }));
                  case 10:
                  case "end":
                    return _context19.stop();
                }
              }
            }, _callee19, this);
          }));
          function getStyleguideLinkedProjects(_x29) {
            return _getStyleguideLinkedProjects2.apply(this, arguments);
          }
          return getStyleguideLinkedProjects;
        }()
      }, {
        key: "getStyleguideMembers",
        value: function() {
          var _getStyleguideMembers2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee20(styleguideId) {
            var searchParams, options, styleguidesApiFp, request, response, _args20 = arguments;
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    searchParams = _args20.length > 1 && _args20[1] !== void 0 ? _args20[1] : {};
                    options = _args20.length > 2 ? _args20[2] : void 0;
                    styleguidesApiFp = StyleguidesApiFp(this.configuration);
                    _context20.next = 5;
                    return styleguidesApiFp.getStyleguideMembers(styleguideId, searchParams.limit, searchParams.offset, searchParams.linkedProject, searchParams.linkedStyleguide, options);
                  case 5:
                    request = _context20.sent;
                    _context20.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context20.sent;
                    return _context20.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToStyleguideMember)
                    }));
                  case 10:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20, this);
          }));
          function getStyleguideMembers(_x30) {
            return _getStyleguideMembers2.apply(this, arguments);
          }
          return getStyleguideMembers;
        }()
      }, {
        key: "getStyleguides",
        value: function() {
          var _getStyleguides2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee21() {
            var searchParams, options, styleguidesApiFp, request, response, _args21 = arguments;
            return regeneratorRuntime.wrap(function _callee21$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    searchParams = _args21.length > 0 && _args21[0] !== void 0 ? _args21[0] : {};
                    options = _args21.length > 1 ? _args21[1] : void 0;
                    styleguidesApiFp = StyleguidesApiFp(this.configuration);
                    _context21.next = 5;
                    return styleguidesApiFp.getStyleguides(searchParams.limit, searchParams.offset, searchParams.workspace, searchParams.status, searchParams.linkedProject, searchParams.linkedStyleguide, options);
                  case 5:
                    request = _context21.sent;
                    _context21.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context21.sent;
                    return _context21.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToStyleguide)
                    }));
                  case 10:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee21, this);
          }));
          function getStyleguides() {
            return _getStyleguides2.apply(this, arguments);
          }
          return getStyleguides;
        }()
      }, {
        key: "inviteStyleguideMember",
        value: function() {
          var _inviteStyleguideMember2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee22(styleguideId, styleguideMemberInviteBody, options) {
            var styleguidesApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee22$(_context22) {
              while (1) {
                switch (_context22.prev = _context22.next) {
                  case 0:
                    styleguidesApiFp = StyleguidesApiFp(this.configuration);
                    _context22.next = 3;
                    return styleguidesApiFp.inviteStyleguideMember(styleguideId, styleguideMemberInviteBody, options);
                  case 3:
                    request = _context22.sent;
                    _context22.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context22.sent;
                    return _context22.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context22.stop();
                }
              }
            }, _callee22, this);
          }));
          function inviteStyleguideMember(_x31, _x32, _x33) {
            return _inviteStyleguideMember2.apply(this, arguments);
          }
          return inviteStyleguideMember;
        }()
      }, {
        key: "removeStyleguideMember",
        value: function() {
          var _removeStyleguideMember2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee23(styleguideId, memberId, options) {
            var styleguidesApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee23$(_context23) {
              while (1) {
                switch (_context23.prev = _context23.next) {
                  case 0:
                    styleguidesApiFp = StyleguidesApiFp(this.configuration);
                    _context23.next = 3;
                    return styleguidesApiFp.removeStyleguideMember(styleguideId, memberId, options);
                  case 3:
                    request = _context23.sent;
                    _context23.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context23.sent;
                    return _context23.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context23.stop();
                }
              }
            }, _callee23, this);
          }));
          function removeStyleguideMember(_x34, _x35, _x36) {
            return _removeStyleguideMember2.apply(this, arguments);
          }
          return removeStyleguideMember;
        }()
      }, {
        key: "updateStyleguide",
        value: function() {
          var _updateStyleguide2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee24(styleguideId, styleguideUpdateBody, options) {
            var styleguidesApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee24$(_context24) {
              while (1) {
                switch (_context24.prev = _context24.next) {
                  case 0:
                    styleguidesApiFp = StyleguidesApiFp(this.configuration);
                    _context24.next = 3;
                    return styleguidesApiFp.updateStyleguide(styleguideId, styleguideUpdateBody, options);
                  case 3:
                    request = _context24.sent;
                    _context24.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context24.sent;
                    return _context24.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context24.stop();
                }
              }
            }, _callee24, this);
          }));
          function updateStyleguide(_x37, _x38, _x39) {
            return _updateStyleguide2.apply(this, arguments);
          }
          return updateStyleguide;
        }()
      }]);
      return StyleguidesApi2;
    }(_base.BaseAPI);
    exports.StyleguidesApi = StyleguidesApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/text-styles-api.js
var require_text_styles_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/text-styles-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TextStylesApiFp = exports.TextStylesApiAxiosParamCreator = exports.TextStylesApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var TextStylesApiAxiosParamCreator = function TextStylesApiAxiosParamCreator2(configuration) {
      return {
        getProjectTextStyles: function() {
          var _getProjectTextStyles = _asyncToGenerator(regeneratorRuntime.mark(function _callee(projectId, limit, offset, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 4 && _args[4] !== void 0 ? _args[4] : {};
                    (0, _common.assertParamExists)("getProjectTextStyles", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/text_styles".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getProjectTextStyles(_x, _x2, _x3, _x4) {
            return _getProjectTextStyles.apply(this, arguments);
          }
          return getProjectTextStyles;
        }(),
        getStyleguideTextStyles: function() {
          var _getStyleguideTextStyles = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 6 && _args2[6] !== void 0 ? _args2[6] : {};
                    (0, _common.assertParamExists)("getStyleguideTextStyles", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/text_styles".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context2.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (linkedProject !== void 0) {
                      localVarQueryParameter["linked_project"] = linkedProject;
                    }
                    if (linkedStyleguide !== void 0) {
                      localVarQueryParameter["linked_styleguide"] = linkedStyleguide;
                    }
                    if (includeLinkedStyleguides !== void 0) {
                      localVarQueryParameter["include_linked_styleguides"] = includeLinkedStyleguides;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 21:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getStyleguideTextStyles(_x5, _x6, _x7, _x8, _x9, _x10) {
            return _getStyleguideTextStyles.apply(this, arguments);
          }
          return getStyleguideTextStyles;
        }(),
        updateProjectTextStyle: function() {
          var _updateProjectTextStyle = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(projectId, textStyleId, textStyleUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 3 && _args3[3] !== void 0 ? _args3[3] : {};
                    (0, _common.assertParamExists)("updateProjectTextStyle", "projectId", projectId);
                    (0, _common.assertParamExists)("updateProjectTextStyle", "textStyleId", textStyleId);
                    (0, _common.assertParamExists)("updateProjectTextStyle", "textStyleUpdateBody", textStyleUpdateBody);
                    localVarPath = "/v1/projects/{project_id}/text_styles/{text_style_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("text_style_id", "}"), encodeURIComponent(String(textStyleId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context3.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformTextStyleUpdateBodyToJSON)(textStyleUpdateBody), localVarRequestOptions, configuration);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function updateProjectTextStyle(_x11, _x12, _x13) {
            return _updateProjectTextStyle.apply(this, arguments);
          }
          return updateProjectTextStyle;
        }(),
        updateStyleguideTextStyle: function() {
          var _updateStyleguideTextStyle = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(styleguideId, textStyleId, textStyleUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 3 && _args4[3] !== void 0 ? _args4[3] : {};
                    (0, _common.assertParamExists)("updateStyleguideTextStyle", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("updateStyleguideTextStyle", "textStyleId", textStyleId);
                    (0, _common.assertParamExists)("updateStyleguideTextStyle", "textStyleUpdateBody", textStyleUpdateBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}/text_styles/{text_style_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("text_style_id", "}"), encodeURIComponent(String(textStyleId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context4.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformTextStyleUpdateBodyToJSON)(textStyleUpdateBody), localVarRequestOptions, configuration);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function updateStyleguideTextStyle(_x14, _x15, _x16) {
            return _updateStyleguideTextStyle.apply(this, arguments);
          }
          return updateStyleguideTextStyle;
        }()
      };
    };
    exports.TextStylesApiAxiosParamCreator = TextStylesApiAxiosParamCreator;
    var TextStylesApiFp = function TextStylesApiFp2(configuration) {
      var localVarAxiosParamCreator = TextStylesApiAxiosParamCreator(configuration);
      return {
        getProjectTextStyles: function getProjectTextStyles(projectId, limit, offset, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    _context5.next = 2;
                    return localVarAxiosParamCreator.getProjectTextStyles(projectId, limit, offset, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context5.sent;
                    return _context5.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }))();
        },
        getStyleguideTextStyles: function getStyleguideTextStyles(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    _context6.next = 2;
                    return localVarAxiosParamCreator.getStyleguideTextStyles(styleguideId, limit, offset, linkedProject, linkedStyleguide, includeLinkedStyleguides, options);
                  case 2:
                    localVarAxiosArgs = _context6.sent;
                    return _context6.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }))();
        },
        updateProjectTextStyle: function updateProjectTextStyle(projectId, textStyleId, textStyleUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee7() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    _context7.next = 2;
                    return localVarAxiosParamCreator.updateProjectTextStyle(projectId, textStyleId, textStyleUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context7.sent;
                    return _context7.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }))();
        },
        updateStyleguideTextStyle: function updateStyleguideTextStyle(styleguideId, textStyleId, textStyleUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    _context8.next = 2;
                    return localVarAxiosParamCreator.updateStyleguideTextStyle(styleguideId, textStyleId, textStyleUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context8.sent;
                    return _context8.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }))();
        }
      };
    };
    exports.TextStylesApiFp = TextStylesApiFp;
    var TextStylesApi = function(_BaseAPI) {
      _inherits(TextStylesApi2, _BaseAPI);
      var _super = _createSuper(TextStylesApi2);
      function TextStylesApi2() {
        _classCallCheck(this, TextStylesApi2);
        return _super.apply(this, arguments);
      }
      _createClass(TextStylesApi2, [{
        key: "getProjectTextStyles",
        value: function() {
          var _getProjectTextStyles2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(projectId) {
            var searchParams, options, textStylesApiFp, request, response, _args9 = arguments;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    searchParams = _args9.length > 1 && _args9[1] !== void 0 ? _args9[1] : {};
                    options = _args9.length > 2 ? _args9[2] : void 0;
                    textStylesApiFp = TextStylesApiFp(this.configuration);
                    _context9.next = 5;
                    return textStylesApiFp.getProjectTextStyles(projectId, searchParams.limit, searchParams.offset, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context9.sent;
                    _context9.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context9.sent;
                    return _context9.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToTextStyle)
                    }));
                  case 10:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9, this);
          }));
          function getProjectTextStyles(_x17) {
            return _getProjectTextStyles2.apply(this, arguments);
          }
          return getProjectTextStyles;
        }()
      }, {
        key: "getStyleguideTextStyles",
        value: function() {
          var _getStyleguideTextStyles2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(styleguideId) {
            var searchParams, options, textStylesApiFp, request, response, _args10 = arguments;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    searchParams = _args10.length > 1 && _args10[1] !== void 0 ? _args10[1] : {};
                    options = _args10.length > 2 ? _args10[2] : void 0;
                    textStylesApiFp = TextStylesApiFp(this.configuration);
                    _context10.next = 5;
                    return textStylesApiFp.getStyleguideTextStyles(styleguideId, searchParams.limit, searchParams.offset, searchParams.linkedProject, searchParams.linkedStyleguide, searchParams.includeLinkedStyleguides, options);
                  case 5:
                    request = _context10.sent;
                    _context10.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context10.sent;
                    return _context10.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToTextStyle)
                    }));
                  case 10:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10, this);
          }));
          function getStyleguideTextStyles(_x18) {
            return _getStyleguideTextStyles2.apply(this, arguments);
          }
          return getStyleguideTextStyles;
        }()
      }, {
        key: "updateProjectTextStyle",
        value: function() {
          var _updateProjectTextStyle2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(projectId, textStyleId, textStyleUpdateBody, options) {
            var textStylesApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    textStylesApiFp = TextStylesApiFp(this.configuration);
                    _context11.next = 3;
                    return textStylesApiFp.updateProjectTextStyle(projectId, textStyleId, textStyleUpdateBody, options);
                  case 3:
                    request = _context11.sent;
                    _context11.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context11.sent;
                    return _context11.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11, this);
          }));
          function updateProjectTextStyle(_x19, _x20, _x21, _x22) {
            return _updateProjectTextStyle2.apply(this, arguments);
          }
          return updateProjectTextStyle;
        }()
      }, {
        key: "updateStyleguideTextStyle",
        value: function() {
          var _updateStyleguideTextStyle2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(styleguideId, textStyleId, textStyleUpdateBody, options) {
            var textStylesApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    textStylesApiFp = TextStylesApiFp(this.configuration);
                    _context12.next = 3;
                    return textStylesApiFp.updateStyleguideTextStyle(styleguideId, textStyleId, textStyleUpdateBody, options);
                  case 3:
                    request = _context12.sent;
                    _context12.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context12.sent;
                    return _context12.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12, this);
          }));
          function updateStyleguideTextStyle(_x23, _x24, _x25, _x26) {
            return _updateStyleguideTextStyle2.apply(this, arguments);
          }
          return updateStyleguideTextStyle;
        }()
      }]);
      return TextStylesApi2;
    }(_base.BaseAPI);
    exports.TextStylesApi = TextStylesApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/users-api.js
var require_users_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/users-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.UsersApiFp = exports.UsersApiAxiosParamCreator = exports.UsersApi = void 0;
    require_runtime();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var UsersApiAxiosParamCreator = function UsersApiAxiosParamCreator2(configuration) {
      return {
        getCurrentUser: function() {
          var _getCurrentUser = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 0 && _args[0] !== void 0 ? _args[0] : {};
                    localVarPath = "/v1/users/me";
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 9;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 9:
                    _context.next = 11;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 11:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 15:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function getCurrentUser() {
            return _getCurrentUser.apply(this, arguments);
          }
          return getCurrentUser;
        }(),
        getUserProjects: function() {
          var _getUserProjects = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(limit, offset, status) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 3 && _args2[3] !== void 0 ? _args2[3] : {};
                    localVarPath = "/v1/users/me/projects";
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 9;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 9:
                    _context2.next = 11;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 11:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (status !== void 0) {
                      localVarQueryParameter["status"] = status;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getUserProjects(_x, _x2, _x3) {
            return _getUserProjects.apply(this, arguments);
          }
          return getUserProjects;
        }(),
        getUserStyleguides: function() {
          var _getUserStyleguides = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(limit, offset, status) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 3 && _args3[3] !== void 0 ? _args3[3] : {};
                    localVarPath = "/v1/users/me/styleguides";
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 9;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 9:
                    _context3.next = 11;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 11:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (status !== void 0) {
                      localVarQueryParameter["status"] = status;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function getUserStyleguides(_x4, _x5, _x6) {
            return _getUserStyleguides.apply(this, arguments);
          }
          return getUserStyleguides;
        }()
      };
    };
    exports.UsersApiAxiosParamCreator = UsersApiAxiosParamCreator;
    var UsersApiFp = function UsersApiFp2(configuration) {
      var localVarAxiosParamCreator = UsersApiAxiosParamCreator(configuration);
      return {
        getCurrentUser: function getCurrentUser(options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    _context4.next = 2;
                    return localVarAxiosParamCreator.getCurrentUser(options);
                  case 2:
                    localVarAxiosArgs = _context4.sent;
                    return _context4.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }))();
        },
        getUserProjects: function getUserProjects(limit, offset, status, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee5() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    _context5.next = 2;
                    return localVarAxiosParamCreator.getUserProjects(limit, offset, status, options);
                  case 2:
                    localVarAxiosArgs = _context5.sent;
                    return _context5.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }))();
        },
        getUserStyleguides: function getUserStyleguides(limit, offset, status, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee6() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    _context6.next = 2;
                    return localVarAxiosParamCreator.getUserStyleguides(limit, offset, status, options);
                  case 2:
                    localVarAxiosArgs = _context6.sent;
                    return _context6.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }))();
        }
      };
    };
    exports.UsersApiFp = UsersApiFp;
    var UsersApi = function(_BaseAPI) {
      _inherits(UsersApi2, _BaseAPI);
      var _super = _createSuper(UsersApi2);
      function UsersApi2() {
        _classCallCheck(this, UsersApi2);
        return _super.apply(this, arguments);
      }
      _createClass(UsersApi2, [{
        key: "getCurrentUser",
        value: function() {
          var _getCurrentUser2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(options) {
            var usersApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    usersApiFp = UsersApiFp(this.configuration);
                    _context7.next = 3;
                    return usersApiFp.getCurrentUser(options);
                  case 3:
                    request = _context7.sent;
                    _context7.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context7.sent;
                    return _context7.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToUser)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7, this);
          }));
          function getCurrentUser(_x7) {
            return _getCurrentUser2.apply(this, arguments);
          }
          return getCurrentUser;
        }()
      }, {
        key: "getUserProjects",
        value: function() {
          var _getUserProjects2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8() {
            var searchParams, options, usersApiFp, request, response, _args8 = arguments;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    searchParams = _args8.length > 0 && _args8[0] !== void 0 ? _args8[0] : {};
                    options = _args8.length > 1 ? _args8[1] : void 0;
                    usersApiFp = UsersApiFp(this.configuration);
                    _context8.next = 5;
                    return usersApiFp.getUserProjects(searchParams.limit, searchParams.offset, searchParams.status, options);
                  case 5:
                    request = _context8.sent;
                    _context8.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context8.sent;
                    return _context8.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToProject)
                    }));
                  case 10:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8, this);
          }));
          function getUserProjects() {
            return _getUserProjects2.apply(this, arguments);
          }
          return getUserProjects;
        }()
      }, {
        key: "getUserStyleguides",
        value: function() {
          var _getUserStyleguides2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9() {
            var searchParams, options, usersApiFp, request, response, _args9 = arguments;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    searchParams = _args9.length > 0 && _args9[0] !== void 0 ? _args9[0] : {};
                    options = _args9.length > 1 ? _args9[1] : void 0;
                    usersApiFp = UsersApiFp(this.configuration);
                    _context9.next = 5;
                    return usersApiFp.getUserStyleguides(searchParams.limit, searchParams.offset, searchParams.status, options);
                  case 5:
                    request = _context9.sent;
                    _context9.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context9.sent;
                    return _context9.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToStyleguide)
                    }));
                  case 10:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9, this);
          }));
          function getUserStyleguides() {
            return _getUserStyleguides2.apply(this, arguments);
          }
          return getUserStyleguides;
        }()
      }]);
      return UsersApi2;
    }(_base.BaseAPI);
    exports.UsersApi = UsersApi;
  }
});

// node_modules/@zeplin/sdk/dist/apis/webhooks-api.js
var require_webhooks_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/apis/webhooks-api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_define_property();
    require_es_object_keys();
    require_es_symbol();
    require_es_array_filter();
    require_es_object_get_own_property_descriptor();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_get_own_property_descriptors();
    require_es_object_define_properties();
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol_description();
    require_es_symbol_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.WebhooksApiFp = exports.WebhooksApiAxiosParamCreator = exports.WebhooksApi = void 0;
    require_runtime();
    require_es_regexp_exec();
    require_es_string_replace();
    require_es_array_iterator();
    require_es_object_to_string();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    require_web_url();
    require_es_array_map();
    require_es_promise();
    var _axios = _interopRequireDefault(require_axios());
    var _common = require_common();
    var _base = require_base();
    var _models = require_models();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          });
        }
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self2 = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self2, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var WebhooksApiAxiosParamCreator = function WebhooksApiAxiosParamCreator2(configuration) {
      return {
        createOrganizationWebhooks: function() {
          var _createOrganizationWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee(organizationId, organizationWebhookCreateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args = arguments;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    options = _args.length > 2 && _args[2] !== void 0 ? _args[2] : {};
                    (0, _common.assertParamExists)("createOrganizationWebhooks", "organizationId", organizationId);
                    (0, _common.assertParamExists)("createOrganizationWebhooks", "organizationWebhookCreateBody", organizationWebhookCreateBody);
                    localVarPath = "/v1/organizations/{organization_id}/webhooks".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformOrganizationWebhookCreateBodyToJSON)(organizationWebhookCreateBody), localVarRequestOptions, configuration);
                    return _context.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));
          function createOrganizationWebhooks(_x, _x2) {
            return _createOrganizationWebhooks.apply(this, arguments);
          }
          return createOrganizationWebhooks;
        }(),
        createProjectWebhooks: function() {
          var _createProjectWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(projectId, projectWebhookCreateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args2 = arguments;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    options = _args2.length > 2 && _args2[2] !== void 0 ? _args2[2] : {};
                    (0, _common.assertParamExists)("createProjectWebhooks", "projectId", projectId);
                    (0, _common.assertParamExists)("createProjectWebhooks", "projectWebhookCreateBody", projectWebhookCreateBody);
                    localVarPath = "/v1/projects/{project_id}/webhooks".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context2.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context2.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformProjectWebhookCreateBodyToJSON)(projectWebhookCreateBody), localVarRequestOptions, configuration);
                    return _context2.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function createProjectWebhooks(_x3, _x4) {
            return _createProjectWebhooks.apply(this, arguments);
          }
          return createProjectWebhooks;
        }(),
        createStyleguideWebhooks: function() {
          var _createStyleguideWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(styleguideId, styleguideWebhookCreateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args3 = arguments;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    options = _args3.length > 2 && _args3[2] !== void 0 ? _args3[2] : {};
                    (0, _common.assertParamExists)("createStyleguideWebhooks", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("createStyleguideWebhooks", "styleguideWebhookCreateBody", styleguideWebhookCreateBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}/webhooks".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context3.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context3.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformStyleguideWebhookCreateBodyToJSON)(styleguideWebhookCreateBody), localVarRequestOptions, configuration);
                    return _context3.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));
          function createStyleguideWebhooks(_x5, _x6) {
            return _createStyleguideWebhooks.apply(this, arguments);
          }
          return createStyleguideWebhooks;
        }(),
        createUserWebhooks: function() {
          var _createUserWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(userWebhookCreateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    options = _args4.length > 1 && _args4[1] !== void 0 ? _args4[1] : {};
                    (0, _common.assertParamExists)("createUserWebhooks", "userWebhookCreateBody", userWebhookCreateBody);
                    localVarPath = "/v1/users/me/webhooks";
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "POST"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context4.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context4.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformUserWebhookCreateBodyToJSON)(userWebhookCreateBody), localVarRequestOptions, configuration);
                    return _context4.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 18:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4);
          }));
          function createUserWebhooks(_x7) {
            return _createUserWebhooks.apply(this, arguments);
          }
          return createUserWebhooks;
        }(),
        deleteOrganizationWebhook: function() {
          var _deleteOrganizationWebhook = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(organizationId, webhookId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args5 = arguments;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    options = _args5.length > 2 && _args5[2] !== void 0 ? _args5[2] : {};
                    (0, _common.assertParamExists)("deleteOrganizationWebhook", "organizationId", organizationId);
                    (0, _common.assertParamExists)("deleteOrganizationWebhook", "webhookId", webhookId);
                    localVarPath = "/v1/organizations/{organization_id}/webhooks/{webhook_id}".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context5.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context5.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context5.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function deleteOrganizationWebhook(_x8, _x9) {
            return _deleteOrganizationWebhook.apply(this, arguments);
          }
          return deleteOrganizationWebhook;
        }(),
        deleteProjectWebhook: function() {
          var _deleteProjectWebhook = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(projectId, webhookId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args6 = arguments;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    options = _args6.length > 2 && _args6[2] !== void 0 ? _args6[2] : {};
                    (0, _common.assertParamExists)("deleteProjectWebhook", "projectId", projectId);
                    (0, _common.assertParamExists)("deleteProjectWebhook", "webhookId", webhookId);
                    localVarPath = "/v1/projects/{project_id}/webhooks/{webhook_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context6.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context6.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context6.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6);
          }));
          function deleteProjectWebhook(_x10, _x11) {
            return _deleteProjectWebhook.apply(this, arguments);
          }
          return deleteProjectWebhook;
        }(),
        deleteStyleguideWebhook: function() {
          var _deleteStyleguideWebhook = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(styleguideId, webhookId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args7 = arguments;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    options = _args7.length > 2 && _args7[2] !== void 0 ? _args7[2] : {};
                    (0, _common.assertParamExists)("deleteStyleguideWebhook", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("deleteStyleguideWebhook", "webhookId", webhookId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/webhooks/{webhook_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context7.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context7.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context7.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7);
          }));
          function deleteStyleguideWebhook(_x12, _x13) {
            return _deleteStyleguideWebhook.apply(this, arguments);
          }
          return deleteStyleguideWebhook;
        }(),
        deleteUserWebhook: function() {
          var _deleteUserWebhook = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(webhookId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args8 = arguments;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    options = _args8.length > 1 && _args8[1] !== void 0 ? _args8[1] : {};
                    (0, _common.assertParamExists)("deleteUserWebhook", "webhookId", webhookId);
                    localVarPath = "/v1/users/me/webhooks/{webhook_id}".replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "DELETE"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context8.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context8.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context8.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }));
          function deleteUserWebhook(_x14) {
            return _deleteUserWebhook.apply(this, arguments);
          }
          return deleteUserWebhook;
        }(),
        getOrganizationWebhook: function() {
          var _getOrganizationWebhook = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(organizationId, webhookId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args9 = arguments;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    options = _args9.length > 2 && _args9[2] !== void 0 ? _args9[2] : {};
                    (0, _common.assertParamExists)("getOrganizationWebhook", "organizationId", organizationId);
                    (0, _common.assertParamExists)("getOrganizationWebhook", "webhookId", webhookId);
                    localVarPath = "/v1/organizations/{organization_id}/webhooks/{webhook_id}".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context9.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context9.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context9.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }));
          function getOrganizationWebhook(_x15, _x16) {
            return _getOrganizationWebhook.apply(this, arguments);
          }
          return getOrganizationWebhook;
        }(),
        getOrganizationWebhooks: function() {
          var _getOrganizationWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(organizationId, limit, offset, status, urlHealth) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args10 = arguments;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    options = _args10.length > 5 && _args10[5] !== void 0 ? _args10[5] : {};
                    (0, _common.assertParamExists)("getOrganizationWebhooks", "organizationId", organizationId);
                    localVarPath = "/v1/organizations/{organization_id}/webhooks".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context10.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context10.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (status !== void 0) {
                      localVarQueryParameter["status"] = status;
                    }
                    if (urlHealth !== void 0) {
                      localVarQueryParameter["url_health"] = urlHealth;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context10.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }));
          function getOrganizationWebhooks(_x17, _x18, _x19, _x20, _x21) {
            return _getOrganizationWebhooks.apply(this, arguments);
          }
          return getOrganizationWebhooks;
        }(),
        getProjectWebhook: function() {
          var _getProjectWebhook = _asyncToGenerator(regeneratorRuntime.mark(function _callee11(projectId, webhookId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args11 = arguments;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    options = _args11.length > 2 && _args11[2] !== void 0 ? _args11[2] : {};
                    (0, _common.assertParamExists)("getProjectWebhook", "projectId", projectId);
                    (0, _common.assertParamExists)("getProjectWebhook", "webhookId", webhookId);
                    localVarPath = "/v1/projects/{project_id}/webhooks/{webhook_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context11.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context11.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context11.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }));
          function getProjectWebhook(_x22, _x23) {
            return _getProjectWebhook.apply(this, arguments);
          }
          return getProjectWebhook;
        }(),
        getProjectWebhooks: function() {
          var _getProjectWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee12(projectId, limit, offset, status, urlHealth) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args12 = arguments;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    options = _args12.length > 5 && _args12[5] !== void 0 ? _args12[5] : {};
                    (0, _common.assertParamExists)("getProjectWebhooks", "projectId", projectId);
                    localVarPath = "/v1/projects/{project_id}/webhooks".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context12.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context12.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (status !== void 0) {
                      localVarQueryParameter["status"] = status;
                    }
                    if (urlHealth !== void 0) {
                      localVarQueryParameter["url_health"] = urlHealth;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context12.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }));
          function getProjectWebhooks(_x24, _x25, _x26, _x27, _x28) {
            return _getProjectWebhooks.apply(this, arguments);
          }
          return getProjectWebhooks;
        }(),
        getStyleguideWebhook: function() {
          var _getStyleguideWebhook = _asyncToGenerator(regeneratorRuntime.mark(function _callee13(styleguideId, webhookId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args13 = arguments;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    options = _args13.length > 2 && _args13[2] !== void 0 ? _args13[2] : {};
                    (0, _common.assertParamExists)("getStyleguideWebhook", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("getStyleguideWebhook", "webhookId", webhookId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/webhooks/{webhook_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context13.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context13.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context13.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 17:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }));
          function getStyleguideWebhook(_x29, _x30) {
            return _getStyleguideWebhook.apply(this, arguments);
          }
          return getStyleguideWebhook;
        }(),
        getStyleguideWebhooks: function() {
          var _getStyleguideWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee14(styleguideId, limit, offset, status, urlHealth) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args14 = arguments;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    options = _args14.length > 5 && _args14[5] !== void 0 ? _args14[5] : {};
                    (0, _common.assertParamExists)("getStyleguideWebhooks", "styleguideId", styleguideId);
                    localVarPath = "/v1/styleguides/{styleguide_id}/webhooks".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context14.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context14.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (status !== void 0) {
                      localVarQueryParameter["status"] = status;
                    }
                    if (urlHealth !== void 0) {
                      localVarQueryParameter["url_health"] = urlHealth;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context14.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }));
          function getStyleguideWebhooks(_x31, _x32, _x33, _x34, _x35) {
            return _getStyleguideWebhooks.apply(this, arguments);
          }
          return getStyleguideWebhooks;
        }(),
        getUserWebhook: function() {
          var _getUserWebhook = _asyncToGenerator(regeneratorRuntime.mark(function _callee15(webhookId) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args15 = arguments;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    options = _args15.length > 1 && _args15[1] !== void 0 ? _args15[1] : {};
                    (0, _common.assertParamExists)("getUserWebhook", "webhookId", webhookId);
                    localVarPath = "/v1/users/me/webhooks/{webhook_id}".replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context15.next = 10;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 10:
                    _context15.next = 12;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 12:
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context15.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 16:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15);
          }));
          function getUserWebhook(_x36) {
            return _getUserWebhook.apply(this, arguments);
          }
          return getUserWebhook;
        }(),
        getUserWebhooks: function() {
          var _getUserWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(limit, offset, status, urlHealth) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args16 = arguments;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    options = _args16.length > 4 && _args16[4] !== void 0 ? _args16[4] : {};
                    localVarPath = "/v1/users/me/webhooks";
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "GET"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context16.next = 9;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 9:
                    _context16.next = 11;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 11:
                    if (limit !== void 0) {
                      localVarQueryParameter["limit"] = limit;
                    }
                    if (offset !== void 0) {
                      localVarQueryParameter["offset"] = offset;
                    }
                    if (status !== void 0) {
                      localVarQueryParameter["status"] = status;
                    }
                    if (urlHealth !== void 0) {
                      localVarQueryParameter["url_health"] = urlHealth;
                    }
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    return _context16.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16);
          }));
          function getUserWebhooks(_x37, _x38, _x39, _x40) {
            return _getUserWebhooks.apply(this, arguments);
          }
          return getUserWebhooks;
        }(),
        updateOrganizationWebhooks: function() {
          var _updateOrganizationWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(organizationId, webhookId, organizationWebhookUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args17 = arguments;
            return regeneratorRuntime.wrap(function _callee17$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    options = _args17.length > 3 && _args17[3] !== void 0 ? _args17[3] : {};
                    (0, _common.assertParamExists)("updateOrganizationWebhooks", "organizationId", organizationId);
                    (0, _common.assertParamExists)("updateOrganizationWebhooks", "webhookId", webhookId);
                    (0, _common.assertParamExists)("updateOrganizationWebhooks", "organizationWebhookUpdateBody", organizationWebhookUpdateBody);
                    localVarPath = "/v1/organizations/{organization_id}/webhooks/{webhook_id}".replace("{".concat("organization_id", "}"), encodeURIComponent(String(organizationId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context17.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context17.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformOrganizationWebhookUpdateBodyToJSON)(organizationWebhookUpdateBody), localVarRequestOptions, configuration);
                    return _context17.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee17);
          }));
          function updateOrganizationWebhooks(_x41, _x42, _x43) {
            return _updateOrganizationWebhooks.apply(this, arguments);
          }
          return updateOrganizationWebhooks;
        }(),
        updateProjectWebhooks: function() {
          var _updateProjectWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee18(projectId, webhookId, projectWebhookUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args18 = arguments;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    options = _args18.length > 3 && _args18[3] !== void 0 ? _args18[3] : {};
                    (0, _common.assertParamExists)("updateProjectWebhooks", "projectId", projectId);
                    (0, _common.assertParamExists)("updateProjectWebhooks", "webhookId", webhookId);
                    (0, _common.assertParamExists)("updateProjectWebhooks", "projectWebhookUpdateBody", projectWebhookUpdateBody);
                    localVarPath = "/v1/projects/{project_id}/webhooks/{webhook_id}".replace("{".concat("project_id", "}"), encodeURIComponent(String(projectId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context18.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context18.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformProjectWebhookUpdateBodyToJSON)(projectWebhookUpdateBody), localVarRequestOptions, configuration);
                    return _context18.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18);
          }));
          function updateProjectWebhooks(_x44, _x45, _x46) {
            return _updateProjectWebhooks.apply(this, arguments);
          }
          return updateProjectWebhooks;
        }(),
        updateStyleguideWebhooks: function() {
          var _updateStyleguideWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee19(styleguideId, webhookId, styleguideWebhookUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args19 = arguments;
            return regeneratorRuntime.wrap(function _callee19$(_context19) {
              while (1) {
                switch (_context19.prev = _context19.next) {
                  case 0:
                    options = _args19.length > 3 && _args19[3] !== void 0 ? _args19[3] : {};
                    (0, _common.assertParamExists)("updateStyleguideWebhooks", "styleguideId", styleguideId);
                    (0, _common.assertParamExists)("updateStyleguideWebhooks", "webhookId", webhookId);
                    (0, _common.assertParamExists)("updateStyleguideWebhooks", "styleguideWebhookUpdateBody", styleguideWebhookUpdateBody);
                    localVarPath = "/v1/styleguides/{styleguide_id}/webhooks/{webhook_id}".replace("{".concat("styleguide_id", "}"), encodeURIComponent(String(styleguideId))).replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context19.next = 12;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 12:
                    _context19.next = 14;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 14:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformStyleguideWebhookUpdateBodyToJSON)(styleguideWebhookUpdateBody), localVarRequestOptions, configuration);
                    return _context19.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 20:
                  case "end":
                    return _context19.stop();
                }
              }
            }, _callee19);
          }));
          function updateStyleguideWebhooks(_x47, _x48, _x49) {
            return _updateStyleguideWebhooks.apply(this, arguments);
          }
          return updateStyleguideWebhooks;
        }(),
        updateUserWebhooks: function() {
          var _updateUserWebhooks = _asyncToGenerator(regeneratorRuntime.mark(function _callee20(webhookId, userWebhookUpdateBody) {
            var options, localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions, _args20 = arguments;
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    options = _args20.length > 2 && _args20[2] !== void 0 ? _args20[2] : {};
                    (0, _common.assertParamExists)("updateUserWebhooks", "webhookId", webhookId);
                    (0, _common.assertParamExists)("updateUserWebhooks", "userWebhookUpdateBody", userWebhookUpdateBody);
                    localVarPath = "/v1/users/me/webhooks/{webhook_id}".replace("{".concat("webhook_id", "}"), encodeURIComponent(String(webhookId)));
                    localVarUrlObj = new URL(localVarPath, _common.DUMMY_BASE_URL);
                    if (configuration) {
                      baseOptions = configuration.baseOptions;
                    }
                    localVarRequestOptions = _objectSpread(_objectSpread({
                      method: "PATCH"
                    }, baseOptions), options);
                    localVarHeaderParameter = {};
                    localVarQueryParameter = {};
                    _context20.next = 11;
                    return (0, _common.setOAuthToObject)(localVarHeaderParameter, "OAuth2", [], configuration);
                  case 11:
                    _context20.next = 13;
                    return (0, _common.setBearerAuthToObject)(localVarHeaderParameter, configuration);
                  case 13:
                    localVarHeaderParameter["Content-Type"] = "application/json";
                    (0, _common.setSearchParams)(localVarUrlObj, localVarQueryParameter, options.query);
                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
                    localVarRequestOptions.headers = _objectSpread(_objectSpread(_objectSpread({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
                    localVarRequestOptions.data = (0, _common.serializeDataIfNeeded)((0, _models.transformUserWebhookUpdateBodyToJSON)(userWebhookUpdateBody), localVarRequestOptions, configuration);
                    return _context20.abrupt("return", {
                      url: (0, _common.toPathString)(localVarUrlObj),
                      options: localVarRequestOptions
                    });
                  case 19:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20);
          }));
          function updateUserWebhooks(_x50, _x51) {
            return _updateUserWebhooks.apply(this, arguments);
          }
          return updateUserWebhooks;
        }()
      };
    };
    exports.WebhooksApiAxiosParamCreator = WebhooksApiAxiosParamCreator;
    var WebhooksApiFp = function WebhooksApiFp2(configuration) {
      var localVarAxiosParamCreator = WebhooksApiAxiosParamCreator(configuration);
      return {
        createOrganizationWebhooks: function createOrganizationWebhooks(organizationId, organizationWebhookCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee21() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee21$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    _context21.next = 2;
                    return localVarAxiosParamCreator.createOrganizationWebhooks(organizationId, organizationWebhookCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context21.sent;
                    return _context21.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee21);
          }))();
        },
        createProjectWebhooks: function createProjectWebhooks(projectId, projectWebhookCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee22() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee22$(_context22) {
              while (1) {
                switch (_context22.prev = _context22.next) {
                  case 0:
                    _context22.next = 2;
                    return localVarAxiosParamCreator.createProjectWebhooks(projectId, projectWebhookCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context22.sent;
                    return _context22.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context22.stop();
                }
              }
            }, _callee22);
          }))();
        },
        createStyleguideWebhooks: function createStyleguideWebhooks(styleguideId, styleguideWebhookCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee23() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee23$(_context23) {
              while (1) {
                switch (_context23.prev = _context23.next) {
                  case 0:
                    _context23.next = 2;
                    return localVarAxiosParamCreator.createStyleguideWebhooks(styleguideId, styleguideWebhookCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context23.sent;
                    return _context23.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context23.stop();
                }
              }
            }, _callee23);
          }))();
        },
        createUserWebhooks: function createUserWebhooks(userWebhookCreateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee24() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee24$(_context24) {
              while (1) {
                switch (_context24.prev = _context24.next) {
                  case 0:
                    _context24.next = 2;
                    return localVarAxiosParamCreator.createUserWebhooks(userWebhookCreateBody, options);
                  case 2:
                    localVarAxiosArgs = _context24.sent;
                    return _context24.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context24.stop();
                }
              }
            }, _callee24);
          }))();
        },
        deleteOrganizationWebhook: function deleteOrganizationWebhook(organizationId, webhookId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee25() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee25$(_context25) {
              while (1) {
                switch (_context25.prev = _context25.next) {
                  case 0:
                    _context25.next = 2;
                    return localVarAxiosParamCreator.deleteOrganizationWebhook(organizationId, webhookId, options);
                  case 2:
                    localVarAxiosArgs = _context25.sent;
                    return _context25.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context25.stop();
                }
              }
            }, _callee25);
          }))();
        },
        deleteProjectWebhook: function deleteProjectWebhook(projectId, webhookId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee26() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee26$(_context26) {
              while (1) {
                switch (_context26.prev = _context26.next) {
                  case 0:
                    _context26.next = 2;
                    return localVarAxiosParamCreator.deleteProjectWebhook(projectId, webhookId, options);
                  case 2:
                    localVarAxiosArgs = _context26.sent;
                    return _context26.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context26.stop();
                }
              }
            }, _callee26);
          }))();
        },
        deleteStyleguideWebhook: function deleteStyleguideWebhook(styleguideId, webhookId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee27() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee27$(_context27) {
              while (1) {
                switch (_context27.prev = _context27.next) {
                  case 0:
                    _context27.next = 2;
                    return localVarAxiosParamCreator.deleteStyleguideWebhook(styleguideId, webhookId, options);
                  case 2:
                    localVarAxiosArgs = _context27.sent;
                    return _context27.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context27.stop();
                }
              }
            }, _callee27);
          }))();
        },
        deleteUserWebhook: function deleteUserWebhook(webhookId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee28() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee28$(_context28) {
              while (1) {
                switch (_context28.prev = _context28.next) {
                  case 0:
                    _context28.next = 2;
                    return localVarAxiosParamCreator.deleteUserWebhook(webhookId, options);
                  case 2:
                    localVarAxiosArgs = _context28.sent;
                    return _context28.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context28.stop();
                }
              }
            }, _callee28);
          }))();
        },
        getOrganizationWebhook: function getOrganizationWebhook(organizationId, webhookId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee29() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee29$(_context29) {
              while (1) {
                switch (_context29.prev = _context29.next) {
                  case 0:
                    _context29.next = 2;
                    return localVarAxiosParamCreator.getOrganizationWebhook(organizationId, webhookId, options);
                  case 2:
                    localVarAxiosArgs = _context29.sent;
                    return _context29.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context29.stop();
                }
              }
            }, _callee29);
          }))();
        },
        getOrganizationWebhooks: function getOrganizationWebhooks(organizationId, limit, offset, status, urlHealth, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee30() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee30$(_context30) {
              while (1) {
                switch (_context30.prev = _context30.next) {
                  case 0:
                    _context30.next = 2;
                    return localVarAxiosParamCreator.getOrganizationWebhooks(organizationId, limit, offset, status, urlHealth, options);
                  case 2:
                    localVarAxiosArgs = _context30.sent;
                    return _context30.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context30.stop();
                }
              }
            }, _callee30);
          }))();
        },
        getProjectWebhook: function getProjectWebhook(projectId, webhookId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee31() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee31$(_context31) {
              while (1) {
                switch (_context31.prev = _context31.next) {
                  case 0:
                    _context31.next = 2;
                    return localVarAxiosParamCreator.getProjectWebhook(projectId, webhookId, options);
                  case 2:
                    localVarAxiosArgs = _context31.sent;
                    return _context31.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context31.stop();
                }
              }
            }, _callee31);
          }))();
        },
        getProjectWebhooks: function getProjectWebhooks(projectId, limit, offset, status, urlHealth, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee32() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee32$(_context32) {
              while (1) {
                switch (_context32.prev = _context32.next) {
                  case 0:
                    _context32.next = 2;
                    return localVarAxiosParamCreator.getProjectWebhooks(projectId, limit, offset, status, urlHealth, options);
                  case 2:
                    localVarAxiosArgs = _context32.sent;
                    return _context32.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context32.stop();
                }
              }
            }, _callee32);
          }))();
        },
        getStyleguideWebhook: function getStyleguideWebhook(styleguideId, webhookId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee33() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee33$(_context33) {
              while (1) {
                switch (_context33.prev = _context33.next) {
                  case 0:
                    _context33.next = 2;
                    return localVarAxiosParamCreator.getStyleguideWebhook(styleguideId, webhookId, options);
                  case 2:
                    localVarAxiosArgs = _context33.sent;
                    return _context33.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context33.stop();
                }
              }
            }, _callee33);
          }))();
        },
        getStyleguideWebhooks: function getStyleguideWebhooks(styleguideId, limit, offset, status, urlHealth, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee34() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee34$(_context34) {
              while (1) {
                switch (_context34.prev = _context34.next) {
                  case 0:
                    _context34.next = 2;
                    return localVarAxiosParamCreator.getStyleguideWebhooks(styleguideId, limit, offset, status, urlHealth, options);
                  case 2:
                    localVarAxiosArgs = _context34.sent;
                    return _context34.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context34.stop();
                }
              }
            }, _callee34);
          }))();
        },
        getUserWebhook: function getUserWebhook(webhookId, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee35() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee35$(_context35) {
              while (1) {
                switch (_context35.prev = _context35.next) {
                  case 0:
                    _context35.next = 2;
                    return localVarAxiosParamCreator.getUserWebhook(webhookId, options);
                  case 2:
                    localVarAxiosArgs = _context35.sent;
                    return _context35.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context35.stop();
                }
              }
            }, _callee35);
          }))();
        },
        getUserWebhooks: function getUserWebhooks(limit, offset, status, urlHealth, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee36() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee36$(_context36) {
              while (1) {
                switch (_context36.prev = _context36.next) {
                  case 0:
                    _context36.next = 2;
                    return localVarAxiosParamCreator.getUserWebhooks(limit, offset, status, urlHealth, options);
                  case 2:
                    localVarAxiosArgs = _context36.sent;
                    return _context36.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context36.stop();
                }
              }
            }, _callee36);
          }))();
        },
        updateOrganizationWebhooks: function updateOrganizationWebhooks(organizationId, webhookId, organizationWebhookUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee37() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee37$(_context37) {
              while (1) {
                switch (_context37.prev = _context37.next) {
                  case 0:
                    _context37.next = 2;
                    return localVarAxiosParamCreator.updateOrganizationWebhooks(organizationId, webhookId, organizationWebhookUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context37.sent;
                    return _context37.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context37.stop();
                }
              }
            }, _callee37);
          }))();
        },
        updateProjectWebhooks: function updateProjectWebhooks(projectId, webhookId, projectWebhookUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee38() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee38$(_context38) {
              while (1) {
                switch (_context38.prev = _context38.next) {
                  case 0:
                    _context38.next = 2;
                    return localVarAxiosParamCreator.updateProjectWebhooks(projectId, webhookId, projectWebhookUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context38.sent;
                    return _context38.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context38.stop();
                }
              }
            }, _callee38);
          }))();
        },
        updateStyleguideWebhooks: function updateStyleguideWebhooks(styleguideId, webhookId, styleguideWebhookUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee39() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee39$(_context39) {
              while (1) {
                switch (_context39.prev = _context39.next) {
                  case 0:
                    _context39.next = 2;
                    return localVarAxiosParamCreator.updateStyleguideWebhooks(styleguideId, webhookId, styleguideWebhookUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context39.sent;
                    return _context39.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context39.stop();
                }
              }
            }, _callee39);
          }))();
        },
        updateUserWebhooks: function updateUserWebhooks(webhookId, userWebhookUpdateBody, options) {
          return _asyncToGenerator(regeneratorRuntime.mark(function _callee40() {
            var localVarAxiosArgs;
            return regeneratorRuntime.wrap(function _callee40$(_context40) {
              while (1) {
                switch (_context40.prev = _context40.next) {
                  case 0:
                    _context40.next = 2;
                    return localVarAxiosParamCreator.updateUserWebhooks(webhookId, userWebhookUpdateBody, options);
                  case 2:
                    localVarAxiosArgs = _context40.sent;
                    return _context40.abrupt("return", (0, _common.createRequestFunction)(localVarAxiosArgs, _axios["default"], _base.BASE_PATH, configuration));
                  case 4:
                  case "end":
                    return _context40.stop();
                }
              }
            }, _callee40);
          }))();
        }
      };
    };
    exports.WebhooksApiFp = WebhooksApiFp;
    var WebhooksApi = function(_BaseAPI) {
      _inherits(WebhooksApi2, _BaseAPI);
      var _super = _createSuper(WebhooksApi2);
      function WebhooksApi2() {
        _classCallCheck(this, WebhooksApi2);
        return _super.apply(this, arguments);
      }
      _createClass(WebhooksApi2, [{
        key: "createOrganizationWebhooks",
        value: function() {
          var _createOrganizationWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee41(organizationId, organizationWebhookCreateBody, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee41$(_context41) {
              while (1) {
                switch (_context41.prev = _context41.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context41.next = 3;
                    return webhooksApiFp.createOrganizationWebhooks(organizationId, organizationWebhookCreateBody, options);
                  case 3:
                    request = _context41.sent;
                    _context41.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context41.sent;
                    return _context41.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context41.stop();
                }
              }
            }, _callee41, this);
          }));
          function createOrganizationWebhooks(_x52, _x53, _x54) {
            return _createOrganizationWebhooks2.apply(this, arguments);
          }
          return createOrganizationWebhooks;
        }()
      }, {
        key: "createProjectWebhooks",
        value: function() {
          var _createProjectWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee42(projectId, projectWebhookCreateBody, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee42$(_context42) {
              while (1) {
                switch (_context42.prev = _context42.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context42.next = 3;
                    return webhooksApiFp.createProjectWebhooks(projectId, projectWebhookCreateBody, options);
                  case 3:
                    request = _context42.sent;
                    _context42.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context42.sent;
                    return _context42.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context42.stop();
                }
              }
            }, _callee42, this);
          }));
          function createProjectWebhooks(_x55, _x56, _x57) {
            return _createProjectWebhooks2.apply(this, arguments);
          }
          return createProjectWebhooks;
        }()
      }, {
        key: "createStyleguideWebhooks",
        value: function() {
          var _createStyleguideWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee43(styleguideId, styleguideWebhookCreateBody, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee43$(_context43) {
              while (1) {
                switch (_context43.prev = _context43.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context43.next = 3;
                    return webhooksApiFp.createStyleguideWebhooks(styleguideId, styleguideWebhookCreateBody, options);
                  case 3:
                    request = _context43.sent;
                    _context43.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context43.sent;
                    return _context43.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context43.stop();
                }
              }
            }, _callee43, this);
          }));
          function createStyleguideWebhooks(_x58, _x59, _x60) {
            return _createStyleguideWebhooks2.apply(this, arguments);
          }
          return createStyleguideWebhooks;
        }()
      }, {
        key: "createUserWebhooks",
        value: function() {
          var _createUserWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee44(userWebhookCreateBody, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee44$(_context44) {
              while (1) {
                switch (_context44.prev = _context44.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context44.next = 3;
                    return webhooksApiFp.createUserWebhooks(userWebhookCreateBody, options);
                  case 3:
                    request = _context44.sent;
                    _context44.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context44.sent;
                    return _context44.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToEntityReference)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context44.stop();
                }
              }
            }, _callee44, this);
          }));
          function createUserWebhooks(_x61, _x62) {
            return _createUserWebhooks2.apply(this, arguments);
          }
          return createUserWebhooks;
        }()
      }, {
        key: "deleteOrganizationWebhook",
        value: function() {
          var _deleteOrganizationWebhook2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee45(organizationId, webhookId, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee45$(_context45) {
              while (1) {
                switch (_context45.prev = _context45.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context45.next = 3;
                    return webhooksApiFp.deleteOrganizationWebhook(organizationId, webhookId, options);
                  case 3:
                    request = _context45.sent;
                    _context45.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context45.sent;
                    return _context45.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context45.stop();
                }
              }
            }, _callee45, this);
          }));
          function deleteOrganizationWebhook(_x63, _x64, _x65) {
            return _deleteOrganizationWebhook2.apply(this, arguments);
          }
          return deleteOrganizationWebhook;
        }()
      }, {
        key: "deleteProjectWebhook",
        value: function() {
          var _deleteProjectWebhook2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee46(projectId, webhookId, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee46$(_context46) {
              while (1) {
                switch (_context46.prev = _context46.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context46.next = 3;
                    return webhooksApiFp.deleteProjectWebhook(projectId, webhookId, options);
                  case 3:
                    request = _context46.sent;
                    _context46.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context46.sent;
                    return _context46.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context46.stop();
                }
              }
            }, _callee46, this);
          }));
          function deleteProjectWebhook(_x66, _x67, _x68) {
            return _deleteProjectWebhook2.apply(this, arguments);
          }
          return deleteProjectWebhook;
        }()
      }, {
        key: "deleteStyleguideWebhook",
        value: function() {
          var _deleteStyleguideWebhook2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee47(styleguideId, webhookId, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee47$(_context47) {
              while (1) {
                switch (_context47.prev = _context47.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context47.next = 3;
                    return webhooksApiFp.deleteStyleguideWebhook(styleguideId, webhookId, options);
                  case 3:
                    request = _context47.sent;
                    _context47.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context47.sent;
                    return _context47.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context47.stop();
                }
              }
            }, _callee47, this);
          }));
          function deleteStyleguideWebhook(_x69, _x70, _x71) {
            return _deleteStyleguideWebhook2.apply(this, arguments);
          }
          return deleteStyleguideWebhook;
        }()
      }, {
        key: "deleteUserWebhook",
        value: function() {
          var _deleteUserWebhook2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee48(webhookId, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee48$(_context48) {
              while (1) {
                switch (_context48.prev = _context48.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context48.next = 3;
                    return webhooksApiFp.deleteUserWebhook(webhookId, options);
                  case 3:
                    request = _context48.sent;
                    _context48.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context48.sent;
                    return _context48.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context48.stop();
                }
              }
            }, _callee48, this);
          }));
          function deleteUserWebhook(_x72, _x73) {
            return _deleteUserWebhook2.apply(this, arguments);
          }
          return deleteUserWebhook;
        }()
      }, {
        key: "getOrganizationWebhook",
        value: function() {
          var _getOrganizationWebhook2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee49(organizationId, webhookId, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee49$(_context49) {
              while (1) {
                switch (_context49.prev = _context49.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context49.next = 3;
                    return webhooksApiFp.getOrganizationWebhook(organizationId, webhookId, options);
                  case 3:
                    request = _context49.sent;
                    _context49.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context49.sent;
                    return _context49.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToOrganizationWebhook)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context49.stop();
                }
              }
            }, _callee49, this);
          }));
          function getOrganizationWebhook(_x74, _x75, _x76) {
            return _getOrganizationWebhook2.apply(this, arguments);
          }
          return getOrganizationWebhook;
        }()
      }, {
        key: "getOrganizationWebhooks",
        value: function() {
          var _getOrganizationWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee50(organizationId) {
            var searchParams, options, webhooksApiFp, request, response, _args50 = arguments;
            return regeneratorRuntime.wrap(function _callee50$(_context50) {
              while (1) {
                switch (_context50.prev = _context50.next) {
                  case 0:
                    searchParams = _args50.length > 1 && _args50[1] !== void 0 ? _args50[1] : {};
                    options = _args50.length > 2 ? _args50[2] : void 0;
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context50.next = 5;
                    return webhooksApiFp.getOrganizationWebhooks(organizationId, searchParams.limit, searchParams.offset, searchParams.status, searchParams.urlHealth, options);
                  case 5:
                    request = _context50.sent;
                    _context50.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context50.sent;
                    return _context50.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToOrganizationWebhook)
                    }));
                  case 10:
                  case "end":
                    return _context50.stop();
                }
              }
            }, _callee50, this);
          }));
          function getOrganizationWebhooks(_x77) {
            return _getOrganizationWebhooks2.apply(this, arguments);
          }
          return getOrganizationWebhooks;
        }()
      }, {
        key: "getProjectWebhook",
        value: function() {
          var _getProjectWebhook2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee51(projectId, webhookId, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee51$(_context51) {
              while (1) {
                switch (_context51.prev = _context51.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context51.next = 3;
                    return webhooksApiFp.getProjectWebhook(projectId, webhookId, options);
                  case 3:
                    request = _context51.sent;
                    _context51.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context51.sent;
                    return _context51.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToProjectWebhook)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context51.stop();
                }
              }
            }, _callee51, this);
          }));
          function getProjectWebhook(_x78, _x79, _x80) {
            return _getProjectWebhook2.apply(this, arguments);
          }
          return getProjectWebhook;
        }()
      }, {
        key: "getProjectWebhooks",
        value: function() {
          var _getProjectWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee52(projectId) {
            var searchParams, options, webhooksApiFp, request, response, _args52 = arguments;
            return regeneratorRuntime.wrap(function _callee52$(_context52) {
              while (1) {
                switch (_context52.prev = _context52.next) {
                  case 0:
                    searchParams = _args52.length > 1 && _args52[1] !== void 0 ? _args52[1] : {};
                    options = _args52.length > 2 ? _args52[2] : void 0;
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context52.next = 5;
                    return webhooksApiFp.getProjectWebhooks(projectId, searchParams.limit, searchParams.offset, searchParams.status, searchParams.urlHealth, options);
                  case 5:
                    request = _context52.sent;
                    _context52.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context52.sent;
                    return _context52.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToProjectWebhook)
                    }));
                  case 10:
                  case "end":
                    return _context52.stop();
                }
              }
            }, _callee52, this);
          }));
          function getProjectWebhooks(_x81) {
            return _getProjectWebhooks2.apply(this, arguments);
          }
          return getProjectWebhooks;
        }()
      }, {
        key: "getStyleguideWebhook",
        value: function() {
          var _getStyleguideWebhook2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee53(styleguideId, webhookId, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee53$(_context53) {
              while (1) {
                switch (_context53.prev = _context53.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context53.next = 3;
                    return webhooksApiFp.getStyleguideWebhook(styleguideId, webhookId, options);
                  case 3:
                    request = _context53.sent;
                    _context53.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context53.sent;
                    return _context53.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToStyleguideWebhook)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context53.stop();
                }
              }
            }, _callee53, this);
          }));
          function getStyleguideWebhook(_x82, _x83, _x84) {
            return _getStyleguideWebhook2.apply(this, arguments);
          }
          return getStyleguideWebhook;
        }()
      }, {
        key: "getStyleguideWebhooks",
        value: function() {
          var _getStyleguideWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee54(styleguideId) {
            var searchParams, options, webhooksApiFp, request, response, _args54 = arguments;
            return regeneratorRuntime.wrap(function _callee54$(_context54) {
              while (1) {
                switch (_context54.prev = _context54.next) {
                  case 0:
                    searchParams = _args54.length > 1 && _args54[1] !== void 0 ? _args54[1] : {};
                    options = _args54.length > 2 ? _args54[2] : void 0;
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context54.next = 5;
                    return webhooksApiFp.getStyleguideWebhooks(styleguideId, searchParams.limit, searchParams.offset, searchParams.status, searchParams.urlHealth, options);
                  case 5:
                    request = _context54.sent;
                    _context54.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context54.sent;
                    return _context54.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToStyleguideWebhook)
                    }));
                  case 10:
                  case "end":
                    return _context54.stop();
                }
              }
            }, _callee54, this);
          }));
          function getStyleguideWebhooks(_x85) {
            return _getStyleguideWebhooks2.apply(this, arguments);
          }
          return getStyleguideWebhooks;
        }()
      }, {
        key: "getUserWebhook",
        value: function() {
          var _getUserWebhook2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee55(webhookId, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee55$(_context55) {
              while (1) {
                switch (_context55.prev = _context55.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context55.next = 3;
                    return webhooksApiFp.getUserWebhook(webhookId, options);
                  case 3:
                    request = _context55.sent;
                    _context55.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context55.sent;
                    return _context55.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: (0, _models.transformJSONToUserWebhook)(response.data)
                    }));
                  case 8:
                  case "end":
                    return _context55.stop();
                }
              }
            }, _callee55, this);
          }));
          function getUserWebhook(_x86, _x87) {
            return _getUserWebhook2.apply(this, arguments);
          }
          return getUserWebhook;
        }()
      }, {
        key: "getUserWebhooks",
        value: function() {
          var _getUserWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee56() {
            var searchParams, options, webhooksApiFp, request, response, _args56 = arguments;
            return regeneratorRuntime.wrap(function _callee56$(_context56) {
              while (1) {
                switch (_context56.prev = _context56.next) {
                  case 0:
                    searchParams = _args56.length > 0 && _args56[0] !== void 0 ? _args56[0] : {};
                    options = _args56.length > 1 ? _args56[1] : void 0;
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context56.next = 5;
                    return webhooksApiFp.getUserWebhooks(searchParams.limit, searchParams.offset, searchParams.status, searchParams.urlHealth, options);
                  case 5:
                    request = _context56.sent;
                    _context56.next = 8;
                    return request(this.axios, this.basePath);
                  case 8:
                    response = _context56.sent;
                    return _context56.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {
                      data: response.data.map(_models.transformJSONToUserWebhook)
                    }));
                  case 10:
                  case "end":
                    return _context56.stop();
                }
              }
            }, _callee56, this);
          }));
          function getUserWebhooks() {
            return _getUserWebhooks2.apply(this, arguments);
          }
          return getUserWebhooks;
        }()
      }, {
        key: "updateOrganizationWebhooks",
        value: function() {
          var _updateOrganizationWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee57(organizationId, webhookId, organizationWebhookUpdateBody, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee57$(_context57) {
              while (1) {
                switch (_context57.prev = _context57.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context57.next = 3;
                    return webhooksApiFp.updateOrganizationWebhooks(organizationId, webhookId, organizationWebhookUpdateBody, options);
                  case 3:
                    request = _context57.sent;
                    _context57.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context57.sent;
                    return _context57.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context57.stop();
                }
              }
            }, _callee57, this);
          }));
          function updateOrganizationWebhooks(_x88, _x89, _x90, _x91) {
            return _updateOrganizationWebhooks2.apply(this, arguments);
          }
          return updateOrganizationWebhooks;
        }()
      }, {
        key: "updateProjectWebhooks",
        value: function() {
          var _updateProjectWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee58(projectId, webhookId, projectWebhookUpdateBody, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee58$(_context58) {
              while (1) {
                switch (_context58.prev = _context58.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context58.next = 3;
                    return webhooksApiFp.updateProjectWebhooks(projectId, webhookId, projectWebhookUpdateBody, options);
                  case 3:
                    request = _context58.sent;
                    _context58.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context58.sent;
                    return _context58.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context58.stop();
                }
              }
            }, _callee58, this);
          }));
          function updateProjectWebhooks(_x92, _x93, _x94, _x95) {
            return _updateProjectWebhooks2.apply(this, arguments);
          }
          return updateProjectWebhooks;
        }()
      }, {
        key: "updateStyleguideWebhooks",
        value: function() {
          var _updateStyleguideWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee59(styleguideId, webhookId, styleguideWebhookUpdateBody, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee59$(_context59) {
              while (1) {
                switch (_context59.prev = _context59.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context59.next = 3;
                    return webhooksApiFp.updateStyleguideWebhooks(styleguideId, webhookId, styleguideWebhookUpdateBody, options);
                  case 3:
                    request = _context59.sent;
                    _context59.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context59.sent;
                    return _context59.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context59.stop();
                }
              }
            }, _callee59, this);
          }));
          function updateStyleguideWebhooks(_x96, _x97, _x98, _x99) {
            return _updateStyleguideWebhooks2.apply(this, arguments);
          }
          return updateStyleguideWebhooks;
        }()
      }, {
        key: "updateUserWebhooks",
        value: function() {
          var _updateUserWebhooks2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee60(webhookId, userWebhookUpdateBody, options) {
            var webhooksApiFp, request, response;
            return regeneratorRuntime.wrap(function _callee60$(_context60) {
              while (1) {
                switch (_context60.prev = _context60.next) {
                  case 0:
                    webhooksApiFp = WebhooksApiFp(this.configuration);
                    _context60.next = 3;
                    return webhooksApiFp.updateUserWebhooks(webhookId, userWebhookUpdateBody, options);
                  case 3:
                    request = _context60.sent;
                    _context60.next = 6;
                    return request(this.axios, this.basePath);
                  case 6:
                    response = _context60.sent;
                    return _context60.abrupt("return", response);
                  case 8:
                  case "end":
                    return _context60.stop();
                }
              }
            }, _callee60, this);
          }));
          function updateUserWebhooks(_x100, _x101, _x102) {
            return _updateUserWebhooks2.apply(this, arguments);
          }
          return updateUserWebhooks;
        }()
      }]);
      return WebhooksApi2;
    }(_base.BaseAPI);
    exports.WebhooksApi = WebhooksApi;
  }
});

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code.`);
        }
      }
    }));
  }
});

// node_modules/@zeplin/sdk/dist/utilities/webhooks.js
var require_webhooks = __commonJS({
  "node_modules/@zeplin/sdk/dist/utilities/webhooks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Webhooks = void 0;
    require_es_array_concat();
    require_es_object_define_property();
    var _crypto = require_crypto();
    var _models = require_models();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Webhooks = function() {
      function Webhooks2() {
        _classCallCheck(this, Webhooks2);
      }
      _createClass(Webhooks2, null, [{
        key: "verifyEvent",
        value: function verifyEvent(_ref) {
          var payload = _ref.payload, signature = _ref.signature, deliveryTimestamp = _ref.deliveryTimestamp, secret = _ref.secret;
          var generatedSignature = (0, _crypto.createHmac)("sha256", secret).update("".concat(deliveryTimestamp, ".").concat(JSON.stringify(payload))).digest("hex");
          return signature === generatedSignature;
        }
      }, {
        key: "transformPayloadToWebhookEvent",
        value: function transformPayloadToWebhookEvent(payload) {
          return (0, _models.transformJSONToWebhookEvent)(payload);
        }
      }, {
        key: "isPingEvent",
        value: function isPingEvent(data) {
          return data.event === "ping";
        }
      }, {
        key: "isWorkspaceNotificationEvent",
        value: function isWorkspaceNotificationEvent(data) {
          return data.event === "workspace.notification";
        }
      }, {
        key: "isWorkspaceNotificationCreatedEvent",
        value: function isWorkspaceNotificationCreatedEvent(data) {
          return Webhooks2.isWorkspaceNotificationEvent(data) && data.action === "created";
        }
      }, {
        key: "isWorkspaceNotificationUpdatedEvent",
        value: function isWorkspaceNotificationUpdatedEvent(data) {
          return Webhooks2.isWorkspaceNotificationEvent(data) && data.action === "updated";
        }
      }, {
        key: "isWorkspaceProjectEvent",
        value: function isWorkspaceProjectEvent(data) {
          return data.event === "workspace.project";
        }
      }, {
        key: "isWorkspaceProjectCreatedEvent",
        value: function isWorkspaceProjectCreatedEvent(data) {
          return Webhooks2.isWorkspaceProjectEvent(data) && data.action === "created";
        }
      }, {
        key: "isWorkspaceProjectUpdatedEvent",
        value: function isWorkspaceProjectUpdatedEvent(data) {
          return Webhooks2.isWorkspaceProjectEvent(data) && data.action === "updated";
        }
      }, {
        key: "isWorkspaceProjectDeletedEvent",
        value: function isWorkspaceProjectDeletedEvent(data) {
          return Webhooks2.isWorkspaceProjectEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isWorkspaceProjectActivatedEvent",
        value: function isWorkspaceProjectActivatedEvent(data) {
          return Webhooks2.isWorkspaceProjectEvent(data) && data.action === "activated";
        }
      }, {
        key: "isWorkspaceProjectArchivedEvent",
        value: function isWorkspaceProjectArchivedEvent(data) {
          return Webhooks2.isWorkspaceProjectEvent(data) && data.action === "archived";
        }
      }, {
        key: "isWorkspaceProjectStyleguideLinkedEvent",
        value: function isWorkspaceProjectStyleguideLinkedEvent(data) {
          return Webhooks2.isWorkspaceProjectEvent(data) && data.action === "styleguide_linked";
        }
      }, {
        key: "isWorkspaceProjectStyleguideUnlinkedEvent",
        value: function isWorkspaceProjectStyleguideUnlinkedEvent(data) {
          return Webhooks2.isWorkspaceProjectEvent(data) && data.action === "styleguide_unlinked";
        }
      }, {
        key: "isWorkspaceStyleguideEvent",
        value: function isWorkspaceStyleguideEvent(data) {
          return data.event === "workspace.styleguide";
        }
      }, {
        key: "isWorkspaceStyleguideCreatedEvent",
        value: function isWorkspaceStyleguideCreatedEvent(data) {
          return Webhooks2.isWorkspaceStyleguideEvent(data) && data.action === "created";
        }
      }, {
        key: "isWorkspaceStyleguideUpdatedEvent",
        value: function isWorkspaceStyleguideUpdatedEvent(data) {
          return Webhooks2.isWorkspaceStyleguideEvent(data) && data.action === "updated";
        }
      }, {
        key: "isWorkspaceStyleguideDeletedEvent",
        value: function isWorkspaceStyleguideDeletedEvent(data) {
          return Webhooks2.isWorkspaceStyleguideEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isWorkspaceStyleguideActivatedEvent",
        value: function isWorkspaceStyleguideActivatedEvent(data) {
          return Webhooks2.isWorkspaceStyleguideEvent(data) && data.action === "activated";
        }
      }, {
        key: "isWorkspaceStyleguideArchivedEvent",
        value: function isWorkspaceStyleguideArchivedEvent(data) {
          return Webhooks2.isWorkspaceStyleguideEvent(data) && data.action === "archived";
        }
      }, {
        key: "isWorkspaceStyleguideStyleguideLinkedEvent",
        value: function isWorkspaceStyleguideStyleguideLinkedEvent(data) {
          return Webhooks2.isWorkspaceStyleguideEvent(data) && data.action === "styleguide_linked";
        }
      }, {
        key: "isWorkspaceStyleguideStyleguideUnlinkedEvent",
        value: function isWorkspaceStyleguideStyleguideUnlinkedEvent(data) {
          return Webhooks2.isWorkspaceStyleguideEvent(data) && data.action === "styleguide_unlinked";
        }
      }, {
        key: "isWorkspaceOrganizationEvent",
        value: function isWorkspaceOrganizationEvent(data) {
          return data.event === "workspace.organization";
        }
      }, {
        key: "isWorkspaceOrganizationUpdatedEvent",
        value: function isWorkspaceOrganizationUpdatedEvent(data) {
          return Webhooks2.isWorkspaceOrganizationEvent(data) && data.action === "updated";
        }
      }, {
        key: "isWorkspaceOrganizationJoinRequestedEvent",
        value: function isWorkspaceOrganizationJoinRequestedEvent(data) {
          return Webhooks2.isWorkspaceOrganizationEvent(data) && data.action === "join_requested";
        }
      }, {
        key: "isWorkspaceOrganizationMemberEvent",
        value: function isWorkspaceOrganizationMemberEvent(data) {
          return data.event === "workspace.organization.member";
        }
      }, {
        key: "isWorkspaceOrganizationMemberInvitedEvent",
        value: function isWorkspaceOrganizationMemberInvitedEvent(data) {
          return Webhooks2.isWorkspaceOrganizationMemberEvent(data) && data.action === "invited";
        }
      }, {
        key: "isWorkspaceOrganizationMemberRemovedEvent",
        value: function isWorkspaceOrganizationMemberRemovedEvent(data) {
          return Webhooks2.isWorkspaceOrganizationMemberEvent(data) && data.action === "removed";
        }
      }, {
        key: "isWorkspaceOrganizationMemberRoleUpdatedEvent",
        value: function isWorkspaceOrganizationMemberRoleUpdatedEvent(data) {
          return Webhooks2.isWorkspaceOrganizationMemberEvent(data) && data.action === "role_updated";
        }
      }, {
        key: "isWorkspaceOrganizationMemberTagUpdatedEvent",
        value: function isWorkspaceOrganizationMemberTagUpdatedEvent(data) {
          return Webhooks2.isWorkspaceOrganizationMemberEvent(data) && data.action === "tag_updated";
        }
      }, {
        key: "isProjectMemberEvent",
        value: function isProjectMemberEvent(data) {
          return data.event === "project.member";
        }
      }, {
        key: "isProjectMemberInvitedEvent",
        value: function isProjectMemberInvitedEvent(data) {
          return Webhooks2.isProjectMemberEvent(data) && data.action === "invited";
        }
      }, {
        key: "isProjectMemberRemovedEvent",
        value: function isProjectMemberRemovedEvent(data) {
          return Webhooks2.isProjectMemberEvent(data) && data.action === "removed";
        }
      }, {
        key: "isProjectMemberRoleUpdatedEvent",
        value: function isProjectMemberRoleUpdatedEvent(data) {
          return Webhooks2.isProjectMemberEvent(data) && data.action === "role_updated";
        }
      }, {
        key: "isProjectScreenEvent",
        value: function isProjectScreenEvent(data) {
          return data.event === "project.screen";
        }
      }, {
        key: "isProjectScreenCreatedEvent",
        value: function isProjectScreenCreatedEvent(data) {
          return Webhooks2.isProjectScreenEvent(data) && data.action === "created";
        }
      }, {
        key: "isProjectScreenDeletedEvent",
        value: function isProjectScreenDeletedEvent(data) {
          return Webhooks2.isProjectScreenEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isProjectScreenUpdatedEvent",
        value: function isProjectScreenUpdatedEvent(data) {
          return Webhooks2.isProjectScreenEvent(data) && data.action === "updated";
        }
      }, {
        key: "isProjectScreenVersionEvent",
        value: function isProjectScreenVersionEvent(data) {
          return data.event === "project.screen.version";
        }
      }, {
        key: "isProjectScreenVersionCreatedEvent",
        value: function isProjectScreenVersionCreatedEvent(data) {
          return Webhooks2.isProjectScreenVersionEvent(data) && data.action === "created";
        }
      }, {
        key: "isProjectScreenVersionDeletedEvent",
        value: function isProjectScreenVersionDeletedEvent(data) {
          return Webhooks2.isProjectScreenVersionEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isProjectScreenVersionUpdatedEvent",
        value: function isProjectScreenVersionUpdatedEvent(data) {
          return Webhooks2.isProjectScreenVersionEvent(data) && data.action === "updated";
        }
      }, {
        key: "isProjectNoteEvent",
        value: function isProjectNoteEvent(data) {
          return data.event === "project.note";
        }
      }, {
        key: "isProjectNoteCreatedEvent",
        value: function isProjectNoteCreatedEvent(data) {
          return Webhooks2.isProjectNoteEvent(data) && data.action === "created";
        }
      }, {
        key: "isProjectNoteDeletedEvent",
        value: function isProjectNoteDeletedEvent(data) {
          return Webhooks2.isProjectNoteEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isProjectNoteUpdatedEvent",
        value: function isProjectNoteUpdatedEvent(data) {
          return Webhooks2.isProjectNoteEvent(data) && data.action === "updated";
        }
      }, {
        key: "isProjectNoteCommentEvent",
        value: function isProjectNoteCommentEvent(data) {
          return data.event === "project.note.comment";
        }
      }, {
        key: "isProjectNoteCommentCreatedEvent",
        value: function isProjectNoteCommentCreatedEvent(data) {
          return Webhooks2.isProjectNoteCommentEvent(data) && data.action === "created";
        }
      }, {
        key: "isProjectNoteCommentDeletedEvent",
        value: function isProjectNoteCommentDeletedEvent(data) {
          return Webhooks2.isProjectNoteCommentEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isProjectNoteCommentUpdatedEvent",
        value: function isProjectNoteCommentUpdatedEvent(data) {
          return Webhooks2.isProjectNoteCommentEvent(data) && data.action === "updated";
        }
      }, {
        key: "isProjectColorEvent",
        value: function isProjectColorEvent(data) {
          return data.event === "project.color";
        }
      }, {
        key: "isProjectColorCreatedEvent",
        value: function isProjectColorCreatedEvent(data) {
          return Webhooks2.isProjectColorEvent(data) && data.action === "created";
        }
      }, {
        key: "isProjectColorDeletedEvent",
        value: function isProjectColorDeletedEvent(data) {
          return Webhooks2.isProjectColorEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isProjectColorUpdatedEvent",
        value: function isProjectColorUpdatedEvent(data) {
          return Webhooks2.isProjectColorEvent(data) && data.action === "updated";
        }
      }, {
        key: "isProjectFlowBoardEvent",
        value: function isProjectFlowBoardEvent(data) {
          return data.event === "project.flow_board";
        }
      }, {
        key: "isProjectFlowBoardBuiltEvent",
        value: function isProjectFlowBoardBuiltEvent(data) {
          return Webhooks2.isProjectFlowBoardEvent(data) && data.action === "built";
        }
      }, {
        key: "isProjectTextStyleEvent",
        value: function isProjectTextStyleEvent(data) {
          return data.event === "project.text_style";
        }
      }, {
        key: "isProjectTextStyleCreatedEvent",
        value: function isProjectTextStyleCreatedEvent(data) {
          return Webhooks2.isProjectTextStyleEvent(data) && data.action === "created";
        }
      }, {
        key: "isProjectTextStyleDeletedEvent",
        value: function isProjectTextStyleDeletedEvent(data) {
          return Webhooks2.isProjectTextStyleEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isProjectTextStyleUpdatedEvent",
        value: function isProjectTextStyleUpdatedEvent(data) {
          return Webhooks2.isProjectTextStyleEvent(data) && data.action === "updated";
        }
      }, {
        key: "isProjectComponentEvent",
        value: function isProjectComponentEvent(data) {
          return data.event === "project.component";
        }
      }, {
        key: "isProjectComponentCreatedEvent",
        value: function isProjectComponentCreatedEvent(data) {
          return Webhooks2.isProjectComponentEvent(data) && data.action === "created";
        }
      }, {
        key: "isProjectComponentDeletedEvent",
        value: function isProjectComponentDeletedEvent(data) {
          return Webhooks2.isProjectComponentEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isProjectComponentUpdatedEvent",
        value: function isProjectComponentUpdatedEvent(data) {
          return Webhooks2.isProjectComponentEvent(data) && data.action === "updated";
        }
      }, {
        key: "isProjectComponentVersionCreatedEvent",
        value: function isProjectComponentVersionCreatedEvent(data) {
          return Webhooks2.isProjectComponentEvent(data) && data.action === "version_created";
        }
      }, {
        key: "isProjectSpacingTokenEvent",
        value: function isProjectSpacingTokenEvent(data) {
          return data.event === "project.spacing_token";
        }
      }, {
        key: "isProjectSpacingTokenCreatedEvent",
        value: function isProjectSpacingTokenCreatedEvent(data) {
          return Webhooks2.isProjectSpacingTokenEvent(data) && data.action === "created";
        }
      }, {
        key: "isProjectSpacingTokenDeletedEvent",
        value: function isProjectSpacingTokenDeletedEvent(data) {
          return Webhooks2.isProjectSpacingTokenEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isProjectSpacingTokenUpdatedEvent",
        value: function isProjectSpacingTokenUpdatedEvent(data) {
          return Webhooks2.isProjectSpacingTokenEvent(data) && data.action === "updated";
        }
      }, {
        key: "isStyleguideMemberEvent",
        value: function isStyleguideMemberEvent(data) {
          return data.event === "styleguide.member";
        }
      }, {
        key: "isStyleguideMemberInvitedEvent",
        value: function isStyleguideMemberInvitedEvent(data) {
          return Webhooks2.isStyleguideMemberEvent(data) && data.action === "invited";
        }
      }, {
        key: "isStyleguideMemberRemovedEvent",
        value: function isStyleguideMemberRemovedEvent(data) {
          return Webhooks2.isStyleguideMemberEvent(data) && data.action === "removed";
        }
      }, {
        key: "isStyleguideMemberRoleUpdatedEvent",
        value: function isStyleguideMemberRoleUpdatedEvent(data) {
          return Webhooks2.isStyleguideMemberEvent(data) && data.action === "role_updated";
        }
      }, {
        key: "isStyleguideColorEvent",
        value: function isStyleguideColorEvent(data) {
          return data.event === "styleguide.color";
        }
      }, {
        key: "isStyleguideColorCreatedEvent",
        value: function isStyleguideColorCreatedEvent(data) {
          return Webhooks2.isStyleguideColorEvent(data) && data.action === "created";
        }
      }, {
        key: "isStyleguideColorDeletedEvent",
        value: function isStyleguideColorDeletedEvent(data) {
          return Webhooks2.isStyleguideColorEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isStyleguideColorUpdatedEvent",
        value: function isStyleguideColorUpdatedEvent(data) {
          return Webhooks2.isStyleguideColorEvent(data) && data.action === "updated";
        }
      }, {
        key: "isStyleguideTextStyleEvent",
        value: function isStyleguideTextStyleEvent(data) {
          return data.event === "styleguide.text_style";
        }
      }, {
        key: "isStyleguideTextStyleCreatedEvent",
        value: function isStyleguideTextStyleCreatedEvent(data) {
          return Webhooks2.isStyleguideTextStyleEvent(data) && data.action === "created";
        }
      }, {
        key: "isStyleguideTextStyleDeletedEvent",
        value: function isStyleguideTextStyleDeletedEvent(data) {
          return Webhooks2.isStyleguideTextStyleEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isStyleguideTextStyleUpdatedEvent",
        value: function isStyleguideTextStyleUpdatedEvent(data) {
          return Webhooks2.isStyleguideTextStyleEvent(data) && data.action === "updated";
        }
      }, {
        key: "isStyleguideComponentEvent",
        value: function isStyleguideComponentEvent(data) {
          return data.event === "styleguide.component";
        }
      }, {
        key: "isStyleguideComponentCreatedEvent",
        value: function isStyleguideComponentCreatedEvent(data) {
          return Webhooks2.isStyleguideComponentEvent(data) && data.action === "created";
        }
      }, {
        key: "isStyleguideComponentDeletedEvent",
        value: function isStyleguideComponentDeletedEvent(data) {
          return Webhooks2.isStyleguideComponentEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isStyleguideComponentUpdatedEvent",
        value: function isStyleguideComponentUpdatedEvent(data) {
          return Webhooks2.isStyleguideComponentEvent(data) && data.action === "updated";
        }
      }, {
        key: "isStyleguideComponentVersionCreatedEvent",
        value: function isStyleguideComponentVersionCreatedEvent(data) {
          return Webhooks2.isStyleguideComponentEvent(data) && data.action === "version_created";
        }
      }, {
        key: "isStyleguideSpacingTokenEvent",
        value: function isStyleguideSpacingTokenEvent(data) {
          return data.event === "styleguide.spacing_token";
        }
      }, {
        key: "isStyleguideSpacingTokenCreatedEvent",
        value: function isStyleguideSpacingTokenCreatedEvent(data) {
          return Webhooks2.isStyleguideSpacingTokenEvent(data) && data.action === "created";
        }
      }, {
        key: "isStyleguideSpacingTokenDeletedEvent",
        value: function isStyleguideSpacingTokenDeletedEvent(data) {
          return Webhooks2.isStyleguideSpacingTokenEvent(data) && data.action === "deleted";
        }
      }, {
        key: "isStyleguideSpacingTokenUpdatedEvent",
        value: function isStyleguideSpacingTokenUpdatedEvent(data) {
          return Webhooks2.isStyleguideSpacingTokenEvent(data) && data.action === "updated";
        }
      }]);
      return Webhooks2;
    }();
    exports.Webhooks = Webhooks;
  }
});

// node_modules/@zeplin/sdk/dist/api.js
var require_api = __commonJS({
  "node_modules/@zeplin/sdk/dist/api.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    require_es_object_set_prototype_of();
    require_es_object_get_prototype_of();
    require_es_reflect_construct();
    require_es_object_create();
    require_es_symbol();
    require_es_symbol_description();
    require_es_object_to_string();
    require_es_symbol_iterator();
    require_es_array_iterator();
    require_es_string_iterator();
    require_web_dom_collections_iterator();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ZeplinApi = void 0;
    require_es_object_define_property();
    var _axios = _interopRequireDefault(require_axios());
    var _base = require_base();
    var _authorizationApi = require_authorization_api();
    var _colorsApi = require_colors_api();
    var _componentsApi = require_components_api();
    var _connectedComponentsApi = require_connected_components_api();
    var _designTokensApi = require_design_tokens_api();
    var _flowsApi = require_flows_api();
    var _notificationsApi = require_notifications_api();
    var _organizationsApi = require_organizations_api();
    var _projectsApi = require_projects_api();
    var _screensApi = require_screens_api();
    var _spacingApi = require_spacing_api();
    var _styleguidesApi = require_styleguides_api();
    var _textStylesApi = require_text_styles_api();
    var _usersApi = require_users_api();
    var _webhooksApi = require_webhooks_api();
    var _webhooks = require_webhooks();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var ZeplinApi = function(_BaseAPI) {
      _inherits(ZeplinApi2, _BaseAPI);
      var _super = _createSuper(ZeplinApi2);
      function ZeplinApi2(configuration) {
        var _this;
        var basePath = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _base.BASE_PATH;
        var axios = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _axios["default"];
        _classCallCheck(this, ZeplinApi2);
        _this = _super.call(this, configuration, basePath, axios);
        _this.basePath = basePath;
        _this.axios = axios;
        _this.authorization = new _authorizationApi.AuthorizationApi(configuration, basePath, axios);
        _this.colors = new _colorsApi.ColorsApi(configuration, basePath, axios);
        _this.components = new _componentsApi.ComponentsApi(configuration, basePath, axios);
        _this.connectedComponents = new _connectedComponentsApi.ConnectedComponentsApi(configuration, basePath, axios);
        _this.designTokens = new _designTokensApi.DesignTokensApi(configuration, basePath, axios);
        _this.flows = new _flowsApi.FlowsApi(configuration, basePath, axios);
        _this.notifications = new _notificationsApi.NotificationsApi(configuration, basePath, axios);
        _this.organizations = new _organizationsApi.OrganizationsApi(configuration, basePath, axios);
        _this.projects = new _projectsApi.ProjectsApi(configuration, basePath, axios);
        _this.screens = new _screensApi.ScreensApi(configuration, basePath, axios);
        _this.spacing = new _spacingApi.SpacingApi(configuration, basePath, axios);
        _this.styleguides = new _styleguidesApi.StyleguidesApi(configuration, basePath, axios);
        _this.textStyles = new _textStylesApi.TextStylesApi(configuration, basePath, axios);
        _this.users = new _usersApi.UsersApi(configuration, basePath, axios);
        _this.webhooks = new _webhooksApi.WebhooksApi(configuration, basePath, axios);
        return _this;
      }
      return ZeplinApi2;
    }(_base.BaseAPI);
    exports.ZeplinApi = ZeplinApi;
    _defineProperty(ZeplinApi, "Webhooks", _webhooks.Webhooks);
  }
});

// node_modules/core-js/internals/is-regexp.js
var require_is_regexp = __commonJS({
  "node_modules/core-js/internals/is-regexp.js"(exports, module) {
    var isObject = require_is_object();
    var classof = require_classof_raw();
    var wellKnownSymbol = require_well_known_symbol();
    var MATCH = wellKnownSymbol("match");
    module.exports = function(it) {
      var isRegExp;
      return isObject(it) && ((isRegExp = it[MATCH]) !== void 0 ? !!isRegExp : classof(it) == "RegExp");
    };
  }
});

// node_modules/core-js/internals/proxy-accessor.js
var require_proxy_accessor = __commonJS({
  "node_modules/core-js/internals/proxy-accessor.js"(exports, module) {
    var defineProperty = require_object_define_property().f;
    module.exports = function(Target, Source, key) {
      key in Target || defineProperty(Target, key, {
        configurable: true,
        get: function() {
          return Source[key];
        },
        set: function(it) {
          Source[key] = it;
        }
      });
    };
  }
});

// node_modules/core-js/modules/es.regexp.constructor.js
var require_es_regexp_constructor = __commonJS({
  "node_modules/core-js/modules/es.regexp.constructor.js"() {
    var DESCRIPTORS = require_descriptors();
    var global = require_global();
    var uncurryThis = require_function_uncurry_this();
    var isForced = require_is_forced();
    var inheritIfRequired = require_inherit_if_required();
    var createNonEnumerableProperty = require_create_non_enumerable_property();
    var getOwnPropertyNames = require_object_get_own_property_names().f;
    var isPrototypeOf = require_object_is_prototype_of();
    var isRegExp = require_is_regexp();
    var toString = require_to_string();
    var getRegExpFlags = require_regexp_get_flags();
    var stickyHelpers = require_regexp_sticky_helpers();
    var proxyAccessor = require_proxy_accessor();
    var defineBuiltIn = require_define_built_in();
    var fails = require_fails();
    var hasOwn = require_has_own_property();
    var enforceInternalState = require_internal_state().enforce;
    var setSpecies = require_set_species();
    var wellKnownSymbol = require_well_known_symbol();
    var UNSUPPORTED_DOT_ALL = require_regexp_unsupported_dot_all();
    var UNSUPPORTED_NCG = require_regexp_unsupported_ncg();
    var MATCH = wellKnownSymbol("match");
    var NativeRegExp = global.RegExp;
    var RegExpPrototype = NativeRegExp.prototype;
    var SyntaxError = global.SyntaxError;
    var exec = uncurryThis(RegExpPrototype.exec);
    var charAt = uncurryThis("".charAt);
    var replace = uncurryThis("".replace);
    var stringIndexOf = uncurryThis("".indexOf);
    var stringSlice = uncurryThis("".slice);
    var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
    var re1 = /a/g;
    var re2 = /a/g;
    var CORRECT_NEW = new NativeRegExp(re1) !== re1;
    var MISSED_STICKY = stickyHelpers.MISSED_STICKY;
    var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
    var BASE_FORCED = DESCRIPTORS && (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function() {
      re2[MATCH] = false;
      return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, "i") != "/a/i";
    }));
    var handleDotAll = function(string) {
      var length = string.length;
      var index2 = 0;
      var result = "";
      var brackets = false;
      var chr;
      for (; index2 <= length; index2++) {
        chr = charAt(string, index2);
        if (chr === "\\") {
          result += chr + charAt(string, ++index2);
          continue;
        }
        if (!brackets && chr === ".") {
          result += "[\\s\\S]";
        } else {
          if (chr === "[") {
            brackets = true;
          } else if (chr === "]") {
            brackets = false;
          }
          result += chr;
        }
      }
      return result;
    };
    var handleNCG = function(string) {
      var length = string.length;
      var index2 = 0;
      var result = "";
      var named = [];
      var names = {};
      var brackets = false;
      var ncg = false;
      var groupid = 0;
      var groupname = "";
      var chr;
      for (; index2 <= length; index2++) {
        chr = charAt(string, index2);
        if (chr === "\\") {
          chr = chr + charAt(string, ++index2);
        } else if (chr === "]") {
          brackets = false;
        } else if (!brackets)
          switch (true) {
            case chr === "[":
              brackets = true;
              break;
            case chr === "(":
              if (exec(IS_NCG, stringSlice(string, index2 + 1))) {
                index2 += 2;
                ncg = true;
              }
              result += chr;
              groupid++;
              continue;
            case (chr === ">" && ncg):
              if (groupname === "" || hasOwn(names, groupname)) {
                throw new SyntaxError("Invalid capture group name");
              }
              names[groupname] = true;
              named[named.length] = [groupname, groupid];
              ncg = false;
              groupname = "";
              continue;
          }
        if (ncg)
          groupname += chr;
        else
          result += chr;
      }
      return [result, named];
    };
    if (isForced("RegExp", BASE_FORCED)) {
      RegExpWrapper = function RegExp2(pattern, flags) {
        var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);
        var patternIsRegExp = isRegExp(pattern);
        var flagsAreUndefined = flags === void 0;
        var groups = [];
        var rawPattern = pattern;
        var rawFlags, dotAll, sticky, handled, result, state;
        if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
          return pattern;
        }
        if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {
          pattern = pattern.source;
          if (flagsAreUndefined)
            flags = getRegExpFlags(rawPattern);
        }
        pattern = pattern === void 0 ? "" : toString(pattern);
        flags = flags === void 0 ? "" : toString(flags);
        rawPattern = pattern;
        if (UNSUPPORTED_DOT_ALL && "dotAll" in re1) {
          dotAll = !!flags && stringIndexOf(flags, "s") > -1;
          if (dotAll)
            flags = replace(flags, /s/g, "");
        }
        rawFlags = flags;
        if (MISSED_STICKY && "sticky" in re1) {
          sticky = !!flags && stringIndexOf(flags, "y") > -1;
          if (sticky && UNSUPPORTED_Y)
            flags = replace(flags, /y/g, "");
        }
        if (UNSUPPORTED_NCG) {
          handled = handleNCG(pattern);
          pattern = handled[0];
          groups = handled[1];
        }
        result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);
        if (dotAll || sticky || groups.length) {
          state = enforceInternalState(result);
          if (dotAll) {
            state.dotAll = true;
            state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
          }
          if (sticky)
            state.sticky = true;
          if (groups.length)
            state.groups = groups;
        }
        if (pattern !== rawPattern)
          try {
            createNonEnumerableProperty(result, "source", rawPattern === "" ? "(?:)" : rawPattern);
          } catch (error) {
          }
        return result;
      };
      for (keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index; ) {
        proxyAccessor(RegExpWrapper, NativeRegExp, keys[index++]);
      }
      RegExpPrototype.constructor = RegExpWrapper;
      RegExpWrapper.prototype = RegExpPrototype;
      defineBuiltIn(global, "RegExp", RegExpWrapper, { constructor: true });
    }
    var RegExpWrapper;
    var keys;
    var index;
    setSpecies("RegExp");
  }
});

// node_modules/@zeplin/sdk/dist/configuration.js
var require_configuration = __commonJS({
  "node_modules/@zeplin/sdk/dist/configuration.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Configuration = void 0;
    require_es_regexp_constructor();
    require_es_regexp_exec();
    require_es_regexp_to_string();
    require_es_object_define_property();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    var Configuration = function() {
      function Configuration2() {
        var param = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        _classCallCheck(this, Configuration2);
        this.accessToken = param.accessToken;
        this.basePath = param.basePath;
        this.baseOptions = param.baseOptions;
      }
      _createClass(Configuration2, [{
        key: "isJsonMime",
        value: function isJsonMime(mime) {
          var jsonMime = new RegExp("^(application/json|[^;/ 	]+/[^;/ 	]+[+]json)[ 	]*(;.*)?$", "i");
          return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === "application/json-patch+json");
        }
      }]);
      return Configuration2;
    }();
    exports.Configuration = Configuration;
  }
});

// node_modules/@zeplin/sdk/dist/index.js
var require_dist = __commonJS({
  "node_modules/@zeplin/sdk/dist/index.js"(exports) {
    require_es_object_define_property();
    require_es_array_for_each();
    require_web_dom_collections_for_each();
    require_es_object_keys();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      Asset: true,
      AssetContent: true,
      BlendModeEnum: true,
      BoundingRectangle: true,
      Code: true,
      Color: true,
      ColorCreateBody: true,
      ColorData: true,
      ColorDesignToken: true,
      ColorDesignTokenMetadata: true,
      ColorStop: true,
      ColorUpdateBody: true,
      CommentCreateBody: true,
      CommentUpdateBody: true,
      Component: true,
      ComponentGroup: true,
      ComponentSection: true,
      ComponentSectionReference: true,
      ComponentSectionVariant: true,
      ComponentSectionVariantProperty: true,
      ComponentUpdateBody: true,
      ComponentVariantProperty: true,
      ComponentVersion: true,
      ComponentVersionSummary: true,
      ConnectedComponent: true,
      ConnectedComponentLink: true,
      DesignTokenFont: true,
      DesignTokenProject: true,
      DesignTokenResource: true,
      DesignTokenSource: true,
      DesignTokenStyleguide: true,
      DesignTokens: true,
      DisabledOrLinkedRemPreferences: true,
      EnabledRemPreferences: true,
      EntityReference: true,
      ErrorResponse: true,
      FlowBoard: true,
      FlowBoardConnection: true,
      FlowBoardConnectionPosition: true,
      FlowBoardConnector: true,
      FlowBoardConnectorLabel: true,
      FlowBoardGroup: true,
      FlowBoardNode: true,
      FlowBoardNodeColor: true,
      FlowBoardPosition: true,
      FlowBoardScreenNode: true,
      FlowBoardShapeNode: true,
      FlowBoardTextNode: true,
      FlowBoardVariantGroupNode: true,
      Gradient: true,
      Grid: true,
      HorizontalGrid: true,
      HotspotBoundingRectangle: true,
      LanguageEnum: true,
      Layer: true,
      LayerBlur: true,
      LayerBorder: true,
      LayerFill: true,
      LayerPosition: true,
      LayerShadow: true,
      LayerTextStyle: true,
      LayerTextStyleRange: true,
      Link: true,
      LinkDestination: true,
      Notification: true,
      NotificationActor: true,
      NotificationResource: true,
      NotificationTypeEnum: true,
      NotificationUpdateBody: true,
      Organization: true,
      OrganizationBilling: true,
      OrganizationMember: true,
      OrganizationMemberInviteBody: true,
      OrganizationMemberUpdateBody: true,
      OrganizationSummary: true,
      OrganizationWebhook: true,
      OrganizationWebhookCreateBody: true,
      OrganizationWebhookEventEnum: true,
      OrganizationWebhookUpdateBody: true,
      PingEvent: true,
      Project: true,
      ProjectColorCreatedEvent: true,
      ProjectColorCreatedEventResource: true,
      ProjectColorDeletedEvent: true,
      ProjectColorDeletedEventResource: true,
      ProjectColorEvent: true,
      ProjectColorEventContext: true,
      ProjectColorUpdatedEvent: true,
      ProjectComponentCreatedEvent: true,
      ProjectComponentCreatedEventResource: true,
      ProjectComponentDeletedEvent: true,
      ProjectComponentDeletedEventContext: true,
      ProjectComponentDeletedEventResource: true,
      ProjectComponentEvent: true,
      ProjectComponentEventContext: true,
      ProjectComponentUpdatedEvent: true,
      ProjectComponentVersionCreatedEvent: true,
      ProjectFlowBoardBuiltEvent: true,
      ProjectFlowBoardBuiltEventResource: true,
      ProjectFlowBoardEvent: true,
      ProjectFlowBoardEventContext: true,
      ProjectMember: true,
      ProjectMemberEvent: true,
      ProjectMemberEventContext: true,
      ProjectMemberInviteBody: true,
      ProjectMemberInvitedEvent: true,
      ProjectMemberInvitedEventResource: true,
      ProjectMemberRemovedEvent: true,
      ProjectMemberRemovedEventResource: true,
      ProjectMemberRoleUpdatedEvent: true,
      ProjectNoteCommentCreatedEvent: true,
      ProjectNoteCommentCreatedEventResource: true,
      ProjectNoteCommentDeletedEvent: true,
      ProjectNoteCommentDeletedEventResource: true,
      ProjectNoteCommentEvent: true,
      ProjectNoteCommentEventContext: true,
      ProjectNoteCommentUpdatedEvent: true,
      ProjectNoteCreatedEvent: true,
      ProjectNoteCreatedEventResource: true,
      ProjectNoteDeletedEvent: true,
      ProjectNoteDeletedEventResource: true,
      ProjectNoteEvent: true,
      ProjectNoteEventContext: true,
      ProjectNoteUpdatedEvent: true,
      ProjectScreenCreatedEvent: true,
      ProjectScreenCreatedEventResource: true,
      ProjectScreenDeletedEvent: true,
      ProjectScreenDeletedEventContext: true,
      ProjectScreenDeletedEventResource: true,
      ProjectScreenEvent: true,
      ProjectScreenEventContext: true,
      ProjectScreenUpdatedEvent: true,
      ProjectScreenVersionCreatedEvent: true,
      ProjectScreenVersionCreatedEventResource: true,
      ProjectScreenVersionDeletedEvent: true,
      ProjectScreenVersionDeletedEventResource: true,
      ProjectScreenVersionEvent: true,
      ProjectScreenVersionEventContext: true,
      ProjectScreenVersionUpdatedEvent: true,
      ProjectSpacingTokenCreatedEvent: true,
      ProjectSpacingTokenCreatedEventResource: true,
      ProjectSpacingTokenDeletedEvent: true,
      ProjectSpacingTokenDeletedEventResource: true,
      ProjectSpacingTokenEvent: true,
      ProjectSpacingTokenEventContext: true,
      ProjectSpacingTokenUpdatedEvent: true,
      ProjectStatusEnum: true,
      ProjectTextStyleCreatedEvent: true,
      ProjectTextStyleCreatedEventResource: true,
      ProjectTextStyleDeletedEvent: true,
      ProjectTextStyleDeletedEventResource: true,
      ProjectTextStyleEvent: true,
      ProjectTextStyleEventContext: true,
      ProjectTextStyleUpdatedEvent: true,
      ProjectUpdateBody: true,
      ProjectWebhook: true,
      ProjectWebhookCreateBody: true,
      ProjectWebhookEventEnum: true,
      ProjectWebhookUpdateBody: true,
      RemPreferences: true,
      ResourceProjectSource: true,
      ResourceSource: true,
      ResourceStyleguideSource: true,
      Screen: true,
      ScreenNote: true,
      ScreenNoteColor: true,
      ScreenNoteColorNameEnum: true,
      ScreenNoteComment: true,
      ScreenNoteCreateBody: true,
      ScreenNotePosition: true,
      ScreenNoteStatusEnum: true,
      ScreenNoteUpdateBody: true,
      ScreenSection: true,
      ScreenUpdateBody: true,
      ScreenVariant: true,
      ScreenVariantGroup: true,
      ScreenVariantGroupReference: true,
      ScreenVariantGroupValue: true,
      ScreenVersion: true,
      ScreenVersionSummary: true,
      SnapshotImage: true,
      SourceEnum: true,
      SpacingDesignToken: true,
      SpacingDesignTokenMetadata: true,
      SpacingSection: true,
      SpacingToken: true,
      SpacingTokenColor: true,
      SpacingTokenUpdateBody: true,
      Styleguide: true,
      StyleguideColorCreatedEvent: true,
      StyleguideColorDeletedEvent: true,
      StyleguideColorEvent: true,
      StyleguideColorEventContext: true,
      StyleguideColorUpdatedEvent: true,
      StyleguideComponentCreatedEvent: true,
      StyleguideComponentDeletedEvent: true,
      StyleguideComponentDeletedEventContext: true,
      StyleguideComponentEvent: true,
      StyleguideComponentEventContext: true,
      StyleguideComponentUpdatedEvent: true,
      StyleguideComponentVersionCreatedEvent: true,
      StyleguideMember: true,
      StyleguideMemberEvent: true,
      StyleguideMemberEventContext: true,
      StyleguideMemberInviteBody: true,
      StyleguideMemberInvitedEvent: true,
      StyleguideMemberInvitedEventResource: true,
      StyleguideMemberRemovedEvent: true,
      StyleguideMemberRemovedEventResource: true,
      StyleguideMemberRoleUpdatedEvent: true,
      StyleguideSpacingTokenCreatedEvent: true,
      StyleguideSpacingTokenDeletedEvent: true,
      StyleguideSpacingTokenEvent: true,
      StyleguideSpacingTokenEventContext: true,
      StyleguideSpacingTokenUpdatedEvent: true,
      StyleguideStatusEnum: true,
      StyleguideTextStyleCreatedEvent: true,
      StyleguideTextStyleDeletedEvent: true,
      StyleguideTextStyleEvent: true,
      StyleguideTextStyleEventContext: true,
      StyleguideTextStyleUpdatedEvent: true,
      StyleguideUpdateBody: true,
      StyleguideWebhook: true,
      StyleguideWebhookCreateBody: true,
      StyleguideWebhookEventEnum: true,
      StyleguideWebhookUpdateBody: true,
      TextStyle: true,
      TextStyleData: true,
      TextStyleDesignToken: true,
      TextStyleDesignTokenMetadata: true,
      TextStyleDesignTokenValue: true,
      TextStyleUpdateBody: true,
      Thumbnails: true,
      TokenCreateAuthorizationCodeBody: true,
      TokenCreateBody: true,
      TokenCreateRefreshTokenBody: true,
      TokenResponse: true,
      User: true,
      UserWebhook: true,
      UserWebhookCreateBody: true,
      UserWebhookEventEnum: true,
      UserWebhookUpdateBody: true,
      VersionCommit: true,
      VersionCommitColor: true,
      VerticalGrid: true,
      WebhookEvent: true,
      WebhookEventActor: true,
      WebhookHealthEnum: true,
      WebhookStatusEnum: true,
      WorkflowStatus: true,
      WorkflowStatusColor: true,
      WorkspaceNotificationCreatedEvent: true,
      WorkspaceNotificationCreatedEventResource: true,
      WorkspaceNotificationEvent: true,
      WorkspaceNotificationUpdatedEvent: true,
      WorkspaceOrganizationEvent: true,
      WorkspaceOrganizationJoinRequestedEvent: true,
      WorkspaceOrganizationMemberEvent: true,
      WorkspaceOrganizationMemberEventContext: true,
      WorkspaceOrganizationMemberInvitedEvent: true,
      WorkspaceOrganizationMemberInvitedEventResource: true,
      WorkspaceOrganizationMemberRemovedEvent: true,
      WorkspaceOrganizationMemberRemovedEventResource: true,
      WorkspaceOrganizationMemberRoleUpdatedEvent: true,
      WorkspaceOrganizationMemberTagUpdatedEvent: true,
      WorkspaceOrganizationUpdatedEvent: true,
      WorkspaceOrganizationUpdatedEventResource: true,
      WorkspaceProjectActivatedEvent: true,
      WorkspaceProjectArchivedEvent: true,
      WorkspaceProjectCreatedEvent: true,
      WorkspaceProjectCreatedEventResource: true,
      WorkspaceProjectDeletedEvent: true,
      WorkspaceProjectDeletedEventResource: true,
      WorkspaceProjectEvent: true,
      WorkspaceProjectStyleguideLinkedEvent: true,
      WorkspaceProjectStyleguideUnlinkedEvent: true,
      WorkspaceProjectUpdatedEvent: true,
      WorkspaceStyleguideActivatedEvent: true,
      WorkspaceStyleguideArchivedEvent: true,
      WorkspaceStyleguideCreatedEvent: true,
      WorkspaceStyleguideCreatedEventResource: true,
      WorkspaceStyleguideDeletedEvent: true,
      WorkspaceStyleguideDeletedEventResource: true,
      WorkspaceStyleguideEvent: true,
      WorkspaceStyleguideStyleguideLinkedEvent: true,
      WorkspaceStyleguideStyleguideUnlinkedEvent: true,
      WorkspaceStyleguideUpdatedEvent: true,
      ZeplinApplication: true
    };
    Object.defineProperty(exports, "Asset", {
      enumerable: true,
      get: function get() {
        return _models.Asset;
      }
    });
    Object.defineProperty(exports, "AssetContent", {
      enumerable: true,
      get: function get() {
        return _models.AssetContent;
      }
    });
    Object.defineProperty(exports, "BlendModeEnum", {
      enumerable: true,
      get: function get() {
        return _models.BlendModeEnum;
      }
    });
    Object.defineProperty(exports, "BoundingRectangle", {
      enumerable: true,
      get: function get() {
        return _models.BoundingRectangle;
      }
    });
    Object.defineProperty(exports, "Code", {
      enumerable: true,
      get: function get() {
        return _models.Code;
      }
    });
    Object.defineProperty(exports, "Color", {
      enumerable: true,
      get: function get() {
        return _models.Color;
      }
    });
    Object.defineProperty(exports, "ColorCreateBody", {
      enumerable: true,
      get: function get() {
        return _models.ColorCreateBody;
      }
    });
    Object.defineProperty(exports, "ColorData", {
      enumerable: true,
      get: function get() {
        return _models.ColorData;
      }
    });
    Object.defineProperty(exports, "ColorDesignToken", {
      enumerable: true,
      get: function get() {
        return _models.ColorDesignToken;
      }
    });
    Object.defineProperty(exports, "ColorDesignTokenMetadata", {
      enumerable: true,
      get: function get() {
        return _models.ColorDesignTokenMetadata;
      }
    });
    Object.defineProperty(exports, "ColorStop", {
      enumerable: true,
      get: function get() {
        return _models.ColorStop;
      }
    });
    Object.defineProperty(exports, "ColorUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.ColorUpdateBody;
      }
    });
    Object.defineProperty(exports, "CommentCreateBody", {
      enumerable: true,
      get: function get() {
        return _models.CommentCreateBody;
      }
    });
    Object.defineProperty(exports, "CommentUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.CommentUpdateBody;
      }
    });
    Object.defineProperty(exports, "Component", {
      enumerable: true,
      get: function get() {
        return _models.Component;
      }
    });
    Object.defineProperty(exports, "ComponentGroup", {
      enumerable: true,
      get: function get() {
        return _models.ComponentGroup;
      }
    });
    Object.defineProperty(exports, "ComponentSection", {
      enumerable: true,
      get: function get() {
        return _models.ComponentSection;
      }
    });
    Object.defineProperty(exports, "ComponentSectionReference", {
      enumerable: true,
      get: function get() {
        return _models.ComponentSectionReference;
      }
    });
    Object.defineProperty(exports, "ComponentSectionVariant", {
      enumerable: true,
      get: function get() {
        return _models.ComponentSectionVariant;
      }
    });
    Object.defineProperty(exports, "ComponentSectionVariantProperty", {
      enumerable: true,
      get: function get() {
        return _models.ComponentSectionVariantProperty;
      }
    });
    Object.defineProperty(exports, "ComponentUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.ComponentUpdateBody;
      }
    });
    Object.defineProperty(exports, "ComponentVariantProperty", {
      enumerable: true,
      get: function get() {
        return _models.ComponentVariantProperty;
      }
    });
    Object.defineProperty(exports, "ComponentVersion", {
      enumerable: true,
      get: function get() {
        return _models.ComponentVersion;
      }
    });
    Object.defineProperty(exports, "ComponentVersionSummary", {
      enumerable: true,
      get: function get() {
        return _models.ComponentVersionSummary;
      }
    });
    Object.defineProperty(exports, "ConnectedComponent", {
      enumerable: true,
      get: function get() {
        return _models.ConnectedComponent;
      }
    });
    Object.defineProperty(exports, "ConnectedComponentLink", {
      enumerable: true,
      get: function get() {
        return _models.ConnectedComponentLink;
      }
    });
    Object.defineProperty(exports, "DesignTokenFont", {
      enumerable: true,
      get: function get() {
        return _models.DesignTokenFont;
      }
    });
    Object.defineProperty(exports, "DesignTokenProject", {
      enumerable: true,
      get: function get() {
        return _models.DesignTokenProject;
      }
    });
    Object.defineProperty(exports, "DesignTokenResource", {
      enumerable: true,
      get: function get() {
        return _models.DesignTokenResource;
      }
    });
    Object.defineProperty(exports, "DesignTokenSource", {
      enumerable: true,
      get: function get() {
        return _models.DesignTokenSource;
      }
    });
    Object.defineProperty(exports, "DesignTokenStyleguide", {
      enumerable: true,
      get: function get() {
        return _models.DesignTokenStyleguide;
      }
    });
    Object.defineProperty(exports, "DesignTokens", {
      enumerable: true,
      get: function get() {
        return _models.DesignTokens;
      }
    });
    Object.defineProperty(exports, "DisabledOrLinkedRemPreferences", {
      enumerable: true,
      get: function get() {
        return _models.DisabledOrLinkedRemPreferences;
      }
    });
    Object.defineProperty(exports, "EnabledRemPreferences", {
      enumerable: true,
      get: function get() {
        return _models.EnabledRemPreferences;
      }
    });
    Object.defineProperty(exports, "EntityReference", {
      enumerable: true,
      get: function get() {
        return _models.EntityReference;
      }
    });
    Object.defineProperty(exports, "ErrorResponse", {
      enumerable: true,
      get: function get() {
        return _models.ErrorResponse;
      }
    });
    Object.defineProperty(exports, "FlowBoard", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoard;
      }
    });
    Object.defineProperty(exports, "FlowBoardConnection", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardConnection;
      }
    });
    Object.defineProperty(exports, "FlowBoardConnectionPosition", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardConnectionPosition;
      }
    });
    Object.defineProperty(exports, "FlowBoardConnector", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardConnector;
      }
    });
    Object.defineProperty(exports, "FlowBoardConnectorLabel", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardConnectorLabel;
      }
    });
    Object.defineProperty(exports, "FlowBoardGroup", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardGroup;
      }
    });
    Object.defineProperty(exports, "FlowBoardNode", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardNode;
      }
    });
    Object.defineProperty(exports, "FlowBoardNodeColor", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardNodeColor;
      }
    });
    Object.defineProperty(exports, "FlowBoardPosition", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardPosition;
      }
    });
    Object.defineProperty(exports, "FlowBoardScreenNode", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardScreenNode;
      }
    });
    Object.defineProperty(exports, "FlowBoardShapeNode", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardShapeNode;
      }
    });
    Object.defineProperty(exports, "FlowBoardTextNode", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardTextNode;
      }
    });
    Object.defineProperty(exports, "FlowBoardVariantGroupNode", {
      enumerable: true,
      get: function get() {
        return _models.FlowBoardVariantGroupNode;
      }
    });
    Object.defineProperty(exports, "Gradient", {
      enumerable: true,
      get: function get() {
        return _models.Gradient;
      }
    });
    Object.defineProperty(exports, "Grid", {
      enumerable: true,
      get: function get() {
        return _models.Grid;
      }
    });
    Object.defineProperty(exports, "HorizontalGrid", {
      enumerable: true,
      get: function get() {
        return _models.HorizontalGrid;
      }
    });
    Object.defineProperty(exports, "HotspotBoundingRectangle", {
      enumerable: true,
      get: function get() {
        return _models.HotspotBoundingRectangle;
      }
    });
    Object.defineProperty(exports, "LanguageEnum", {
      enumerable: true,
      get: function get() {
        return _models.LanguageEnum;
      }
    });
    Object.defineProperty(exports, "Layer", {
      enumerable: true,
      get: function get() {
        return _models.Layer;
      }
    });
    Object.defineProperty(exports, "LayerBlur", {
      enumerable: true,
      get: function get() {
        return _models.LayerBlur;
      }
    });
    Object.defineProperty(exports, "LayerBorder", {
      enumerable: true,
      get: function get() {
        return _models.LayerBorder;
      }
    });
    Object.defineProperty(exports, "LayerFill", {
      enumerable: true,
      get: function get() {
        return _models.LayerFill;
      }
    });
    Object.defineProperty(exports, "LayerPosition", {
      enumerable: true,
      get: function get() {
        return _models.LayerPosition;
      }
    });
    Object.defineProperty(exports, "LayerShadow", {
      enumerable: true,
      get: function get() {
        return _models.LayerShadow;
      }
    });
    Object.defineProperty(exports, "LayerTextStyle", {
      enumerable: true,
      get: function get() {
        return _models.LayerTextStyle;
      }
    });
    Object.defineProperty(exports, "LayerTextStyleRange", {
      enumerable: true,
      get: function get() {
        return _models.LayerTextStyleRange;
      }
    });
    Object.defineProperty(exports, "Link", {
      enumerable: true,
      get: function get() {
        return _models.Link;
      }
    });
    Object.defineProperty(exports, "LinkDestination", {
      enumerable: true,
      get: function get() {
        return _models.LinkDestination;
      }
    });
    Object.defineProperty(exports, "Notification", {
      enumerable: true,
      get: function get() {
        return _models.Notification;
      }
    });
    Object.defineProperty(exports, "NotificationActor", {
      enumerable: true,
      get: function get() {
        return _models.NotificationActor;
      }
    });
    Object.defineProperty(exports, "NotificationResource", {
      enumerable: true,
      get: function get() {
        return _models.NotificationResource;
      }
    });
    Object.defineProperty(exports, "NotificationTypeEnum", {
      enumerable: true,
      get: function get() {
        return _models.NotificationTypeEnum;
      }
    });
    Object.defineProperty(exports, "NotificationUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.NotificationUpdateBody;
      }
    });
    Object.defineProperty(exports, "Organization", {
      enumerable: true,
      get: function get() {
        return _models.Organization;
      }
    });
    Object.defineProperty(exports, "OrganizationBilling", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationBilling;
      }
    });
    Object.defineProperty(exports, "OrganizationMember", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationMember;
      }
    });
    Object.defineProperty(exports, "OrganizationMemberInviteBody", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationMemberInviteBody;
      }
    });
    Object.defineProperty(exports, "OrganizationMemberUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationMemberUpdateBody;
      }
    });
    Object.defineProperty(exports, "OrganizationSummary", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationSummary;
      }
    });
    Object.defineProperty(exports, "OrganizationWebhook", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationWebhook;
      }
    });
    Object.defineProperty(exports, "OrganizationWebhookCreateBody", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationWebhookCreateBody;
      }
    });
    Object.defineProperty(exports, "OrganizationWebhookEventEnum", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationWebhookEventEnum;
      }
    });
    Object.defineProperty(exports, "OrganizationWebhookUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.OrganizationWebhookUpdateBody;
      }
    });
    Object.defineProperty(exports, "PingEvent", {
      enumerable: true,
      get: function get() {
        return _models.PingEvent;
      }
    });
    Object.defineProperty(exports, "Project", {
      enumerable: true,
      get: function get() {
        return _models.Project;
      }
    });
    Object.defineProperty(exports, "ProjectColorCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectColorCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectColorCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectColorCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectColorDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectColorDeletedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectColorDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectColorDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectColorEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectColorEvent;
      }
    });
    Object.defineProperty(exports, "ProjectColorEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectColorEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectColorUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectColorUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectComponentCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectComponentCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectComponentDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentDeletedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectComponentDeletedEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentDeletedEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectComponentDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectComponentEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentEvent;
      }
    });
    Object.defineProperty(exports, "ProjectComponentEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectComponentUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectComponentVersionCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectComponentVersionCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectFlowBoardBuiltEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectFlowBoardBuiltEvent;
      }
    });
    Object.defineProperty(exports, "ProjectFlowBoardBuiltEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectFlowBoardBuiltEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectFlowBoardEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectFlowBoardEvent;
      }
    });
    Object.defineProperty(exports, "ProjectFlowBoardEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectFlowBoardEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectMember", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMember;
      }
    });
    Object.defineProperty(exports, "ProjectMemberEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMemberEvent;
      }
    });
    Object.defineProperty(exports, "ProjectMemberEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMemberEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectMemberInviteBody", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMemberInviteBody;
      }
    });
    Object.defineProperty(exports, "ProjectMemberInvitedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMemberInvitedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectMemberInvitedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMemberInvitedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectMemberRemovedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMemberRemovedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectMemberRemovedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMemberRemovedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectMemberRoleUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectMemberRoleUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCommentCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCommentCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCommentCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCommentCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCommentDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCommentDeletedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCommentDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCommentDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCommentEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCommentEvent;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCommentEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCommentEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCommentUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCommentUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectNoteCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectNoteDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteDeletedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectNoteDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectNoteEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteEvent;
      }
    });
    Object.defineProperty(exports, "ProjectNoteEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectNoteUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectNoteUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectScreenCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectScreenCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectScreenDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenDeletedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectScreenDeletedEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenDeletedEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectScreenDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectScreenEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenEvent;
      }
    });
    Object.defineProperty(exports, "ProjectScreenEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectScreenUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectScreenVersionCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenVersionCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectScreenVersionCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenVersionCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectScreenVersionDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenVersionDeletedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectScreenVersionDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenVersionDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectScreenVersionEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenVersionEvent;
      }
    });
    Object.defineProperty(exports, "ProjectScreenVersionEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenVersionEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectScreenVersionUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectScreenVersionUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectSpacingTokenCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectSpacingTokenCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectSpacingTokenCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectSpacingTokenCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectSpacingTokenDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectSpacingTokenDeletedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectSpacingTokenDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectSpacingTokenDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectSpacingTokenEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectSpacingTokenEvent;
      }
    });
    Object.defineProperty(exports, "ProjectSpacingTokenEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectSpacingTokenEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectSpacingTokenUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectSpacingTokenUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectStatusEnum", {
      enumerable: true,
      get: function get() {
        return _models.ProjectStatusEnum;
      }
    });
    Object.defineProperty(exports, "ProjectTextStyleCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectTextStyleCreatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectTextStyleCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectTextStyleCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectTextStyleDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectTextStyleDeletedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectTextStyleDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.ProjectTextStyleDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "ProjectTextStyleEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectTextStyleEvent;
      }
    });
    Object.defineProperty(exports, "ProjectTextStyleEventContext", {
      enumerable: true,
      get: function get() {
        return _models.ProjectTextStyleEventContext;
      }
    });
    Object.defineProperty(exports, "ProjectTextStyleUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.ProjectTextStyleUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ProjectUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.ProjectUpdateBody;
      }
    });
    Object.defineProperty(exports, "ProjectWebhook", {
      enumerable: true,
      get: function get() {
        return _models.ProjectWebhook;
      }
    });
    Object.defineProperty(exports, "ProjectWebhookCreateBody", {
      enumerable: true,
      get: function get() {
        return _models.ProjectWebhookCreateBody;
      }
    });
    Object.defineProperty(exports, "ProjectWebhookEventEnum", {
      enumerable: true,
      get: function get() {
        return _models.ProjectWebhookEventEnum;
      }
    });
    Object.defineProperty(exports, "ProjectWebhookUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.ProjectWebhookUpdateBody;
      }
    });
    Object.defineProperty(exports, "RemPreferences", {
      enumerable: true,
      get: function get() {
        return _models.RemPreferences;
      }
    });
    Object.defineProperty(exports, "ResourceProjectSource", {
      enumerable: true,
      get: function get() {
        return _models.ResourceProjectSource;
      }
    });
    Object.defineProperty(exports, "ResourceSource", {
      enumerable: true,
      get: function get() {
        return _models.ResourceSource;
      }
    });
    Object.defineProperty(exports, "ResourceStyleguideSource", {
      enumerable: true,
      get: function get() {
        return _models.ResourceStyleguideSource;
      }
    });
    Object.defineProperty(exports, "Screen", {
      enumerable: true,
      get: function get() {
        return _models.Screen;
      }
    });
    Object.defineProperty(exports, "ScreenNote", {
      enumerable: true,
      get: function get() {
        return _models.ScreenNote;
      }
    });
    Object.defineProperty(exports, "ScreenNoteColor", {
      enumerable: true,
      get: function get() {
        return _models.ScreenNoteColor;
      }
    });
    Object.defineProperty(exports, "ScreenNoteColorNameEnum", {
      enumerable: true,
      get: function get() {
        return _models.ScreenNoteColorNameEnum;
      }
    });
    Object.defineProperty(exports, "ScreenNoteComment", {
      enumerable: true,
      get: function get() {
        return _models.ScreenNoteComment;
      }
    });
    Object.defineProperty(exports, "ScreenNoteCreateBody", {
      enumerable: true,
      get: function get() {
        return _models.ScreenNoteCreateBody;
      }
    });
    Object.defineProperty(exports, "ScreenNotePosition", {
      enumerable: true,
      get: function get() {
        return _models.ScreenNotePosition;
      }
    });
    Object.defineProperty(exports, "ScreenNoteStatusEnum", {
      enumerable: true,
      get: function get() {
        return _models.ScreenNoteStatusEnum;
      }
    });
    Object.defineProperty(exports, "ScreenNoteUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.ScreenNoteUpdateBody;
      }
    });
    Object.defineProperty(exports, "ScreenSection", {
      enumerable: true,
      get: function get() {
        return _models.ScreenSection;
      }
    });
    Object.defineProperty(exports, "ScreenUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.ScreenUpdateBody;
      }
    });
    Object.defineProperty(exports, "ScreenVariant", {
      enumerable: true,
      get: function get() {
        return _models.ScreenVariant;
      }
    });
    Object.defineProperty(exports, "ScreenVariantGroup", {
      enumerable: true,
      get: function get() {
        return _models.ScreenVariantGroup;
      }
    });
    Object.defineProperty(exports, "ScreenVariantGroupReference", {
      enumerable: true,
      get: function get() {
        return _models.ScreenVariantGroupReference;
      }
    });
    Object.defineProperty(exports, "ScreenVariantGroupValue", {
      enumerable: true,
      get: function get() {
        return _models.ScreenVariantGroupValue;
      }
    });
    Object.defineProperty(exports, "ScreenVersion", {
      enumerable: true,
      get: function get() {
        return _models.ScreenVersion;
      }
    });
    Object.defineProperty(exports, "ScreenVersionSummary", {
      enumerable: true,
      get: function get() {
        return _models.ScreenVersionSummary;
      }
    });
    Object.defineProperty(exports, "SnapshotImage", {
      enumerable: true,
      get: function get() {
        return _models.SnapshotImage;
      }
    });
    Object.defineProperty(exports, "SourceEnum", {
      enumerable: true,
      get: function get() {
        return _models.SourceEnum;
      }
    });
    Object.defineProperty(exports, "SpacingDesignToken", {
      enumerable: true,
      get: function get() {
        return _models.SpacingDesignToken;
      }
    });
    Object.defineProperty(exports, "SpacingDesignTokenMetadata", {
      enumerable: true,
      get: function get() {
        return _models.SpacingDesignTokenMetadata;
      }
    });
    Object.defineProperty(exports, "SpacingSection", {
      enumerable: true,
      get: function get() {
        return _models.SpacingSection;
      }
    });
    Object.defineProperty(exports, "SpacingToken", {
      enumerable: true,
      get: function get() {
        return _models.SpacingToken;
      }
    });
    Object.defineProperty(exports, "SpacingTokenColor", {
      enumerable: true,
      get: function get() {
        return _models.SpacingTokenColor;
      }
    });
    Object.defineProperty(exports, "SpacingTokenUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.SpacingTokenUpdateBody;
      }
    });
    Object.defineProperty(exports, "Styleguide", {
      enumerable: true,
      get: function get() {
        return _models.Styleguide;
      }
    });
    Object.defineProperty(exports, "StyleguideColorCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideColorCreatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideColorDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideColorDeletedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideColorEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideColorEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideColorEventContext", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideColorEventContext;
      }
    });
    Object.defineProperty(exports, "StyleguideColorUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideColorUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideComponentCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideComponentCreatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideComponentDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideComponentDeletedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideComponentDeletedEventContext", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideComponentDeletedEventContext;
      }
    });
    Object.defineProperty(exports, "StyleguideComponentEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideComponentEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideComponentEventContext", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideComponentEventContext;
      }
    });
    Object.defineProperty(exports, "StyleguideComponentUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideComponentUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideComponentVersionCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideComponentVersionCreatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideMember", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMember;
      }
    });
    Object.defineProperty(exports, "StyleguideMemberEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMemberEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideMemberEventContext", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMemberEventContext;
      }
    });
    Object.defineProperty(exports, "StyleguideMemberInviteBody", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMemberInviteBody;
      }
    });
    Object.defineProperty(exports, "StyleguideMemberInvitedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMemberInvitedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideMemberInvitedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMemberInvitedEventResource;
      }
    });
    Object.defineProperty(exports, "StyleguideMemberRemovedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMemberRemovedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideMemberRemovedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMemberRemovedEventResource;
      }
    });
    Object.defineProperty(exports, "StyleguideMemberRoleUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideMemberRoleUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideSpacingTokenCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideSpacingTokenCreatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideSpacingTokenDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideSpacingTokenDeletedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideSpacingTokenEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideSpacingTokenEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideSpacingTokenEventContext", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideSpacingTokenEventContext;
      }
    });
    Object.defineProperty(exports, "StyleguideSpacingTokenUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideSpacingTokenUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideStatusEnum", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideStatusEnum;
      }
    });
    Object.defineProperty(exports, "StyleguideTextStyleCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideTextStyleCreatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideTextStyleDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideTextStyleDeletedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideTextStyleEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideTextStyleEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideTextStyleEventContext", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideTextStyleEventContext;
      }
    });
    Object.defineProperty(exports, "StyleguideTextStyleUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideTextStyleUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "StyleguideUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideUpdateBody;
      }
    });
    Object.defineProperty(exports, "StyleguideWebhook", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideWebhook;
      }
    });
    Object.defineProperty(exports, "StyleguideWebhookCreateBody", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideWebhookCreateBody;
      }
    });
    Object.defineProperty(exports, "StyleguideWebhookEventEnum", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideWebhookEventEnum;
      }
    });
    Object.defineProperty(exports, "StyleguideWebhookUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.StyleguideWebhookUpdateBody;
      }
    });
    Object.defineProperty(exports, "TextStyle", {
      enumerable: true,
      get: function get() {
        return _models.TextStyle;
      }
    });
    Object.defineProperty(exports, "TextStyleData", {
      enumerable: true,
      get: function get() {
        return _models.TextStyleData;
      }
    });
    Object.defineProperty(exports, "TextStyleDesignToken", {
      enumerable: true,
      get: function get() {
        return _models.TextStyleDesignToken;
      }
    });
    Object.defineProperty(exports, "TextStyleDesignTokenMetadata", {
      enumerable: true,
      get: function get() {
        return _models.TextStyleDesignTokenMetadata;
      }
    });
    Object.defineProperty(exports, "TextStyleDesignTokenValue", {
      enumerable: true,
      get: function get() {
        return _models.TextStyleDesignTokenValue;
      }
    });
    Object.defineProperty(exports, "TextStyleUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.TextStyleUpdateBody;
      }
    });
    Object.defineProperty(exports, "Thumbnails", {
      enumerable: true,
      get: function get() {
        return _models.Thumbnails;
      }
    });
    Object.defineProperty(exports, "TokenCreateAuthorizationCodeBody", {
      enumerable: true,
      get: function get() {
        return _models.TokenCreateAuthorizationCodeBody;
      }
    });
    Object.defineProperty(exports, "TokenCreateBody", {
      enumerable: true,
      get: function get() {
        return _models.TokenCreateBody;
      }
    });
    Object.defineProperty(exports, "TokenCreateRefreshTokenBody", {
      enumerable: true,
      get: function get() {
        return _models.TokenCreateRefreshTokenBody;
      }
    });
    Object.defineProperty(exports, "TokenResponse", {
      enumerable: true,
      get: function get() {
        return _models.TokenResponse;
      }
    });
    Object.defineProperty(exports, "User", {
      enumerable: true,
      get: function get() {
        return _models.User;
      }
    });
    Object.defineProperty(exports, "UserWebhook", {
      enumerable: true,
      get: function get() {
        return _models.UserWebhook;
      }
    });
    Object.defineProperty(exports, "UserWebhookCreateBody", {
      enumerable: true,
      get: function get() {
        return _models.UserWebhookCreateBody;
      }
    });
    Object.defineProperty(exports, "UserWebhookEventEnum", {
      enumerable: true,
      get: function get() {
        return _models.UserWebhookEventEnum;
      }
    });
    Object.defineProperty(exports, "UserWebhookUpdateBody", {
      enumerable: true,
      get: function get() {
        return _models.UserWebhookUpdateBody;
      }
    });
    Object.defineProperty(exports, "VersionCommit", {
      enumerable: true,
      get: function get() {
        return _models.VersionCommit;
      }
    });
    Object.defineProperty(exports, "VersionCommitColor", {
      enumerable: true,
      get: function get() {
        return _models.VersionCommitColor;
      }
    });
    Object.defineProperty(exports, "VerticalGrid", {
      enumerable: true,
      get: function get() {
        return _models.VerticalGrid;
      }
    });
    Object.defineProperty(exports, "WebhookEvent", {
      enumerable: true,
      get: function get() {
        return _models.WebhookEvent;
      }
    });
    Object.defineProperty(exports, "WebhookEventActor", {
      enumerable: true,
      get: function get() {
        return _models.WebhookEventActor;
      }
    });
    Object.defineProperty(exports, "WebhookHealthEnum", {
      enumerable: true,
      get: function get() {
        return _models.WebhookHealthEnum;
      }
    });
    Object.defineProperty(exports, "WebhookStatusEnum", {
      enumerable: true,
      get: function get() {
        return _models.WebhookStatusEnum;
      }
    });
    Object.defineProperty(exports, "WorkflowStatus", {
      enumerable: true,
      get: function get() {
        return _models.WorkflowStatus;
      }
    });
    Object.defineProperty(exports, "WorkflowStatusColor", {
      enumerable: true,
      get: function get() {
        return _models.WorkflowStatusColor;
      }
    });
    Object.defineProperty(exports, "WorkspaceNotificationCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceNotificationCreatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceNotificationCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceNotificationCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "WorkspaceNotificationEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceNotificationEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceNotificationUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceNotificationUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationJoinRequestedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationJoinRequestedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationMemberEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationMemberEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationMemberEventContext", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationMemberEventContext;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationMemberInvitedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationMemberInvitedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationMemberInvitedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationMemberInvitedEventResource;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationMemberRemovedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationMemberRemovedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationMemberRemovedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationMemberRemovedEventResource;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationMemberRoleUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationMemberRoleUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationMemberTagUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationMemberTagUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceOrganizationUpdatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceOrganizationUpdatedEventResource;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectActivatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectActivatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectArchivedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectArchivedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectCreatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectDeletedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectStyleguideLinkedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectStyleguideLinkedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectStyleguideUnlinkedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectStyleguideUnlinkedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceProjectUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceProjectUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideActivatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideActivatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideArchivedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideArchivedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideCreatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideCreatedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideCreatedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideCreatedEventResource;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideDeletedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideDeletedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideDeletedEventResource", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideDeletedEventResource;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideStyleguideLinkedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideStyleguideLinkedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideStyleguideUnlinkedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideStyleguideUnlinkedEvent;
      }
    });
    Object.defineProperty(exports, "WorkspaceStyleguideUpdatedEvent", {
      enumerable: true,
      get: function get() {
        return _models.WorkspaceStyleguideUpdatedEvent;
      }
    });
    Object.defineProperty(exports, "ZeplinApplication", {
      enumerable: true,
      get: function get() {
        return _models.ZeplinApplication;
      }
    });
    var _models = require_models();
    var _api = require_api();
    Object.keys(_api).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key))
        return;
      if (key in exports && exports[key] === _api[key])
        return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _api[key];
        }
      });
    });
    var _configuration = require_configuration();
    Object.keys(_configuration).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key))
        return;
      if (key in exports && exports[key] === _configuration[key])
        return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function get() {
          return _configuration[key];
        }
      });
    });
  }
});
export default require_dist();
//# sourceMappingURL=@zeplin_sdk.js.map
